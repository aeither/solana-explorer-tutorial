{"version":3,"sources":["../../src/use-tabs.ts"],"names":["useClickable","createDescendantContext","useControllableState","useId","useSafeLayoutEffect","createContext","getValidChildren","mergeRefs","callAllHandlers","determineLazyBehavior","focus","isUndefined","normalizeEventKey","React","TabsDescendantsProvider","useTabsDescendantsContext","useTabsDescendants","useTabsDescendant","useTabs","props","defaultIndex","onChange","index","isManual","isLazy","lazyBehavior","orientation","direction","htmlProps","focusedIndex","setFocusedIndex","useState","selectedIndex","setSelectedIndex","defaultValue","value","useEffect","descendants","id","TabsProvider","useTabsContext","name","errorMessage","useTabList","onKeyDown","useCallback","event","nextTab","next","nextEnabled","node","prevTab","prev","prevEnabled","firstTab","first","firstEnabled","lastTab","last","lastEnabled","isHorizontal","isVertical","eventKey","ArrowStart","ArrowEnd","keyMap","ArrowDown","ArrowUp","Home","End","action","preventDefault","role","useTab","isDisabled","isFocusable","register","disabled","isSelected","onClick","onFocus","isDisabledButFocusable","shouldSelect","clickableProps","ref","type","makeTabId","tabIndex","makeTabPanelId","undefined","useTabPanels","context","validChildren","children","map","child","cloneElement","useTabPanel","hasBeenSelected","useRef","current","shouldRenderChildren","hidden","useTabIndicator","rect","setRect","left","width","top","height","hasMeasured","setHasMeasured","tab","item","offsetLeft","offsetWidth","offsetTop","offsetHeight","requestAnimationFrame","cancelAnimationFrame","position","transitionProperty","transitionDuration","transitionTimingFunction"],"mappings":"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","sourcesContent":["import { useClickable, UseClickableProps } from \"@chakra-ui/clickable\"\nimport { createDescendantContext } from \"@chakra-ui/descendant\"\nimport {\n  useControllableState,\n  useId,\n  useSafeLayoutEffect,\n} from \"@chakra-ui/hooks\"\nimport {\n  createContext,\n  EventKeyMap,\n  getValidChildren,\n  mergeRefs,\n} from \"@chakra-ui/react-utils\"\nimport {\n  callAllHandlers,\n  determineLazyBehavior,\n  Dict,\n  focus,\n  isUndefined,\n  LazyBehavior,\n  normalizeEventKey,\n} from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [\n  TabsDescendantsProvider,\n  useTabsDescendantsContext,\n  useTabsDescendants,\n  useTabsDescendant,\n] = createDescendantContext<HTMLButtonElement>()\n\n/* -------------------------------------------------------------------------------------------------\n * useTabs - The root react hook that manages all tab items\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseTabsProps {\n  /**\n   * The orientation of the tab list.\n   */\n  orientation?: \"vertical\" | \"horizontal\"\n  /**\n   * If `true`, the tabs will be manually activated and\n   * display its panel by pressing Space or Enter.\n   *\n   * If `false`, the tabs will be automatically activated\n   * and their panel is displayed when they receive focus.\n   */\n  isManual?: boolean\n  /**\n   * Callback when the index (controlled or un-controlled) changes.\n   */\n  onChange?: (index: number) => void\n  /**\n   * The index of the selected tab (in controlled mode)\n   */\n  index?: number\n  /**\n   * The initial index of the selected tab (in uncontrolled mode)\n   */\n  defaultIndex?: number\n  /**\n   * The id of the tab\n   */\n  id?: string\n  /**\n   * Performance 🚀:\n   * If `true`, rendering of the tab panel's will be deferred until it is selected.\n   */\n  isLazy?: boolean\n  /**\n   * Performance 🚀:\n   * The lazy behavior of tab panels' content when not active.\n   * Only works when `isLazy={true}`\n   *\n   * - \"unmount\": The content of inactive tab panels are always unmounted.\n   * - \"keepMounted\": The content of inactive tab panels is initially unmounted,\n   * but stays mounted when selected.\n   *\n   * @default \"unmount\"\n   */\n  lazyBehavior?: LazyBehavior\n  /**\n   * The writing mode direction.\n   *\n   * - When in RTL, the left and right navigation is flipped\n   */\n  direction?: \"rtl\" | \"ltr\"\n}\n\n/**\n * Tabs hooks that provides all the states, and accessibility\n * helpers to keep all things working properly.\n *\n * Its returned object will be passed unto a Context Provider\n * so all child components can read from it.\n * There is no document link yet\n * @see Docs https://chakra-ui.com/docs/components/useTabs\n */\nexport function useTabs(props: UseTabsProps) {\n  const {\n    defaultIndex,\n    onChange,\n    index,\n    isManual,\n    isLazy,\n    lazyBehavior = \"unmount\",\n    orientation = \"horizontal\",\n    direction = \"ltr\",\n    ...htmlProps\n  } = props\n\n  /**\n   * We use this to keep track of the index of the focused tab.\n   *\n   * Tabs can be automatically activated, this means selection follows focus.\n   * When we navigate with the arrow keys, we move focus and selection to next/prev tab\n   *\n   * Tabs can also be manually activated, this means selection does not follow focus.\n   * When we navigate with the arrow keys, we only move focus NOT selection. The user\n   * will need not manually activate the tab using `Enter` or `Space`.\n   *\n   * This is why we need to keep track of the `focusedIndex` and `selectedIndex`\n   */\n  const [focusedIndex, setFocusedIndex] = React.useState(defaultIndex ?? 0)\n\n  const [selectedIndex, setSelectedIndex] = useControllableState({\n    defaultValue: defaultIndex ?? 0,\n    value: index,\n    onChange,\n  })\n\n  /**\n   * Sync focused `index` with controlled `selectedIndex` (which is the `props.index`)\n   */\n  React.useEffect(() => {\n    if (index != null) {\n      setFocusedIndex(index)\n    }\n  }, [index])\n\n  /**\n   * Think of `useDescendants` as a register for the tab nodes.\n   */\n  const descendants = useTabsDescendants()\n\n  /**\n   * Generate a unique id or use user-provided id for the tabs widget\n   */\n  const id = useId(props.id, `tabs`)\n\n  return {\n    id,\n    selectedIndex,\n    focusedIndex,\n    setSelectedIndex,\n    setFocusedIndex,\n    isManual,\n    isLazy,\n    lazyBehavior,\n    orientation,\n    descendants,\n    direction,\n    htmlProps,\n  }\n}\n\nexport type UseTabsReturn = Omit<\n  ReturnType<typeof useTabs>,\n  \"htmlProps\" | \"descendants\"\n>\n\nexport const [TabsProvider, useTabsContext] = createContext<UseTabsReturn>({\n  name: \"TabsContext\",\n  errorMessage:\n    \"useTabsContext: `context` is undefined. Seems you forgot to wrap all tabs components within <Tabs />\",\n})\n\ntype Child = React.ReactElement<any>\n\nexport interface UseTabListProps {\n  children?: React.ReactNode\n  onKeyDown?: React.KeyboardEventHandler\n  ref?: React.Ref<any>\n}\n\n/**\n * Tabs hook to manage multiple tab buttons,\n * and ensures only one tab is selected per time.\n *\n * @param props props object for the tablist\n */\nexport function useTabList<P extends UseTabListProps>(props: P) {\n  const { focusedIndex, orientation, direction } = useTabsContext()\n\n  const descendants = useTabsDescendantsContext()\n\n  const onKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      const nextTab = () => {\n        const next = descendants.nextEnabled(focusedIndex)\n        if (next) focus(next.node)\n      }\n      const prevTab = () => {\n        const prev = descendants.prevEnabled(focusedIndex)\n        if (prev) focus(prev.node)\n      }\n      const firstTab = () => {\n        const first = descendants.firstEnabled()\n        if (first) focus(first.node)\n      }\n      const lastTab = () => {\n        const last = descendants.lastEnabled()\n        if (last) focus(last.node)\n      }\n\n      const isHorizontal = orientation === \"horizontal\"\n      const isVertical = orientation === \"vertical\"\n\n      const eventKey = normalizeEventKey(event)\n\n      const ArrowStart = direction === \"ltr\" ? \"ArrowLeft\" : \"ArrowRight\"\n      const ArrowEnd = direction === \"ltr\" ? \"ArrowRight\" : \"ArrowLeft\"\n\n      const keyMap: EventKeyMap = {\n        [ArrowStart]: () => isHorizontal && prevTab(),\n        [ArrowEnd]: () => isHorizontal && nextTab(),\n        ArrowDown: () => isVertical && nextTab(),\n        ArrowUp: () => isVertical && prevTab(),\n        Home: firstTab,\n        End: lastTab,\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        action(event)\n      }\n    },\n    [descendants, focusedIndex, orientation, direction],\n  )\n\n  return {\n    ...props,\n    role: \"tablist\",\n    \"aria-orientation\": orientation,\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\nexport type UseTabListReturn = ReturnType<typeof useTabList>\n\nexport interface UseTabOptions {\n  id?: string\n  isSelected?: boolean\n  panelId?: string\n  /**\n   * If `true`, the `Tab` won't be toggleable\n   */\n  isDisabled?: boolean\n}\n\nexport interface UseTabProps\n  extends Omit<UseClickableProps, \"color\">,\n    UseTabOptions {}\n\n/**\n * Tabs hook to manage each tab button.\n *\n * A tab can be disabled and focusable, or both,\n * hence the use of `useClickable` to handle this scenario\n */\nexport function useTab<P extends UseTabProps>(props: P) {\n  const { isDisabled, isFocusable, ...htmlProps } = props\n\n  const {\n    setSelectedIndex,\n    isManual,\n    id,\n    setFocusedIndex,\n    selectedIndex,\n  } = useTabsContext()\n\n  const { index, register } = useTabsDescendant({\n    disabled: isDisabled && !isFocusable,\n  })\n\n  const isSelected = index === selectedIndex\n\n  const onClick = () => {\n    setSelectedIndex(index)\n  }\n\n  const onFocus = () => {\n    setFocusedIndex(index)\n    const isDisabledButFocusable = isDisabled && isFocusable\n    const shouldSelect = !isManual && !isDisabledButFocusable\n    if (shouldSelect) {\n      setSelectedIndex(index)\n    }\n  }\n\n  const clickableProps = useClickable({\n    ...htmlProps,\n    ref: mergeRefs(register, props.ref),\n    isDisabled,\n    isFocusable,\n    onClick: callAllHandlers(props.onClick, onClick),\n  })\n\n  const type: \"button\" | \"submit\" | \"reset\" = \"button\"\n\n  return {\n    ...clickableProps,\n    id: makeTabId(id, index),\n    role: \"tab\",\n    tabIndex: isSelected ? 0 : -1,\n    type,\n    \"aria-selected\": isSelected,\n    \"aria-controls\": makeTabPanelId(id, index),\n    onFocus: isDisabled ? undefined : callAllHandlers(props.onFocus, onFocus),\n  }\n}\n\nexport interface UseTabPanelsProps {\n  children?: React.ReactNode\n}\n\n/**\n * Tabs hook for managing the visibility of multiple tab panels.\n *\n * Since only one panel can be show at a time, we use `cloneElement`\n * to inject `selected` panel to each TabPanel.\n *\n * It returns a cloned version of its children with\n * all functionality included.\n */\nexport function useTabPanels<P extends UseTabPanelsProps>(props: P) {\n  const context = useTabsContext()\n\n  const { id, selectedIndex } = context\n\n  const validChildren = getValidChildren(props.children)\n\n  const children = validChildren.map((child, index) =>\n    React.cloneElement(child as Child, {\n      isSelected: index === selectedIndex,\n      id: makeTabPanelId(id, index),\n      // Refers to the associated tab element, and also provides an accessible name to the tab panel.\n      \"aria-labelledby\": makeTabId(id, index),\n    }),\n  )\n\n  return { ...props, children }\n}\n\n/**\n * Tabs hook for managing the visible/hidden states\n * of the tab panel.\n *\n * @param props props object for the tab panel\n */\nexport function useTabPanel(props: Dict) {\n  const { isSelected, id, children, ...htmlProps } = props\n  const { isLazy, lazyBehavior } = useTabsContext()\n\n  const hasBeenSelected = React.useRef(false)\n  if (isSelected) {\n    hasBeenSelected.current = true\n  }\n\n  const shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenSelected.current,\n    isSelected,\n    isLazy,\n    lazyBehavior,\n  })\n\n  return {\n    // Puts the tabpanel in the page `Tab` sequence.\n    tabIndex: 0,\n    ...htmlProps,\n    children: shouldRenderChildren ? children : null,\n    role: \"tabpanel\",\n    hidden: !isSelected,\n    id,\n  }\n}\n\n/**\n * Tabs hook to show an animated indicators that\n * follows the active tab.\n *\n * The way we do it is by measuring the DOM Rect (or dimensions)\n * of the active tab, and return that as CSS style for\n * the indicator.\n */\nexport function useTabIndicator(): React.CSSProperties {\n  const context = useTabsContext()\n  const descendants = useTabsDescendantsContext()\n\n  const { selectedIndex, orientation } = context\n\n  const isHorizontal = orientation === \"horizontal\"\n  const isVertical = orientation === \"vertical\"\n\n  // Get the clientRect of the selected tab\n  const [rect, setRect] = React.useState(() => {\n    if (isHorizontal) return { left: 0, width: 0 }\n    if (isVertical) return { top: 0, height: 0 }\n    return undefined\n  })\n\n  const [hasMeasured, setHasMeasured] = React.useState(false)\n\n  // Update the selected tab rect when the selectedIndex changes\n  useSafeLayoutEffect(() => {\n    if (isUndefined(selectedIndex)) return undefined\n\n    const tab = descendants.item(selectedIndex)\n    if (isUndefined(tab)) return undefined\n\n    // Horizontal Tab: Calculate width and left distance\n    if (isHorizontal) {\n      setRect({ left: tab.node.offsetLeft, width: tab.node.offsetWidth })\n    }\n\n    // Vertical Tab: Calculate height and top distance\n    if (isVertical) {\n      setRect({ top: tab.node.offsetTop, height: tab.node.offsetHeight })\n    }\n\n    // Prevent unwanted transition from 0 to measured rect\n    // by setting the measured state in the next tick\n    const id = requestAnimationFrame(() => {\n      setHasMeasured(true)\n    })\n\n    return () => {\n      if (id) {\n        cancelAnimationFrame(id)\n      }\n    }\n  }, [selectedIndex, isHorizontal, isVertical, descendants])\n\n  return {\n    position: \"absolute\",\n    transitionProperty: \"left, right, top, bottom\",\n    transitionDuration: hasMeasured ? \"200ms\" : \"0ms\",\n    transitionTimingFunction: \"cubic-bezier(0, 0, 0.2, 1)\",\n    ...rect,\n  }\n}\n\nfunction makeTabId(id: string, index: number) {\n  return `${id}--tab-${index}`\n}\n\nfunction makeTabPanelId(id: string, index: number) {\n  return `${id}--tabpanel-${index}`\n}\n"],"file":"use-tabs.js"}