{"version":3,"sources":["../../src/use-popper.ts"],"names":["usePopper","props","enabled","modifiers","placement","placementProp","strategy","arrowPadding","eventListeners","offset","gutter","flip","boundary","preventOverflow","matchWidth","reference","popper","instance","cleanup","setupPopper","current","customModifiers","innerArrow","positionArrow","transformOrigin","name","options","padding","forceUpdate","destroy","referenceRef","node","getReferenceProps","ref","popperRef","getPopperProps","style","position","minWidth","inset","getArrowProps","size","shadowColor","bg","rest","getArrowStyle","getArrowInnerProps","update","cssVars","varRef","computedStyle"],"mappings":"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","sourcesContent":["import { mergeRefs, PropGetterV2 } from \"@chakra-ui/react-utils\"\nimport {\n  createPopper,\n  Instance,\n  Modifier,\n  Placement,\n  VirtualElement,\n} from \"@popperjs/core\"\nimport { useCallback, useEffect, useRef } from \"react\"\nimport * as customModifiers from \"./modifiers\"\nimport { cssVars, getEventListenerOptions } from \"./utils\"\n\nexport type { Placement }\n\nexport interface UsePopperProps {\n  /**\n   * Whether the popper.js should be enabled\n   */\n  enabled?: boolean\n  /**\n   * The main and cross-axis offset to displace popper element\n   * from its reference element.\n   */\n  offset?: [crossAxis: number, mainAxis: number]\n  /**\n   * The distance or margin between the reference and popper.\n   * It is used internally to create an `offset` modifier.\n   *\n   * NB: If you define `offset` prop, it'll override the gutter.\n   * @default 8\n   */\n  gutter?: number\n  /**\n   * If `true`, will prevent the popper from being cut off and ensure\n   * it's visible within the boundary area.\n   * @default true\n   */\n  preventOverflow?: boolean\n  /**\n   * If `true`, the popper will change its placement and flip when it's\n   * about to overflow its boundary area.\n   * @default true\n   */\n  flip?: boolean\n  /**\n   * If `true`, the popper will match the width of the reference at all times.\n   * It's useful for `autocomplete`, `date-picker` and `select` patterns.\n   */\n  matchWidth?: boolean\n  /**\n   * The boundary area for the popper. Used within the `preventOverflow` modifier\n   * @default \"clippingParents\"\n   */\n  boundary?: \"clippingParents\" | \"scrollParent\" | HTMLElement\n  /**\n   * If provided, determines whether the popper will reposition itself on `scroll`\n   * and `resize` of the window.\n   */\n  eventListeners?: boolean | { scroll?: boolean; resize?: boolean }\n  /**\n   * The padding required to prevent the arrow from\n   * reaching the very edge of the popper.\n   * @default 8\n   */\n  arrowPadding?: number\n  /**\n   * The CSS positioning strategy to use.\n   * @default \"absolute\"\n   */\n  strategy?: \"absolute\" | \"fixed\"\n  /**\n   * The placement of the popper relative to its reference.\n   * @default \"bottom\"\n   */\n  placement?: Placement\n  /**\n   * Array of popper.js modifiers. Check the docs to see\n   * the list of possible modifiers you can pass.\n   *\n   * @see Docs https://popper.js.org/docs/v2/modifiers/\n   */\n  modifiers?: Array<Partial<Modifier<string, any>>>\n}\n\nexport type ArrowCSSVarProps = {\n  /**\n   * The size of the popover arrow.\n   * This sets the `--popper-arrow-size` css property\n   */\n  size?: string | number\n  /**\n   * The box-shadow color of the popover arrow.\n   * This sets the `--popper-arrow-shadow-color` css property\n   */\n  shadowColor?: string\n  /**\n   * The background color of teh popper arrow.\n   * This sets the `--popper-arrow-bg` css property.\n   */\n  bg?: string\n}\n\nexport function usePopper(props: UsePopperProps = {}) {\n  const {\n    enabled = true,\n    modifiers = [],\n    placement: placementProp = \"bottom\",\n    strategy = \"absolute\",\n    arrowPadding = 8,\n    eventListeners = true,\n    offset,\n    gutter = 8,\n    flip = true,\n    boundary = \"clippingParents\",\n    preventOverflow = true,\n    matchWidth,\n  } = props\n\n  const reference = useRef<Element | VirtualElement | null>(null)\n  const popper = useRef<HTMLElement | null>(null)\n  const instance = useRef<Instance | null>(null)\n\n  const cleanup = useRef(() => {})\n\n  const setupPopper = useCallback(() => {\n    if (!enabled || !reference.current || !popper.current) return\n\n    // If popper instance exists, destroy it so we can create a new one\n    cleanup.current?.()\n\n    instance.current = createPopper(reference.current, popper.current, {\n      placement: placementProp,\n      modifiers: [\n        customModifiers.innerArrow,\n        customModifiers.positionArrow,\n        customModifiers.transformOrigin,\n        { ...customModifiers.matchWidth, enabled: !!matchWidth },\n        {\n          name: \"eventListeners\",\n          ...getEventListenerOptions(eventListeners),\n        },\n        {\n          name: \"arrow\",\n          options: { padding: arrowPadding },\n        },\n        {\n          name: \"offset\",\n          options: {\n            offset: offset ?? [0, gutter],\n          },\n        },\n        {\n          name: \"flip\",\n          enabled: !!flip,\n          options: { padding: 8 },\n        },\n        {\n          name: \"preventOverflow\",\n          enabled: !!preventOverflow,\n          options: { boundary },\n        },\n        // allow users override internal modifiers\n        ...modifiers,\n      ],\n      strategy,\n    })\n\n    // force update one-time to fix any positioning issues\n    instance.current.forceUpdate()\n\n    cleanup.current = instance.current.destroy\n  }, [\n    enabled,\n    placementProp,\n    modifiers,\n    matchWidth,\n    eventListeners,\n    arrowPadding,\n    offset,\n    gutter,\n    flip,\n    preventOverflow,\n    boundary,\n    strategy,\n  ])\n\n  useEffect(() => {\n    return () => {\n      /**\n       * Fast refresh might call this function and tear down the popper\n       * even if the reference still exists. This checks against that\n       */\n      if (!reference.current && !popper.current) {\n        instance.current?.destroy()\n        instance.current = null\n      }\n    }\n  }, [])\n\n  const referenceRef = useCallback(\n    <T extends Element | VirtualElement>(node: T | null) => {\n      reference.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getReferenceProps = useCallback<PropGetterV2<\"button\">>(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(referenceRef, ref),\n    }),\n    [referenceRef],\n  )\n\n  const popperRef = useCallback(\n    <T extends HTMLElement>(node: T | null) => {\n      popper.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getPopperProps = useCallback<PropGetterV2<\"div\">>(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(popperRef, ref),\n      style: {\n        ...props.style,\n        position: strategy,\n        minWidth: \"max-content\",\n        inset: \"0 auto auto 0\",\n      },\n    }),\n    [strategy, popperRef],\n  )\n\n  const getArrowProps = useCallback<PropGetterV2<\"div\", ArrowCSSVarProps>>(\n    (props = {}, ref = null) => {\n      const { size, shadowColor, bg, style, ...rest } = props\n      return {\n        ...rest,\n        ref,\n        \"data-popper-arrow\": \"\",\n        style: getArrowStyle(props),\n      }\n    },\n    [],\n  )\n\n  const getArrowInnerProps = useCallback<PropGetterV2<\"div\">>(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      \"data-popper-arrow-inner\": \"\",\n    }),\n    [],\n  )\n\n  return {\n    update() {\n      instance.current?.update()\n    },\n    forceUpdate() {\n      instance.current?.forceUpdate()\n    },\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getReferenceProps,\n  }\n}\n\nfunction getArrowStyle(props: any) {\n  const { size, shadowColor, bg, style } = props\n  const computedStyle = { ...style, position: \"absolute\" }\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size\n  }\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor\n  }\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg\n  }\n  return computedStyle\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n"],"file":"use-popper.js"}