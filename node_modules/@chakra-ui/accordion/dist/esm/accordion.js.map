{"version":3,"sources":["../../src/accordion.tsx"],"names":["Icon","chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","Collapse","cx","runIfFn","__DEV__","createContext","React","AccordionProvider","useAccordion","useAccordionContext","useAccordionItem","AccordionDescendantsProvider","Accordion","ref","children","reduceMotion","props","styles","ownProps","htmlProps","descendants","context","ctx","useMemo","className","displayName","AccordionItemProvider","useAccordionItemContext","name","errorMessage","AccordionItem","containerStyles","container","overflowAnchor","isExpanded","isOpen","isDisabled","useAccordionItemState","onClose","onOpen","AccordionButton","getButtonProps","buttonProps","buttonStyles","display","alignItems","width","outline","button","AccordionPanel","getPanelProps","panelProps","_className","hidden","child","panel","AccordionIcon","iconStyles","opacity","transform","undefined","transition","transformOrigin","icon"],"mappings":"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","sourcesContent":["import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { Collapse } from \"@chakra-ui/transition\"\nimport { cx, Omit, runIfFn, __DEV__ } from \"@chakra-ui/utils\"\nimport { createContext, MaybeRenderProp } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport {\n  AccordionProvider,\n  useAccordion,\n  useAccordionContext,\n  useAccordionItem,\n  UseAccordionItemProps,\n  UseAccordionItemReturn,\n  UseAccordionProps,\n  AccordionDescendantsProvider,\n} from \"./use-accordion\"\n\n/* -------------------------------------------------------------------------------------------------\n * Accordion - The wrapper that provides context for all accordion items\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface AccordionProps\n  extends UseAccordionProps,\n    Omit<HTMLChakraProps<\"div\">, keyof UseAccordionProps>,\n    ThemingProps<\"Accordion\"> {\n  /**\n   * If `true`, height animation and transitions will be disabled.\n   */\n  reduceMotion?: boolean\n}\n\n/**\n * The wrapper that provides context and focus management\n * for all accordion items.\n *\n * It wraps all accordion items in a `div` for better grouping.\n * @see Docs https://chakra-ui.com/accordion\n */\nexport const Accordion = forwardRef<AccordionProps, \"div\">(\n  ({ children, reduceMotion, ...props }, ref) => {\n    const styles = useMultiStyleConfig(\"Accordion\", props)\n    const ownProps = omitThemingProps(props)\n\n    const { htmlProps, descendants, ...context } = useAccordion(ownProps)\n\n    const ctx = React.useMemo(\n      () => ({ ...context, reduceMotion: !!reduceMotion }),\n      [context, reduceMotion],\n    )\n\n    return (\n      <AccordionDescendantsProvider value={descendants}>\n        <AccordionProvider value={ctx}>\n          <StylesProvider value={styles}>\n            <chakra.div\n              ref={ref}\n              {...htmlProps}\n              className={cx(\"chakra-accordion\", props.className)}\n            >\n              {children}\n            </chakra.div>\n          </StylesProvider>\n        </AccordionProvider>\n      </AccordionDescendantsProvider>\n    )\n  },\n)\n\nif (__DEV__) {\n  Accordion.displayName = \"Accordion\"\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Accordion Item\n * -----------------------------------------------------------------------------------------------*/\n\ntype AccordionItemContext = Omit<UseAccordionItemReturn, \"htmlProps\">\n\nconst [\n  AccordionItemProvider,\n  useAccordionItemContext,\n] = createContext<AccordionItemContext>({\n  name: \"AccordionItemContext\",\n  errorMessage:\n    \"useAccordionItemContext: `context` is undefined. Seems you forgot to wrap the accordion item parts in `<AccordionItem />` \",\n})\n\nexport interface AccordionItemProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof UseAccordionItemProps>,\n    UseAccordionItemProps {\n  children?: MaybeRenderProp<{\n    isExpanded: boolean\n    isDisabled: boolean\n  }>\n}\n\n/**\n * AccordionItem is a single accordion that provides the open-close\n * behavior when the accordion button is clicked.\n *\n * It also provides context for the accordion button and panel.\n */\nexport const AccordionItem = forwardRef<AccordionItemProps, \"div\">(\n  (props, ref) => {\n    const { children, className } = props\n    const { htmlProps, ...context } = useAccordionItem(props)\n\n    const styles = useStyles()\n    const containerStyles: SystemStyleObject = {\n      ...styles.container,\n      overflowAnchor: \"none\",\n    }\n\n    const ctx = React.useMemo(() => context, [context])\n\n    return (\n      <AccordionItemProvider value={ctx}>\n        <chakra.div\n          ref={ref}\n          {...htmlProps}\n          className={cx(\"chakra-accordion__item\", className)}\n          __css={containerStyles}\n        >\n          {runIfFn(children, {\n            isExpanded: !!context.isOpen,\n            isDisabled: !!context.isDisabled,\n          })}\n        </chakra.div>\n      </AccordionItemProvider>\n    )\n  },\n)\n\nif (__DEV__) {\n  AccordionItem.displayName = \"AccordionItem\"\n}\n\n/**\n * React hook to get the state and actions of an accordion item\n */\nexport function useAccordionItemState() {\n  const { isOpen, isDisabled, onClose, onOpen } = useAccordionItemContext()\n  return { isOpen, onClose, isDisabled, onOpen }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Accordion Item => Button\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface AccordionButtonProps extends HTMLChakraProps<\"button\"> {}\n\n/**\n * AccordionButton is used expands and collapses an accordion item.\n * It must be a child of `AccordionItem`.\n *\n * Note 🚨: Each accordion button must be wrapped in an heading tag,\n * that is appropriate for the information architecture of the page.\n */\nexport const AccordionButton = forwardRef<AccordionButtonProps, \"button\">(\n  (props, ref) => {\n    const { getButtonProps } = useAccordionItemContext()\n    const buttonProps = getButtonProps(props, ref)\n\n    const styles = useStyles()\n    const buttonStyles: SystemStyleObject = {\n      display: \"flex\",\n      alignItems: \"center\",\n      width: \"100%\",\n      outline: 0,\n      ...styles.button,\n    }\n\n    return (\n      <chakra.button\n        {...buttonProps}\n        className={cx(\"chakra-accordion__button\", props.className)}\n        __css={buttonStyles}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  AccordionButton.displayName = \"AccordionButton\"\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Accordion Item => Panel\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface AccordionPanelProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Accordion panel that holds the content for each accordion.\n * It shows and hides based on the state login from the `AccordionItem`.\n *\n * It uses the `Collapse` component to animate its height.\n */\nexport const AccordionPanel = forwardRef<AccordionPanelProps, \"div\">(\n  (props, ref) => {\n    const { reduceMotion } = useAccordionContext()\n    const { getPanelProps, isOpen } = useAccordionItemContext()\n\n    // remove `hidden` prop, 'coz we're using height animation\n    const panelProps = getPanelProps(props, ref)\n\n    const _className = cx(\"chakra-accordion__panel\", props.className)\n    const styles = useStyles()\n\n    if (!reduceMotion) {\n      delete panelProps.hidden\n    }\n\n    const child = (\n      <chakra.div {...panelProps} __css={styles.panel} className={_className} />\n    )\n\n    if (!reduceMotion) {\n      return <Collapse in={isOpen}>{child}</Collapse>\n    }\n\n    return child\n  },\n)\n\nif (__DEV__) {\n  AccordionPanel.displayName = \"AccordionPanel\"\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Accordion Item => Icon\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * AccordionIcon that gives a visual cue of the open/close state of the accordion item.\n * It rotates `180deg` based on the open/close state.\n */\nexport const AccordionIcon: React.FC<IconProps> = (props) => {\n  const { isOpen, isDisabled } = useAccordionItemContext()\n  const { reduceMotion } = useAccordionContext()\n\n  const _className = cx(\"chakra-accordion__icon\", props.className)\n  const styles = useStyles()\n\n  const iconStyles: SystemStyleObject = {\n    opacity: isDisabled ? 0.4 : 1,\n    transform: isOpen ? \"rotate(-180deg)\" : undefined,\n    transition: reduceMotion ? undefined : \"transform 0.2s\",\n    transformOrigin: \"center\",\n    ...styles.icon,\n  }\n\n  return (\n    <Icon\n      viewBox=\"0 0 24 24\"\n      aria-hidden\n      className={_className}\n      __css={iconStyles}\n      {...props}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n      />\n    </Icon>\n  )\n}\n\nif (__DEV__) {\n  AccordionIcon.displayName = \"AccordionIcon\"\n}\n"],"file":"accordion.js"}