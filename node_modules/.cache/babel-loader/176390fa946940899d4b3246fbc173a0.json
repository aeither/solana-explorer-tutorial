{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/lin/Documents/Projects/solana-explorer-tutorial/src/SupplyCard.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { Connection, clusterApiUrl } from \"@solana/web3.js\";\nimport { useEffect, useState } from \"react\";\nimport { abbreviatedNumber, lamportsToSol, lamportsToSolString } from \"./utils/index\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction displayLamports(value) {\n  return abbreviatedNumber(lamportsToSol(value));\n}\n\nexport default function SupplyCard() {\n  _s();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      supply = _useState2[0],\n      setSupply = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      voteAccounts = _useState4[0],\n      setVoteAccounts = _useState4[1];\n\n  useEffect(function () {});\n\n  function Hello() {\n    return _Hello.apply(this, arguments);\n  }\n\n  function _Hello() {\n    _Hello = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, connection, supply, voteAccounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"Hello\");\n              url = clusterApiUrl(\"devnet\").replace(\"api\", \"explorer-api\");\n              connection = new Connection(url, \"finalized\");\n              _context.next = 5;\n              return connection.getSupply();\n\n            case 5:\n              supply = _context.sent.value;\n              _context.next = 8;\n              return connection.getVoteAccounts();\n\n            case 8:\n              voteAccounts = _context.sent;\n              setVoteAccounts(voteAccounts);\n              console.log(supply.total);\n              setSupply(supply);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _Hello.apply(this, arguments);\n  }\n\n  var delinquentStake = React.useMemo(function () {\n    if (voteAccounts) {\n      return voteAccounts.delinquent.reduce(function (prev, current) {\n        return prev + current.activatedStake;\n      }, 0);\n    }\n  }, [voteAccounts]);\n  var activeStake = React.useMemo(function () {\n    if (voteAccounts && delinquentStake) {\n      return voteAccounts.current.reduce(function (prev, current) {\n        return prev + current.activatedStake;\n      }, 0) + delinquentStake;\n    }\n  }, [voteAccounts, delinquentStake]);\n  var delinquentStakePercentage;\n\n  if (delinquentStake && activeStake) {\n    delinquentStakePercentage = (delinquentStake / activeStake * 100).toFixed(1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Supply \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return Hello();\n      },\n      children: \"Supply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), supply ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Supply: \", lamportsToSolString(supply.total)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Circulating Supply: \", lamportsToSolString(supply.circulating)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Non Circulating Supply: \", lamportsToSolString(supply.nonCirculating)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Active Stake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), activeStake && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"em\", {\n            children: displayLamports(activeStake)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), \" /\", \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: displayLamports(supply.total)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), delinquentStakePercentage && /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Delinquent stake: \", /*#__PURE__*/_jsxDEV(\"em\", {\n            children: [delinquentStakePercentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SupplyCard, \"4OFhqsFs4L26E54zDvfRu2TcA9E=\");\n\n_c = SupplyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SupplyCard\");","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/src/SupplyCard.tsx"],"names":["Connection","clusterApiUrl","useEffect","useState","abbreviatedNumber","lamportsToSol","lamportsToSolString","React","displayLamports","value","SupplyCard","supply","setSupply","voteAccounts","setVoteAccounts","Hello","console","log","url","replace","connection","getSupply","getVoteAccounts","total","delinquentStake","useMemo","delinquent","reduce","prev","current","activatedStake","activeStake","delinquentStakePercentage","toFixed","circulating","nonCirculating"],"mappings":"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","sourcesContent":["import \"./styles.css\";\nimport {\n  Supply,\n  Connection,\n  clusterApiUrl,\n  VoteAccountStatus\n} from \"@solana/web3.js\";\nimport { useEffect, useState } from \"react\";\nimport {\n  abbreviatedNumber,\n  lamportsToSol,\n  lamportsToSolString\n} from \"./utils/index\";\nimport React from \"react\";\n\nfunction displayLamports(value: number) {\n  return abbreviatedNumber(lamportsToSol(value));\n}\n\nexport default function SupplyCard() {\n  const [supply, setSupply] = useState<Supply>();\n  const [voteAccounts, setVoteAccounts] = useState<VoteAccountStatus>();\n  useEffect(() => {});\n  async function Hello() {\n    console.log(\"Hello\");\n    const url = clusterApiUrl(\"devnet\").replace(\"api\", \"explorer-api\");\n    const connection = new Connection(url, \"finalized\");\n    const supply: Supply = (await connection.getSupply()).value;\n    const voteAccounts = await connection.getVoteAccounts();\n    setVoteAccounts(voteAccounts);\n\n    console.log(supply.total);\n    setSupply(supply);\n  }\n\n  const delinquentStake = React.useMemo(() => {\n    if (voteAccounts) {\n      return voteAccounts.delinquent.reduce(\n        (prev, current) => prev + current.activatedStake,\n        0\n      );\n    }\n  }, [voteAccounts]);\n\n  const activeStake = React.useMemo(() => {\n    if (voteAccounts && delinquentStake) {\n      return (\n        voteAccounts.current.reduce(\n          (prev, current) => prev + current.activatedStake,\n          0\n        ) + delinquentStake\n      );\n    }\n  }, [voteAccounts, delinquentStake]);\n\n  let delinquentStakePercentage;\n  if (delinquentStake && activeStake) {\n    delinquentStakePercentage = ((delinquentStake / activeStake) * 100).toFixed(\n      1\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Supply </h1>\n      <button onClick={() => Hello()}>Supply</button>\n      {supply ? (\n        <>\n          <p>Total Supply: {lamportsToSolString(supply.total)}</p>\n          <p>Circulating Supply: {lamportsToSolString(supply.circulating)}</p>\n          <p>\n            Non Circulating Supply: {lamportsToSolString(supply.nonCirculating)}\n          </p>\n          <div className=\"card-body\">\n            <h4>Active Stake</h4>\n            {activeStake && (\n              <h1>\n                <em>{displayLamports(activeStake)}</em> /{\" \"}\n                <small>{displayLamports(supply.total)}</small>\n              </h1>\n            )}\n            {delinquentStakePercentage && (\n              <h5>\n                Delinquent stake: <em>{delinquentStakePercentage}%</em>\n              </h5>\n            )}\n          </div>\n        </>\n      ) : (\n        <p>No Data</p>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}