{"ast":null,"code":"import { __assign } from 'tslib';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { featureDefinitions } from './definitions.js';\nimport { invariant } from 'hey-listen';\nimport { LazyContext } from '../../context/LazyContext.js';\nvar featureNames = Object.keys(featureDefinitions);\nvar numFeatures = featureNames.length;\n/**\n * Load features via renderless components based on the provided MotionProps.\n */\n\nfunction useFeatures(props, visualElement, preloadedFeatures) {\n  var features = [];\n  var lazyContext = useContext(LazyContext);\n  if (!visualElement) return null;\n  /**\n   * If we're in development mode, check to make sure we're not rendering a motion component\n   * as a child of LazyMotion, as this will break the file-size benefits of using it.\n   */\n\n  if (process.env.NODE_ENV !== \"production\" && preloadedFeatures && lazyContext.strict) {\n    invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n  }\n\n  for (var i = 0; i < numFeatures; i++) {\n    var name_1 = featureNames[i];\n    var _a = featureDefinitions[name_1],\n        isEnabled = _a.isEnabled,\n        Component = _a.Component;\n    /**\n     * It might be possible in the future to use this moment to\n     * dynamically request functionality. In initial tests this\n     * was producing a lot of duplication amongst bundles.\n     */\n\n    if (isEnabled(props) && Component) {\n      features.push(React.createElement(Component, __assign({\n        key: name_1\n      }, props, {\n        visualElement: visualElement\n      })));\n    }\n  }\n\n  return features;\n}\n\nexport { useFeatures };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/framer-motion/dist/es/motion/features/use-features.js"],"names":["__assign","React","useContext","featureDefinitions","invariant","LazyContext","featureNames","Object","keys","numFeatures","length","useFeatures","props","visualElement","preloadedFeatures","features","lazyContext","process","env","NODE_ENV","strict","i","name_1","_a","isEnabled","Component","push","createElement","key"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,8BAA5B;AAEA,IAAIC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYL,kBAAZ,CAAnB;AACA,IAAIM,WAAW,GAAGH,YAAY,CAACI,MAA/B;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,aAA5B,EAA2CC,iBAA3C,EAA8D;AAC1D,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,WAAW,GAAGd,UAAU,CAACG,WAAD,CAA5B;AACA,MAAI,CAACQ,aAAL,EACI,OAAO,IAAP;AACJ;AACJ;AACA;AACA;;AACI,MAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IACAL,iBADA,IAEAE,WAAW,CAACI,MAFhB,EAEwB;AACpBhB,IAAAA,SAAS,CAAC,KAAD,EAAQ,kJAAR,CAAT;AACH;;AACD,OAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,WAApB,EAAiCY,CAAC,EAAlC,EAAsC;AAClC,QAAIC,MAAM,GAAGhB,YAAY,CAACe,CAAD,CAAzB;AACA,QAAIE,EAAE,GAAGpB,kBAAkB,CAACmB,MAAD,CAA3B;AAAA,QAAqCE,SAAS,GAAGD,EAAE,CAACC,SAApD;AAAA,QAA+DC,SAAS,GAAGF,EAAE,CAACE,SAA9E;AACA;AACR;AACA;AACA;AACA;;AACQ,QAAID,SAAS,CAACZ,KAAD,CAAT,IAAoBa,SAAxB,EAAmC;AAC/BV,MAAAA,QAAQ,CAACW,IAAT,CAAczB,KAAK,CAAC0B,aAAN,CAAoBF,SAApB,EAA+BzB,QAAQ,CAAC;AAAE4B,QAAAA,GAAG,EAAEN;AAAP,OAAD,EAAkBV,KAAlB,EAAyB;AAAEC,QAAAA,aAAa,EAAEA;AAAjB,OAAzB,CAAvC,CAAd;AACH;AACJ;;AACD,SAAOE,QAAP;AACH;;AAED,SAASJ,WAAT","sourcesContent":["import { __assign } from 'tslib';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { featureDefinitions } from './definitions.js';\nimport { invariant } from 'hey-listen';\nimport { LazyContext } from '../../context/LazyContext.js';\n\nvar featureNames = Object.keys(featureDefinitions);\nvar numFeatures = featureNames.length;\n/**\n * Load features via renderless components based on the provided MotionProps.\n */\nfunction useFeatures(props, visualElement, preloadedFeatures) {\n    var features = [];\n    var lazyContext = useContext(LazyContext);\n    if (!visualElement)\n        return null;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        lazyContext.strict) {\n        invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n    }\n    for (var i = 0; i < numFeatures; i++) {\n        var name_1 = featureNames[i];\n        var _a = featureDefinitions[name_1], isEnabled = _a.isEnabled, Component = _a.Component;\n        /**\n         * It might be possible in the future to use this moment to\n         * dynamically request functionality. In initial tests this\n         * was producing a lot of duplication amongst bundles.\n         */\n        if (isEnabled(props) && Component) {\n            features.push(React.createElement(Component, __assign({ key: name_1 }, props, { visualElement: visualElement })));\n        }\n    }\n    return features;\n}\n\nexport { useFeatures };\n"]},"metadata":{},"sourceType":"module"}