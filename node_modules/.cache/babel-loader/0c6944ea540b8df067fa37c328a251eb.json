{"ast":null,"code":"import { addUniqueItem, removeItem } from '../../utils/array.js';\nimport { compareByDepth } from './compare-by-depth.js';\n\nvar FlatTree = function () {\n  function FlatTree() {\n    this.children = [];\n    this.isDirty = false;\n  }\n\n  FlatTree.prototype.add = function (child) {\n    addUniqueItem(this.children, child);\n    this.isDirty = true;\n  };\n\n  FlatTree.prototype.remove = function (child) {\n    removeItem(this.children, child);\n    this.isDirty = true;\n  };\n\n  FlatTree.prototype.forEach = function (callback) {\n    this.isDirty && this.children.sort(compareByDepth);\n    this.isDirty = false;\n    this.children.forEach(callback);\n  };\n\n  return FlatTree;\n}();\n\nexport { FlatTree };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/framer-motion/dist/es/render/utils/flat-tree.js"],"names":["addUniqueItem","removeItem","compareByDepth","FlatTree","children","isDirty","prototype","add","child","remove","forEach","callback","sort"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,sBAA1C;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,IAAIC,QAAQ,GAAkB,YAAY;AACtC,WAASA,QAAT,GAAoB;AAChB,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,OAAL,GAAe,KAAf;AACH;;AACDF,EAAAA,QAAQ,CAACG,SAAT,CAAmBC,GAAnB,GAAyB,UAAUC,KAAV,EAAiB;AACtCR,IAAAA,aAAa,CAAC,KAAKI,QAAN,EAAgBI,KAAhB,CAAb;AACA,SAAKH,OAAL,GAAe,IAAf;AACH,GAHD;;AAIAF,EAAAA,QAAQ,CAACG,SAAT,CAAmBG,MAAnB,GAA4B,UAAUD,KAAV,EAAiB;AACzCP,IAAAA,UAAU,CAAC,KAAKG,QAAN,EAAgBI,KAAhB,CAAV;AACA,SAAKH,OAAL,GAAe,IAAf;AACH,GAHD;;AAIAF,EAAAA,QAAQ,CAACG,SAAT,CAAmBI,OAAnB,GAA6B,UAAUC,QAAV,EAAoB;AAC7C,SAAKN,OAAL,IAAgB,KAAKD,QAAL,CAAcQ,IAAd,CAAmBV,cAAnB,CAAhB;AACA,SAAKG,OAAL,GAAe,KAAf;AACA,SAAKD,QAAL,CAAcM,OAAd,CAAsBC,QAAtB;AACH,GAJD;;AAKA,SAAOR,QAAP;AACH,CAnB6B,EAA9B;;AAqBA,SAASA,QAAT","sourcesContent":["import { addUniqueItem, removeItem } from '../../utils/array.js';\nimport { compareByDepth } from './compare-by-depth.js';\n\nvar FlatTree = /** @class */ (function () {\n    function FlatTree() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    FlatTree.prototype.add = function (child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.remove = function (child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.forEach = function (callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    };\n    return FlatTree;\n}());\n\nexport { FlatTree };\n"]},"metadata":{},"sourceType":"module"}