{"ast":null,"code":"var FLOATING_POINT_REGEX = /^[Ee0-9+\\-.]$/;\n/**\n * Determine if a character is a DOM floating point character\n * @see https://www.w3.org/TR/2012/WD-html-markup-20120329/datatypes.html#common.data.float\n */\n\nexport function isFloatingPointNumericCharacter(character) {\n  return FLOATING_POINT_REGEX.test(character);\n}\n/**\n * Determine if the event is a valid numeric keyboard event.\n * We use this so we can prevent non-number characters in the input\n */\n\nexport function isValidNumericKeyboardEvent(event) {\n  if (event.key == null) return true;\n  var isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n\n  if (isModifierKey) {\n    return true;\n  }\n\n  var isSingleCharacterKey = event.key.length === 1;\n\n  if (!isSingleCharacterKey) {\n    return true;\n  }\n\n  return isFloatingPointNumericCharacter(event.key);\n}","map":{"version":3,"sources":["../../src/utils.ts"],"names":["FLOATING_POINT_REGEX","event","isModifierKey","isSingleCharacterKey","isFloatingPointNumericCharacter"],"mappings":"AAAA,IAAMA,oBAAoB,GAA1B,eAAA;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAAA,+BAAA,CAAA,SAAA,EAA4D;AACjE,SAAOA,oBAAoB,CAApBA,IAAAA,CAAP,SAAOA,CAAP;AACD;AAED;AACA;AACA;AACA;;AACA,OAAO,SAAA,2BAAA,CAAA,KAAA,EAAiE;AACtE,MAAIC,KAAK,CAALA,GAAAA,IAAJ,IAAA,EAAuB,OAAA,IAAA;AAEvB,MAAMC,aAAa,GAAGD,KAAK,CAALA,OAAAA,IAAiBA,KAAK,CAAtBA,MAAAA,IAAiCA,KAAK,CAA5D,OAAA;;AAEA,MAAA,aAAA,EAAmB;AACjB,WAAA,IAAA;AACD;;AAED,MAAME,oBAAoB,GAAGF,KAAK,CAALA,GAAAA,CAAAA,MAAAA,KAA7B,CAAA;;AAEA,MAAI,CAAJ,oBAAA,EAA2B;AACzB,WAAA,IAAA;AACD;;AAED,SAAOG,+BAA+B,CAACH,KAAK,CAA5C,GAAsC,CAAtC;AACD","sourcesContent":["const FLOATING_POINT_REGEX = /^[Ee0-9+\\-.]$/\n\n/**\n * Determine if a character is a DOM floating point character\n * @see https://www.w3.org/TR/2012/WD-html-markup-20120329/datatypes.html#common.data.float\n */\nexport function isFloatingPointNumericCharacter(character: string) {\n  return FLOATING_POINT_REGEX.test(character)\n}\n\n/**\n * Determine if the event is a valid numeric keyboard event.\n * We use this so we can prevent non-number characters in the input\n */\nexport function isValidNumericKeyboardEvent(event: React.KeyboardEvent) {\n  if (event.key == null) return true\n\n  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey\n\n  if (isModifierKey) {\n    return true\n  }\n\n  const isSingleCharacterKey = event.key.length === 1\n\n  if (!isSingleCharacterKey) {\n    return true\n  }\n\n  return isFloatingPointNumericCharacter(event.key)\n}\n"]},"metadata":{},"sourceType":"module"}