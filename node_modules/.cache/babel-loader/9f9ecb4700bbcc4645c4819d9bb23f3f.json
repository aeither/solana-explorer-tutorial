{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { isNumber } from \"@chakra-ui/utils\";\nexport var TransitionEasings = {\n  ease: [0.25, 0.1, 0.25, 1],\n  easeIn: [0.4, 0, 1, 1],\n  easeOut: [0, 0, 0.2, 1],\n  easeInOut: [0.4, 0, 0.2, 1]\n};\nexport var TransitionVariants = {\n  scale: {\n    enter: {\n      scale: 1\n    },\n    exit: {\n      scale: 0.95\n    }\n  },\n  fade: {\n    enter: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    }\n  },\n  pushLeft: {\n    enter: {\n      x: \"100%\"\n    },\n    exit: {\n      x: \"-30%\"\n    }\n  },\n  pushRight: {\n    enter: {\n      x: \"-100%\"\n    },\n    exit: {\n      x: \"30%\"\n    }\n  },\n  pushUp: {\n    enter: {\n      y: \"100%\"\n    },\n    exit: {\n      y: \"-30%\"\n    }\n  },\n  pushDown: {\n    enter: {\n      y: \"-100%\"\n    },\n    exit: {\n      y: \"30%\"\n    }\n  },\n  slideLeft: {\n    position: {\n      left: 0,\n      top: 0,\n      bottom: 0,\n      width: \"100%\"\n    },\n    enter: {\n      x: 0\n    },\n    exit: {\n      x: \"-100%\"\n    }\n  },\n  slideRight: {\n    position: {\n      right: 0,\n      top: 0,\n      bottom: 0,\n      width: \"100%\"\n    },\n    enter: {\n      x: 0\n    },\n    exit: {\n      x: \"100%\"\n    }\n  },\n  slideUp: {\n    position: {\n      top: 0,\n      left: 0,\n      right: 0,\n      maxWidth: \"100vw\"\n    },\n    enter: {\n      y: 0\n    },\n    exit: {\n      y: \"-100%\"\n    }\n  },\n  slideDown: {\n    position: {\n      bottom: 0,\n      left: 0,\n      right: 0,\n      maxWidth: \"100vw\"\n    },\n    enter: {\n      y: 0\n    },\n    exit: {\n      y: \"100%\"\n    }\n  }\n};\nexport function slideTransition(options) {\n  var _options$direction;\n\n  var side = (_options$direction = options == null ? void 0 : options.direction) != null ? _options$direction : \"right\";\n\n  switch (side) {\n    case \"right\":\n      return TransitionVariants.slideRight;\n\n    case \"left\":\n      return TransitionVariants.slideLeft;\n\n    case \"bottom\":\n      return TransitionVariants.slideDown;\n\n    case \"top\":\n      return TransitionVariants.slideUp;\n\n    default:\n      return TransitionVariants.slideRight;\n  }\n}\nexport var TransitionDefaults = {\n  enter: {\n    duration: 0.2,\n    ease: TransitionEasings.easeOut\n  },\n  exit: {\n    duration: 0.1,\n    ease: TransitionEasings.easeIn\n  }\n};\nexport var withDelay = {\n  enter: function enter(transition, delay) {\n    return _extends({}, transition, {\n      delay: isNumber(delay) ? delay : delay == null ? void 0 : delay[\"enter\"]\n    });\n  },\n  exit: function exit(transition, delay) {\n    return _extends({}, transition, {\n      delay: isNumber(delay) ? delay : delay == null ? void 0 : delay[\"exit\"]\n    });\n  }\n};","map":{"version":3,"sources":["../../src/transition-utils.ts"],"names":["TransitionEasings","ease","easeIn","easeOut","easeInOut","TransitionVariants","scale","enter","exit","fade","opacity","pushLeft","x","pushRight","pushUp","y","pushDown","slideLeft","position","left","top","bottom","width","slideRight","right","slideUp","maxWidth","slideDown","side","options","TransitionDefaults","duration","withDelay","delay","isNumber"],"mappings":"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","sourcesContent":["import { isNumber } from \"@chakra-ui/utils\"\nimport { Target, TargetAndTransition, Transition } from \"framer-motion\"\n\ntype TargetResolver<P = {}> = (\n  props: P & {\n    transition?: TransitionConfig\n    transitionEnd?: TransitionEndConfig\n    delay?: number | DelayConfig\n  },\n) => TargetAndTransition\n\ntype Variant<P = {}> = TargetAndTransition | TargetResolver<P>\n\nexport type Variants<P = {}> = {\n  enter: Variant<P>\n  exit: Variant<P>\n  initial?: Variant<P>\n}\n\ntype WithMotionState<P> = Partial<Record<\"enter\" | \"exit\", P>>\n\nexport type TransitionConfig = WithMotionState<Transition>\n\nexport type TransitionEndConfig = WithMotionState<Target>\n\nexport type DelayConfig = WithMotionState<number>\n\nexport const TransitionEasings = {\n  ease: [0.25, 0.1, 0.25, 1],\n  easeIn: [0.4, 0, 1, 1],\n  easeOut: [0, 0, 0.2, 1],\n  easeInOut: [0.4, 0, 0.2, 1],\n} as const\n\nexport const TransitionVariants = {\n  scale: {\n    enter: { scale: 1 },\n    exit: { scale: 0.95 },\n  },\n  fade: {\n    enter: { opacity: 1 },\n    exit: { opacity: 0 },\n  },\n  pushLeft: {\n    enter: { x: \"100%\" },\n    exit: { x: \"-30%\" },\n  },\n  pushRight: {\n    enter: { x: \"-100%\" },\n    exit: { x: \"30%\" },\n  },\n  pushUp: {\n    enter: { y: \"100%\" },\n    exit: { y: \"-30%\" },\n  },\n  pushDown: {\n    enter: { y: \"-100%\" },\n    exit: { y: \"30%\" },\n  },\n  slideLeft: {\n    position: { left: 0, top: 0, bottom: 0, width: \"100%\" },\n    enter: { x: 0 },\n    exit: { x: \"-100%\" },\n  },\n  slideRight: {\n    position: { right: 0, top: 0, bottom: 0, width: \"100%\" },\n    enter: { x: 0 },\n    exit: { x: \"100%\" },\n  },\n  slideUp: {\n    position: { top: 0, left: 0, right: 0, maxWidth: \"100vw\" },\n    enter: { y: 0 },\n    exit: { y: \"-100%\" },\n  },\n  slideDown: {\n    position: { bottom: 0, left: 0, right: 0, maxWidth: \"100vw\" },\n    enter: { y: 0 },\n    exit: { y: \"100%\" },\n  },\n}\n\nexport type SlideDirection = \"top\" | \"left\" | \"bottom\" | \"right\"\n\nexport function slideTransition(options?: { direction?: SlideDirection }) {\n  const side = options?.direction ?? \"right\"\n  switch (side) {\n    case \"right\":\n      return TransitionVariants.slideRight\n    case \"left\":\n      return TransitionVariants.slideLeft\n    case \"bottom\":\n      return TransitionVariants.slideDown\n    case \"top\":\n      return TransitionVariants.slideUp\n    default:\n      return TransitionVariants.slideRight\n  }\n}\n\nexport const TransitionDefaults = {\n  enter: {\n    duration: 0.2,\n    ease: TransitionEasings.easeOut,\n  },\n  exit: {\n    duration: 0.1,\n    ease: TransitionEasings.easeIn,\n  },\n} as const\n\nexport type WithTransitionConfig<P extends object> = Omit<P, \"transition\"> & {\n  /**\n   * If `true`, the element will unmount when `in={false}` and animation is done\n   */\n  unmountOnExit?: boolean\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in?: boolean\n  /**\n   * Custom `transition` definition for `enter` and `exit`\n   */\n  transition?: TransitionConfig\n  /**\n   * Custom `transitionEnd` definition for `enter` and `exit`\n   */\n  transitionEnd?: TransitionEndConfig\n  /**\n   * Custom `delay` definition for `enter` and `exit`\n   */\n  delay?: number | DelayConfig\n}\n\nexport const withDelay = {\n  enter: (transition: Transition, delay?: number | DelayConfig) => ({\n    ...transition,\n    delay: isNumber(delay) ? delay : delay?.[\"enter\"],\n  }),\n  exit: (transition: Transition, delay?: number | DelayConfig) => ({\n    ...transition,\n    delay: isNumber(delay) ? delay : delay?.[\"exit\"],\n  }),\n}\n"]},"metadata":{},"sourceType":"module"}