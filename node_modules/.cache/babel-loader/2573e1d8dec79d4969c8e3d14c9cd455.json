{"ast":null,"code":"import { getTabbableNodes } from './utils/DOMutils';\n\nvar getRelativeFocusable = function getRelativeFocusable(element, scope) {\n  if (!element || !scope || !scope.contains(element)) {\n    return {};\n  }\n\n  var focusables = getTabbableNodes([scope]);\n  var current = focusables.findIndex(function (_a) {\n    var node = _a.node;\n    return node === element;\n  });\n\n  if (current === -1) {\n    return {};\n  }\n\n  return {\n    prev: focusables[current - 1],\n    next: focusables[current + 1],\n    first: focusables[0],\n    last: focusables[focusables.length - 1]\n  };\n};\n\nvar defaultOptions = function defaultOptions(options) {\n  return Object.assign({\n    scope: document.body,\n    cycle: true\n  }, options);\n};\n\nexport var focusNextElement = function focusNextElement(baseElement, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = defaultOptions(options),\n      scope = _a.scope,\n      cycle = _a.cycle;\n\n  var _b = getRelativeFocusable(baseElement, scope),\n      next = _b.next,\n      first = _b.first;\n\n  var newTarget = next || cycle && first;\n\n  if (newTarget) {\n    newTarget.node.focus();\n  }\n};\nexport var focusPrevElement = function focusPrevElement(baseElement, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = defaultOptions(options),\n      scope = _a.scope,\n      cycle = _a.cycle;\n\n  var _b = getRelativeFocusable(baseElement, scope),\n      prev = _b.prev,\n      last = _b.last;\n\n  var newTarget = prev || cycle && last;\n\n  if (newTarget) {\n    newTarget.node.focus();\n  }\n};","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/focus-lock/dist/es2015/sibling.js"],"names":["getTabbableNodes","getRelativeFocusable","element","scope","contains","focusables","current","findIndex","_a","node","prev","next","first","last","length","defaultOptions","options","Object","assign","document","body","cycle","focusNextElement","baseElement","_b","newTarget","focus","focusPrevElement"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;;AACA,IAAIC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAUC,OAAV,EAAmBC,KAAnB,EAA0B;AACjD,MAAI,CAACD,OAAD,IAAY,CAACC,KAAb,IAAsB,CAACA,KAAK,CAACC,QAAN,CAAeF,OAAf,CAA3B,EAAoD;AAChD,WAAO,EAAP;AACH;;AACD,MAAIG,UAAU,GAAGL,gBAAgB,CAAC,CAACG,KAAD,CAAD,CAAjC;AACA,MAAIG,OAAO,GAAGD,UAAU,CAACE,SAAX,CAAqB,UAAUC,EAAV,EAAc;AAC7C,QAAIC,IAAI,GAAGD,EAAE,CAACC,IAAd;AACA,WAAOA,IAAI,KAAKP,OAAhB;AACH,GAHa,CAAd;;AAIA,MAAII,OAAO,KAAK,CAAC,CAAjB,EAAoB;AAChB,WAAO,EAAP;AACH;;AACD,SAAO;AACHI,IAAAA,IAAI,EAAEL,UAAU,CAACC,OAAO,GAAG,CAAX,CADb;AAEHK,IAAAA,IAAI,EAAEN,UAAU,CAACC,OAAO,GAAG,CAAX,CAFb;AAGHM,IAAAA,KAAK,EAAEP,UAAU,CAAC,CAAD,CAHd;AAIHQ,IAAAA,IAAI,EAAER,UAAU,CAACA,UAAU,CAACS,MAAX,GAAoB,CAArB;AAJb,GAAP;AAMH,CAlBD;;AAmBA,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,CAAUC,OAAV,EAAmB;AACpC,SAAOC,MAAM,CAACC,MAAP,CAAc;AACjBf,IAAAA,KAAK,EAAEgB,QAAQ,CAACC,IADC;AAEjBC,IAAAA,KAAK,EAAE;AAFU,GAAd,EAGJL,OAHI,CAAP;AAIH,CALD;;AAMA,OAAO,IAAIM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUC,WAAV,EAAuBP,OAAvB,EAAgC;AAC1D,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,MAAIR,EAAE,GAAGO,cAAc,CAACC,OAAD,CAAvB;AAAA,MAAkCb,KAAK,GAAGK,EAAE,CAACL,KAA7C;AAAA,MAAoDkB,KAAK,GAAGb,EAAE,CAACa,KAA/D;;AACA,MAAIG,EAAE,GAAGvB,oBAAoB,CAACsB,WAAD,EAAcpB,KAAd,CAA7B;AAAA,MAAmDQ,IAAI,GAAGa,EAAE,CAACb,IAA7D;AAAA,MAAmEC,KAAK,GAAGY,EAAE,CAACZ,KAA9E;;AACA,MAAIa,SAAS,GAAGd,IAAI,IAAKU,KAAK,IAAIT,KAAlC;;AACA,MAAIa,SAAJ,EAAe;AACXA,IAAAA,SAAS,CAAChB,IAAV,CAAeiB,KAAf;AACH;AACJ,CARM;AASP,OAAO,IAAIC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUJ,WAAV,EAAuBP,OAAvB,EAAgC;AAC1D,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,MAAIR,EAAE,GAAGO,cAAc,CAACC,OAAD,CAAvB;AAAA,MAAkCb,KAAK,GAAGK,EAAE,CAACL,KAA7C;AAAA,MAAoDkB,KAAK,GAAGb,EAAE,CAACa,KAA/D;;AACA,MAAIG,EAAE,GAAGvB,oBAAoB,CAACsB,WAAD,EAAcpB,KAAd,CAA7B;AAAA,MAAmDO,IAAI,GAAGc,EAAE,CAACd,IAA7D;AAAA,MAAmEG,IAAI,GAAGW,EAAE,CAACX,IAA7E;;AACA,MAAIY,SAAS,GAAGf,IAAI,IAAKW,KAAK,IAAIR,IAAlC;;AACA,MAAIY,SAAJ,EAAe;AACXA,IAAAA,SAAS,CAAChB,IAAV,CAAeiB,KAAf;AACH;AACJ,CARM","sourcesContent":["import { getTabbableNodes } from './utils/DOMutils';\nvar getRelativeFocusable = function (element, scope) {\n    if (!element || !scope || !scope.contains(element)) {\n        return {};\n    }\n    var focusables = getTabbableNodes([scope]);\n    var current = focusables.findIndex(function (_a) {\n        var node = _a.node;\n        return node === element;\n    });\n    if (current === -1) {\n        return {};\n    }\n    return {\n        prev: focusables[current - 1],\n        next: focusables[current + 1],\n        first: focusables[0],\n        last: focusables[focusables.length - 1],\n    };\n};\nvar defaultOptions = function (options) {\n    return Object.assign({\n        scope: document.body,\n        cycle: true,\n    }, options);\n};\nexport var focusNextElement = function (baseElement, options) {\n    if (options === void 0) { options = {}; }\n    var _a = defaultOptions(options), scope = _a.scope, cycle = _a.cycle;\n    var _b = getRelativeFocusable(baseElement, scope), next = _b.next, first = _b.first;\n    var newTarget = next || (cycle && first);\n    if (newTarget) {\n        newTarget.node.focus();\n    }\n};\nexport var focusPrevElement = function (baseElement, options) {\n    if (options === void 0) { options = {}; }\n    var _a = defaultOptions(options), scope = _a.scope, cycle = _a.cycle;\n    var _b = getRelativeFocusable(baseElement, scope), prev = _b.prev, last = _b.last;\n    var newTarget = prev || (cycle && last);\n    if (newTarget) {\n        newTarget.node.focus();\n    }\n};\n"]},"metadata":{},"sourceType":"module"}