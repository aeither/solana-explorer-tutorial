{"version":3,"sources":["../../src/button-spinner.tsx"],"names":["ButtonSpinner","props","label","placement","spacing","children","className","__css","rest","_className","marginProp","spinnerStyles","React","useMemo","display","alignItems","position","fontSize","lineHeight","__DEV__","displayName"],"mappings":";;;;;AAAA;;AACA;;AAMA;;AACA;;;;;;;;;;AAWO,IAAMA,aAA2C,GAAG,SAA9CA,aAA8C,CAACC,KAAD,EAAW;AAAA,MAElEC,KAFkE,GAShED,KATgE,CAElEC,KAFkE;AAAA,MAGlEC,SAHkE,GAShEF,KATgE,CAGlEE,SAHkE;AAAA,MAIlEC,OAJkE,GAShEH,KATgE,CAIlEG,OAJkE;AAAA,wBAShEH,KATgE,CAKlEI,QALkE;AAAA,MAKlEA,QALkE,6CAKvD,oBAAC,gBAAD;AAAS,IAAA,KAAK,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAC,KAApC;AAA0C,IAAA,MAAM,EAAC;AAAjD,IALuD;AAAA,MAMlEC,SANkE,GAShEL,KATgE,CAMlEK,SANkE;AAAA,MAOlEC,KAPkE,GAShEN,KATgE,CAOlEM,KAPkE;AAAA,MAQ/DC,IAR+D,iCAShEP,KATgE;;AAWpE,MAAMQ,UAAU,GAAG,eAAG,wBAAH,EAA6BH,SAA7B,CAAnB;;AAEA,MAAMI,UAAU,GAAGP,SAAS,KAAK,OAAd,GAAwB,WAAxB,GAAsC,aAAzD;AAEA,MAAMQ,aAAgC,GAAGC,KAAK,CAACC,OAAN,CACvC;AAAA;;AAAA;AACEC,MAAAA,OAAO,EAAE,MADX;AAEEC,MAAAA,UAAU,EAAE,QAFd;AAGEC,MAAAA,QAAQ,EAAEd,KAAK,GAAG,UAAH,GAAgB;AAHjC,iBAIGQ,UAJH,IAIgBR,KAAK,GAAG,QAAH,GAAc,CAJnC,YAKEe,QALF,GAKY,KALZ,YAMEC,UANF,GAMc,QANd,cAOKX,KAPL;AAAA,GADuC,EAUvC,CAACA,KAAD,EAAQL,KAAR,EAAeQ,UAAf,CAVuC,CAAzC;AAaA,sBACE,oBAAC,cAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAED;AAAvB,KAAuCD,IAAvC;AAA6C,IAAA,KAAK,EAAEG;AAApD,MACGN,QADH,CADF;AAKD,CAjCM;;;;AAkCP,IAAIc,cAAJ,EAAa;AACXnB,EAAAA,aAAa,CAACoB,WAAd,GAA4B,eAA5B;AACD","sourcesContent":["import { Spinner } from \"@chakra-ui/spinner\"\nimport {\n  chakra,\n  HTMLChakraProps,\n  SystemProps,\n  SystemStyleObject,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\ninterface ButtonSpinnerProps extends HTMLChakraProps<\"div\"> {\n  label?: string\n  /**\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n  placement?: \"start\" | \"end\"\n}\n\nexport const ButtonSpinner: React.FC<ButtonSpinnerProps> = (props) => {\n  const {\n    label,\n    placement,\n    spacing,\n    children = <Spinner color=\"currentColor\" width=\"1em\" height=\"1em\" />,\n    className,\n    __css,\n    ...rest\n  } = props\n\n  const _className = cx(\"chakra-button__spinner\", className)\n\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\"\n\n  const spinnerStyles: SystemStyleObject = React.useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? \"0.5rem\" : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css,\n    }),\n    [__css, label, marginProp],\n  )\n\n  return (\n    <chakra.div className={_className} {...rest} __css={spinnerStyles}>\n      {children}\n    </chakra.div>\n  )\n}\nif (__DEV__) {\n  ButtonSpinner.displayName = \"ButtonSpinner\"\n}\n"],"file":"button-spinner.js"}