{"version":3,"sources":["../../src/accordion.tsx"],"names":["Accordion","ref","children","reduceMotion","props","styles","ownProps","htmlProps","descendants","context","ctx","React","useMemo","className","__DEV__","displayName","name","errorMessage","AccordionItemProvider","useAccordionItemContext","AccordionItem","containerStyles","container","overflowAnchor","isExpanded","isOpen","isDisabled","useAccordionItemState","onClose","onOpen","AccordionButton","getButtonProps","buttonProps","buttonStyles","display","alignItems","width","outline","button","AccordionPanel","getPanelProps","panelProps","_className","hidden","child","panel","AccordionIcon","iconStyles","opacity","transform","undefined","transition","transformOrigin","icon"],"mappings":";;;;;;AAAA;;AACA;;AAWA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,SAAS,gBAAG,wBACvB,gBAAuCC,GAAvC,EAA+C;AAAA,MAA5CC,QAA4C,QAA5CA,QAA4C;AAAA,MAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,MAAjBC,KAAiB;;AAC7C,MAAMC,MAAM,GAAG,iCAAoB,WAApB,EAAiCD,KAAjC,CAAf;AACA,MAAME,QAAQ,GAAG,8BAAiBF,KAAjB,CAAjB;;AAF6C,sBAIE,iCAAaE,QAAb,CAJF;AAAA,MAIrCC,SAJqC,iBAIrCA,SAJqC;AAAA,MAI1BC,WAJ0B,iBAI1BA,WAJ0B;AAAA,MAIVC,OAJU;;AAM7C,MAAMC,GAAG,GAAGC,KAAK,CAACC,OAAN,CACV;AAAA,wBAAYH,OAAZ;AAAqBN,MAAAA,YAAY,EAAE,CAAC,CAACA;AAArC;AAAA,GADU,EAEV,CAACM,OAAD,EAAUN,YAAV,CAFU,CAAZ;AAKA,sBACE,oBAAC,2CAAD;AAA8B,IAAA,KAAK,EAAEK;AAArC,kBACE,oBAAC,gCAAD;AAAmB,IAAA,KAAK,EAAEE;AAA1B,kBACE,oBAAC,sBAAD;AAAgB,IAAA,KAAK,EAAEL;AAAvB,kBACE,oBAAC,cAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEJ;AADP,KAEMM,SAFN;AAGE,IAAA,SAAS,EAAE,eAAG,kBAAH,EAAuBH,KAAK,CAACS,SAA7B;AAHb,MAKGX,QALH,CADF,CADF,CADF,CADF;AAeD,CA3BsB,CAAlB;;;AA8BP,IAAIY,cAAJ,EAAa;AACXd,EAAAA,SAAS,CAACe,WAAV,GAAwB,WAAxB;AACD;AAED;AACA;AACA;;;qBAOI,+BAAoC;AACtCC,EAAAA,IAAI,EAAE,sBADgC;AAEtCC,EAAAA,YAAY,EACV;AAHoC,CAApC,C;IAFFC,qB;IACAC,uB;;AAgBF;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,aAAa,gBAAG,wBAC3B,UAAChB,KAAD,EAAQH,GAAR,EAAgB;AAAA,MACNC,QADM,GACkBE,KADlB,CACNF,QADM;AAAA,MACIW,SADJ,GACkBT,KADlB,CACIS,SADJ;;AAAA,0BAEoB,qCAAiBT,KAAjB,CAFpB;AAAA,MAENG,SAFM,qBAENA,SAFM;AAAA,MAEQE,OAFR;;AAId,MAAMJ,MAAM,GAAG,wBAAf;;AACA,MAAMgB,eAAkC,gBACnChB,MAAM,CAACiB,SAD4B;AAEtCC,IAAAA,cAAc,EAAE;AAFsB,IAAxC;;AAKA,MAAMb,GAAG,GAAGC,KAAK,CAACC,OAAN,CAAc;AAAA,WAAMH,OAAN;AAAA,GAAd,EAA6B,CAACA,OAAD,CAA7B,CAAZ;AAEA,sBACE,oBAAC,qBAAD;AAAuB,IAAA,KAAK,EAAEC;AAA9B,kBACE,oBAAC,cAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAET;AADP,KAEMM,SAFN;AAGE,IAAA,SAAS,EAAE,eAAG,wBAAH,EAA6BM,SAA7B,CAHb;AAIE,IAAA,KAAK,EAAEQ;AAJT,MAMG,oBAAQnB,QAAR,EAAkB;AACjBsB,IAAAA,UAAU,EAAE,CAAC,CAACf,OAAO,CAACgB,MADL;AAEjBC,IAAAA,UAAU,EAAE,CAAC,CAACjB,OAAO,CAACiB;AAFL,GAAlB,CANH,CADF,CADF;AAeD,CA5B0B,CAAtB;;;AA+BP,IAAIZ,cAAJ,EAAa;AACXM,EAAAA,aAAa,CAACL,WAAd,GAA4B,eAA5B;AACD;AAED;AACA;AACA;;;AACO,SAASY,qBAAT,GAAiC;AAAA,8BACUR,uBAAuB,EADjC;AAAA,MAC9BM,MAD8B,yBAC9BA,MAD8B;AAAA,MACtBC,UADsB,yBACtBA,UADsB;AAAA,MACVE,OADU,yBACVA,OADU;AAAA,MACDC,MADC,yBACDA,MADC;;AAEtC,SAAO;AAAEJ,IAAAA,MAAM,EAANA,MAAF;AAAUG,IAAAA,OAAO,EAAPA,OAAV;AAAmBF,IAAAA,UAAU,EAAVA,UAAnB;AAA+BG,IAAAA,MAAM,EAANA;AAA/B,GAAP;AACD;AAED;AACA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,eAAe,gBAAG,wBAC7B,UAAC1B,KAAD,EAAQH,GAAR,EAAgB;AAAA,+BACakB,uBAAuB,EADpC;AAAA,MACNY,cADM,0BACNA,cADM;;AAEd,MAAMC,WAAW,GAAGD,cAAc,CAAC3B,KAAD,EAAQH,GAAR,CAAlC;AAEA,MAAMI,MAAM,GAAG,wBAAf;;AACA,MAAM4B,YAA+B;AACnCC,IAAAA,OAAO,EAAE,MAD0B;AAEnCC,IAAAA,UAAU,EAAE,QAFuB;AAGnCC,IAAAA,KAAK,EAAE,MAH4B;AAInCC,IAAAA,OAAO,EAAE;AAJ0B,KAKhChC,MAAM,CAACiC,MALyB,CAArC;;AAQA,sBACE,oBAAC,cAAD,CAAQ,MAAR,eACMN,WADN;AAEE,IAAA,SAAS,EAAE,eAAG,0BAAH,EAA+B5B,KAAK,CAACS,SAArC,CAFb;AAGE,IAAA,KAAK,EAAEoB;AAHT,KADF;AAOD,CArB4B,CAAxB;;;AAwBP,IAAInB,cAAJ,EAAa;AACXgB,EAAAA,eAAe,CAACf,WAAhB,GAA8B,iBAA9B;AACD;AAED;AACA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMwB,cAAc,gBAAG,wBAC5B,UAACnC,KAAD,EAAQH,GAAR,EAAgB;AAAA,6BACW,yCADX;AAAA,MACNE,YADM,wBACNA,YADM;;AAAA,+BAEoBgB,uBAAuB,EAF3C;AAAA,MAENqB,aAFM,0BAENA,aAFM;AAAA,MAESf,MAFT,0BAESA,MAFT,EAId;;;AACA,MAAMgB,UAAU,GAAGD,aAAa,CAACpC,KAAD,EAAQH,GAAR,CAAhC;;AAEA,MAAMyC,UAAU,GAAG,eAAG,yBAAH,EAA8BtC,KAAK,CAACS,SAApC,CAAnB;;AACA,MAAMR,MAAM,GAAG,wBAAf;;AAEA,MAAI,CAACF,YAAL,EAAmB;AACjB,WAAOsC,UAAU,CAACE,MAAlB;AACD;;AAED,MAAMC,KAAK,gBACT,oBAAC,cAAD,CAAQ,GAAR,eAAgBH,UAAhB;AAA4B,IAAA,KAAK,EAAEpC,MAAM,CAACwC,KAA1C;AAAiD,IAAA,SAAS,EAAEH;AAA5D,KADF;;AAIA,MAAI,CAACvC,YAAL,EAAmB;AACjB,wBAAO,oBAAC,oBAAD;AAAU,YAAIsB;AAAd,OAAuBmB,KAAvB,CAAP;AACD;;AAED,SAAOA,KAAP;AACD,CAxB2B,CAAvB;;;AA2BP,IAAI9B,cAAJ,EAAa;AACXyB,EAAAA,cAAc,CAACxB,WAAf,GAA6B,gBAA7B;AACD;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACO,IAAM+B,aAAkC,GAAG,SAArCA,aAAqC,CAAC1C,KAAD,EAAW;AAAA,+BAC5Be,uBAAuB,EADK;AAAA,MACnDM,MADmD,0BACnDA,MADmD;AAAA,MAC3CC,UAD2C,0BAC3CA,UAD2C;;AAAA,8BAElC,yCAFkC;AAAA,MAEnDvB,YAFmD,yBAEnDA,YAFmD;;AAI3D,MAAMuC,UAAU,GAAG,eAAG,wBAAH,EAA6BtC,KAAK,CAACS,SAAnC,CAAnB;;AACA,MAAMR,MAAM,GAAG,wBAAf;;AAEA,MAAM0C,UAA6B;AACjCC,IAAAA,OAAO,EAAEtB,UAAU,GAAG,GAAH,GAAS,CADK;AAEjCuB,IAAAA,SAAS,EAAExB,MAAM,GAAG,iBAAH,GAAuByB,SAFP;AAGjCC,IAAAA,UAAU,EAAEhD,YAAY,GAAG+C,SAAH,GAAe,gBAHN;AAIjCE,IAAAA,eAAe,EAAE;AAJgB,KAK9B/C,MAAM,CAACgD,IALuB,CAAnC;;AAQA,sBACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,uBAFF;AAGE,IAAA,SAAS,EAAEX,UAHb;AAIE,IAAA,KAAK,EAAEK;AAJT,KAKM3C,KALN,gBAOE;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,CAAC,EAAC;AAFJ,IAPF,CADF;AAcD,CA7BM;;;;AA+BP,IAAIU,cAAJ,EAAa;AACXgC,EAAAA,aAAa,CAAC/B,WAAd,GAA4B,eAA5B;AACD","sourcesContent":["import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { Collapse } from \"@chakra-ui/transition\"\nimport { cx, Omit, runIfFn, __DEV__ } from \"@chakra-ui/utils\"\nimport { createContext, MaybeRenderProp } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport {\n  AccordionProvider,\n  useAccordion,\n  useAccordionContext,\n  useAccordionItem,\n  UseAccordionItemProps,\n  UseAccordionItemReturn,\n  UseAccordionProps,\n  AccordionDescendantsProvider,\n} from \"./use-accordion\"\n\n/* -------------------------------------------------------------------------------------------------\n * Accordion - The wrapper that provides context for all accordion items\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface AccordionProps\n  extends UseAccordionProps,\n    Omit<HTMLChakraProps<\"div\">, keyof UseAccordionProps>,\n    ThemingProps<\"Accordion\"> {\n  /**\n   * If `true`, height animation and transitions will be disabled.\n   */\n  reduceMotion?: boolean\n}\n\n/**\n * The wrapper that provides context and focus management\n * for all accordion items.\n *\n * It wraps all accordion items in a `div` for better grouping.\n * @see Docs https://chakra-ui.com/accordion\n */\nexport const Accordion = forwardRef<AccordionProps, \"div\">(\n  ({ children, reduceMotion, ...props }, ref) => {\n    const styles = useMultiStyleConfig(\"Accordion\", props)\n    const ownProps = omitThemingProps(props)\n\n    const { htmlProps, descendants, ...context } = useAccordion(ownProps)\n\n    const ctx = React.useMemo(\n      () => ({ ...context, reduceMotion: !!reduceMotion }),\n      [context, reduceMotion],\n    )\n\n    return (\n      <AccordionDescendantsProvider value={descendants}>\n        <AccordionProvider value={ctx}>\n          <StylesProvider value={styles}>\n            <chakra.div\n              ref={ref}\n              {...htmlProps}\n              className={cx(\"chakra-accordion\", props.className)}\n            >\n              {children}\n            </chakra.div>\n          </StylesProvider>\n        </AccordionProvider>\n      </AccordionDescendantsProvider>\n    )\n  },\n)\n\nif (__DEV__) {\n  Accordion.displayName = \"Accordion\"\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Accordion Item\n * -----------------------------------------------------------------------------------------------*/\n\ntype AccordionItemContext = Omit<UseAccordionItemReturn, \"htmlProps\">\n\nconst [\n  AccordionItemProvider,\n  useAccordionItemContext,\n] = createContext<AccordionItemContext>({\n  name: \"AccordionItemContext\",\n  errorMessage:\n    \"useAccordionItemContext: `context` is undefined. Seems you forgot to wrap the accordion item parts in `<AccordionItem />` \",\n})\n\nexport interface AccordionItemProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof UseAccordionItemProps>,\n    UseAccordionItemProps {\n  children?: MaybeRenderProp<{\n    isExpanded: boolean\n    isDisabled: boolean\n  }>\n}\n\n/**\n * AccordionItem is a single accordion that provides the open-close\n * behavior when the accordion button is clicked.\n *\n * It also provides context for the accordion button and panel.\n */\nexport const AccordionItem = forwardRef<AccordionItemProps, \"div\">(\n  (props, ref) => {\n    const { children, className } = props\n    const { htmlProps, ...context } = useAccordionItem(props)\n\n    const styles = useStyles()\n    const containerStyles: SystemStyleObject = {\n      ...styles.container,\n      overflowAnchor: \"none\",\n    }\n\n    const ctx = React.useMemo(() => context, [context])\n\n    return (\n      <AccordionItemProvider value={ctx}>\n        <chakra.div\n          ref={ref}\n          {...htmlProps}\n          className={cx(\"chakra-accordion__item\", className)}\n          __css={containerStyles}\n        >\n          {runIfFn(children, {\n            isExpanded: !!context.isOpen,\n            isDisabled: !!context.isDisabled,\n          })}\n        </chakra.div>\n      </AccordionItemProvider>\n    )\n  },\n)\n\nif (__DEV__) {\n  AccordionItem.displayName = \"AccordionItem\"\n}\n\n/**\n * React hook to get the state and actions of an accordion item\n */\nexport function useAccordionItemState() {\n  const { isOpen, isDisabled, onClose, onOpen } = useAccordionItemContext()\n  return { isOpen, onClose, isDisabled, onOpen }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Accordion Item => Button\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface AccordionButtonProps extends HTMLChakraProps<\"button\"> {}\n\n/**\n * AccordionButton is used expands and collapses an accordion item.\n * It must be a child of `AccordionItem`.\n *\n * Note 🚨: Each accordion button must be wrapped in an heading tag,\n * that is appropriate for the information architecture of the page.\n */\nexport const AccordionButton = forwardRef<AccordionButtonProps, \"button\">(\n  (props, ref) => {\n    const { getButtonProps } = useAccordionItemContext()\n    const buttonProps = getButtonProps(props, ref)\n\n    const styles = useStyles()\n    const buttonStyles: SystemStyleObject = {\n      display: \"flex\",\n      alignItems: \"center\",\n      width: \"100%\",\n      outline: 0,\n      ...styles.button,\n    }\n\n    return (\n      <chakra.button\n        {...buttonProps}\n        className={cx(\"chakra-accordion__button\", props.className)}\n        __css={buttonStyles}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  AccordionButton.displayName = \"AccordionButton\"\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Accordion Item => Panel\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface AccordionPanelProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Accordion panel that holds the content for each accordion.\n * It shows and hides based on the state login from the `AccordionItem`.\n *\n * It uses the `Collapse` component to animate its height.\n */\nexport const AccordionPanel = forwardRef<AccordionPanelProps, \"div\">(\n  (props, ref) => {\n    const { reduceMotion } = useAccordionContext()\n    const { getPanelProps, isOpen } = useAccordionItemContext()\n\n    // remove `hidden` prop, 'coz we're using height animation\n    const panelProps = getPanelProps(props, ref)\n\n    const _className = cx(\"chakra-accordion__panel\", props.className)\n    const styles = useStyles()\n\n    if (!reduceMotion) {\n      delete panelProps.hidden\n    }\n\n    const child = (\n      <chakra.div {...panelProps} __css={styles.panel} className={_className} />\n    )\n\n    if (!reduceMotion) {\n      return <Collapse in={isOpen}>{child}</Collapse>\n    }\n\n    return child\n  },\n)\n\nif (__DEV__) {\n  AccordionPanel.displayName = \"AccordionPanel\"\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Accordion Item => Icon\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * AccordionIcon that gives a visual cue of the open/close state of the accordion item.\n * It rotates `180deg` based on the open/close state.\n */\nexport const AccordionIcon: React.FC<IconProps> = (props) => {\n  const { isOpen, isDisabled } = useAccordionItemContext()\n  const { reduceMotion } = useAccordionContext()\n\n  const _className = cx(\"chakra-accordion__icon\", props.className)\n  const styles = useStyles()\n\n  const iconStyles: SystemStyleObject = {\n    opacity: isDisabled ? 0.4 : 1,\n    transform: isOpen ? \"rotate(-180deg)\" : undefined,\n    transition: reduceMotion ? undefined : \"transform 0.2s\",\n    transformOrigin: \"center\",\n    ...styles.icon,\n  }\n\n  return (\n    <Icon\n      viewBox=\"0 0 24 24\"\n      aria-hidden\n      className={_className}\n      __css={iconStyles}\n      {...props}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n      />\n    </Icon>\n  )\n}\n\nif (__DEV__) {\n  AccordionIcon.displayName = \"AccordionIcon\"\n}\n"],"file":"accordion.js"}