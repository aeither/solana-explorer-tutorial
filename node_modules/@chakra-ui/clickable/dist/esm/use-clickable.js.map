{"version":3,"sources":["../../src/use-clickable.ts"],"names":["dataAttr","isRightClick","mergeRefs","React","useEventListeners","isValidElement","event","element","target","tagName","isContentEditable","useClickable","props","ref","htmlRef","isDisabled","isFocusable","clickOnEnter","clickOnSpace","onMouseDown","onMouseUp","onClick","onKeyDown","onKeyUp","tabIndex","tabIndexProp","onMouseOver","onMouseLeave","htmlProps","isButton","setIsButton","useState","isPressed","setIsPressed","listeners","refCallback","node","trulyDisabled","handleClick","useCallback","stopPropagation","preventDefault","self","currentTarget","focus","onDocumentKeyUp","e","remove","document","handleKeyDown","defaultPrevented","metaKey","nativeEvent","shouldClickOnEnter","key","shouldClickOnSpace","click","add","handleKeyUp","onDocumentMouseUp","button","handleMouseDown","preventScroll","handleMouseUp","handleMouseOver","handleMouseLeave","type","undefined","disabled","role"],"mappings":"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","sourcesContent":["import { dataAttr, isRightClick } from \"@chakra-ui/utils\"\nimport { mergeRefs } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport { useEventListeners } from \"./use-event-listeners\"\n\nexport interface UseClickableProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * If `true`, the element will be disabled.\n   * It will set the `disabled` HTML attribute\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and isDisabled, the element will\n   * have only `aria-disabled` set to `true`\n   */\n  isFocusable?: boolean\n  /**\n   * Whether or not trigger click on pressing `Enter`.\n   */\n  clickOnEnter?: boolean\n  /**\n   * Whether or not trigger click on pressing `Space`.\n   */\n  clickOnSpace?: boolean\n  /**\n   * The ref for the element\n   */\n  ref?: React.Ref<HTMLElement>\n}\n\nfunction isValidElement(event: KeyboardEvent): boolean {\n  const element = event.target as HTMLElement\n  const { tagName, isContentEditable } = element\n  return (\n    tagName !== \"INPUT\" && tagName !== \"TEXTAREA\" && isContentEditable !== true\n  )\n}\n\n/**\n * useClickable implements all the interactions of a native `button`\n * component with support for making it focusable even if it is disabled.\n *\n * It can be used with both native button elements or other elements (like `div`).\n */\nexport function useClickable(props: UseClickableProps = {}) {\n  const {\n    ref: htmlRef,\n    isDisabled,\n    isFocusable,\n    clickOnEnter = true,\n    clickOnSpace = true,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onKeyDown,\n    onKeyUp,\n    tabIndex: tabIndexProp,\n    onMouseOver,\n    onMouseLeave,\n    ...htmlProps\n  } = props\n  /**\n   * We'll use this to track if the element is a button element\n   */\n  const [isButton, setIsButton] = React.useState(true)\n\n  /**\n   * For custom button implementation, we'll use this to track when\n   * we mouse down on the button, to enable use style its \":active\" style\n   */\n  const [isPressed, setIsPressed] = React.useState(false)\n\n  const listeners = useEventListeners()\n\n  /**\n   * The ref callback that fires as soon as the dom node is ready\n   */\n  const refCallback = (node: any) => {\n    if (!node) return\n    if (node.tagName !== \"BUTTON\") {\n      setIsButton(false)\n    }\n  }\n\n  const tabIndex = isButton ? tabIndexProp : tabIndexProp || 0\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isDisabled) {\n        event.stopPropagation()\n        event.preventDefault()\n        return\n      }\n\n      const self = event.currentTarget as HTMLElement\n      self.focus()\n      onClick?.(event)\n    },\n    [isDisabled, onClick],\n  )\n\n  const onDocumentKeyUp = React.useCallback(\n    (e: KeyboardEvent) => {\n      if (isPressed && isValidElement(e)) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        setIsPressed(false)\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        listeners.remove(document, \"keyup\", onDocumentKeyUp, false)\n      }\n    },\n    [isPressed, listeners],\n  )\n\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      onKeyDown?.(event)\n\n      if (isDisabled || event.defaultPrevented || event.metaKey) {\n        return\n      }\n\n      if (!isValidElement(event.nativeEvent) || isButton) return\n\n      const shouldClickOnEnter = clickOnEnter && event.key === \"Enter\"\n      const shouldClickOnSpace = clickOnSpace && event.key === \" \"\n\n      if (shouldClickOnSpace) {\n        event.preventDefault()\n        setIsPressed(true)\n      }\n\n      if (shouldClickOnEnter) {\n        event.preventDefault()\n        const self = event.currentTarget as HTMLElement\n        self.click()\n      }\n\n      listeners.add(document, \"keyup\", onDocumentKeyUp, false)\n    },\n    [\n      isDisabled,\n      isButton,\n      onKeyDown,\n      clickOnEnter,\n      clickOnSpace,\n      listeners,\n      onDocumentKeyUp,\n    ],\n  )\n\n  const handleKeyUp = React.useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      onKeyUp?.(event)\n\n      if (isDisabled || event.defaultPrevented || event.metaKey) return\n\n      if (!isValidElement(event.nativeEvent) || isButton) return\n\n      const shouldClickOnSpace = clickOnSpace && event.key === \" \"\n\n      if (shouldClickOnSpace) {\n        event.preventDefault()\n        setIsPressed(false)\n\n        const self = event.currentTarget as HTMLElement\n        self.click()\n      }\n    },\n    [clickOnSpace, isButton, isDisabled, onKeyUp],\n  )\n\n  const onDocumentMouseUp = React.useCallback(\n    (event: MouseEvent) => {\n      if (event.button !== 0) return\n      setIsPressed(false)\n      listeners.remove(document, \"mouseup\", onDocumentMouseUp, false)\n    },\n    [listeners],\n  )\n\n  const handleMouseDown = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isRightClick(event)) return\n\n      if (isDisabled) {\n        event.stopPropagation()\n        event.preventDefault()\n        return\n      }\n\n      if (!isButton) {\n        setIsPressed(true)\n      }\n\n      const target = event.currentTarget as HTMLElement\n      target.focus({ preventScroll: true })\n\n      listeners.add(document, \"mouseup\", onDocumentMouseUp, false)\n\n      onMouseDown?.(event)\n    },\n    [isDisabled, isButton, onMouseDown, listeners, onDocumentMouseUp],\n  )\n\n  const handleMouseUp = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isRightClick(event)) return\n\n      if (!isButton) {\n        setIsPressed(false)\n      }\n\n      onMouseUp?.(event)\n    },\n    [onMouseUp, isButton],\n  )\n\n  const handleMouseOver = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      onMouseOver?.(event)\n    },\n    [isDisabled, onMouseOver],\n  )\n\n  const handleMouseLeave = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isPressed) {\n        event.preventDefault()\n        setIsPressed(false)\n      }\n      onMouseLeave?.(event)\n    },\n    [isPressed, onMouseLeave],\n  )\n\n  const ref = mergeRefs(htmlRef, refCallback)\n\n  if (isButton) {\n    return {\n      ...htmlProps,\n      ref,\n      type: \"button\" as React.ButtonHTMLAttributes<any>[\"type\"],\n      \"aria-disabled\": trulyDisabled ? undefined : isDisabled,\n      disabled: trulyDisabled,\n      onClick: handleClick,\n      onMouseDown,\n      onMouseUp,\n      onKeyUp,\n      onKeyDown,\n      onMouseOver,\n      onMouseLeave,\n    }\n  }\n\n  return {\n    ...htmlProps,\n    ref,\n    role: \"button\",\n    \"data-active\": dataAttr(isPressed),\n    \"aria-disabled\": isDisabled ? (\"true\" as const) : undefined,\n    tabIndex: trulyDisabled ? undefined : tabIndex,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    onMouseUp: handleMouseUp,\n    onKeyUp: handleKeyUp,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseLeave: handleMouseLeave,\n  }\n}\n\nexport type UseClickableReturn = ReturnType<typeof useClickable>\n"],"file":"use-clickable.js"}