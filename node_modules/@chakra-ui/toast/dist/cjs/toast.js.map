{"version":3,"sources":["../../src/toast.tsx"],"names":["toastMotionVariants","initial","props","position","dir","includes","factor","opacity","animate","y","x","scale","transition","duration","ease","exit","Toast","id","message","onCloseComplete","onRequestRemove","requestClose","React","useState","delay","setDelay","isPresent","onMouseEnter","onMouseLeave","close","useEffect","style","useMemo","pointerEvents","maxWidth","minWidth","margin","onClose","__DEV__","displayName"],"mappings":"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","sourcesContent":["import { useTimeout, useUpdateEffect } from \"@chakra-ui/hooks\"\nimport { isFunction, __DEV__ } from \"@chakra-ui/utils\"\nimport ReachAlert from \"@reach/alert\"\nimport { motion, useIsPresent, Variants } from \"framer-motion\"\nimport * as React from \"react\"\nimport { ToastOptions } from \"./toast.types\"\nimport { getToastStyle } from \"./toast.utils\"\n\n/**\n * @todo After Gerrit refactors this implementation,\n * allow users to change the toast transition direction from\n * a `ToastProvider` component.\n *\n * Here's an API example:\n *\n * ```jsx\n * <ToastProvider\n *   motion={customVariants}\n *   component={CustomToastComponent}\n *   autoCloseTimeout={3000}\n *   toastSpacing={32} // this will control the `margin` value applied\n * >\n * </ToastProvider>\n * ```\n */\nconst toastMotionVariants: Variants = {\n  initial: (props) => {\n    const { position } = props\n\n    const dir = [\"top\", \"bottom\"].includes(position) ? \"y\" : \"x\"\n\n    let factor = [\"top-right\", \"bottom-right\"].includes(position) ? 1 : -1\n    if (position === \"bottom\") factor = 1\n\n    return {\n      opacity: 0,\n      [dir]: factor * 24,\n    }\n  },\n  animate: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.85,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n}\n\nexport interface ToastProps extends ToastOptions {}\n\nexport const Toast: React.FC<ToastProps> = (props) => {\n  const {\n    id,\n    message,\n    onCloseComplete,\n    onRequestRemove,\n    requestClose = false,\n    position = \"bottom\",\n    duration = 5000,\n  } = props\n\n  const [delay, setDelay] = React.useState(duration)\n\n  const isPresent = useIsPresent()\n\n  useUpdateEffect(() => {\n    if (!isPresent) {\n      onCloseComplete?.()\n    }\n  }, [isPresent])\n\n  useUpdateEffect(() => {\n    setDelay(duration)\n  }, [duration])\n\n  const onMouseEnter = () => setDelay(null)\n  const onMouseLeave = () => setDelay(duration)\n\n  const close = () => {\n    if (isPresent) onRequestRemove()\n  }\n\n  React.useEffect(() => {\n    if (isPresent && requestClose) {\n      onRequestRemove()\n    }\n  }, [isPresent, requestClose, onRequestRemove])\n\n  useTimeout(close, delay)\n\n  const style = React.useMemo(() => getToastStyle(position), [position])\n\n  return (\n    <motion.li\n      layout\n      className=\"chakra-toast\"\n      variants={toastMotionVariants}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      onHoverStart={onMouseEnter}\n      onHoverEnd={onMouseLeave}\n      custom={{ position }}\n      style={style}\n    >\n      <ReachAlert\n        className=\"chakra-toast__inner\"\n        style={{\n          pointerEvents: \"auto\",\n          maxWidth: 560,\n          minWidth: 300,\n          margin: \"0.5rem\",\n        }}\n      >\n        {isFunction(message) ? message({ id, onClose: close }) : message}\n      </ReachAlert>\n    </motion.li>\n  )\n}\n\nif (__DEV__) {\n  Toast.displayName = \"Toast\"\n}\n"],"file":"toast.js"}