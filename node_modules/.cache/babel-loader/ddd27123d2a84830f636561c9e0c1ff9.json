{"ast":null,"code":"// Really great work done by Diego Haz on this one\n// https://github.com/reakit/reakit/blob/master/packages/reakit-utils/src/tabbable.ts\nimport { getOwnerDocument, isHTMLElement } from \"./dom\";\nexport var hasDisplayNone = function hasDisplayNone(element) {\n  return window.getComputedStyle(element).display === \"none\";\n};\nexport var hasTabIndex = function hasTabIndex(element) {\n  return element.hasAttribute(\"tabindex\");\n};\nexport var hasNegativeTabIndex = function hasNegativeTabIndex(element) {\n  return hasTabIndex(element) && element.tabIndex === -1;\n};\nexport function isDisabled(element) {\n  return Boolean(element.getAttribute(\"disabled\")) === true || Boolean(element.getAttribute(\"aria-disabled\")) === true;\n}\nexport function isInputElement(element) {\n  return isHTMLElement(element) && element.tagName.toLowerCase() === \"input\" && \"select\" in element;\n}\nexport function isActiveElement(element) {\n  var doc = isHTMLElement(element) ? getOwnerDocument(element) : document;\n  return doc.activeElement === element;\n}\nexport function hasFocusWithin(element) {\n  if (!document.activeElement) return false;\n  return element.contains(document.activeElement);\n}\nexport function isHidden(element) {\n  if (element.parentElement && isHidden(element.parentElement)) return true;\n  return element.hidden;\n}\nexport function isContentEditable(element) {\n  var value = element.getAttribute(\"contenteditable\");\n  return value !== \"false\" && value != null;\n}\nexport function isFocusable(element) {\n  if (!isHTMLElement(element) || isHidden(element) || isDisabled(element)) {\n    return false;\n  }\n\n  var localName = element.localName;\n  var focusableTags = [\"input\", \"select\", \"textarea\", \"button\"];\n  if (focusableTags.indexOf(localName) >= 0) return true;\n  var others = {\n    a: function a() {\n      return element.hasAttribute(\"href\");\n    },\n    audio: function audio() {\n      return element.hasAttribute(\"controls\");\n    },\n    video: function video() {\n      return element.hasAttribute(\"controls\");\n    }\n  };\n\n  if (localName in others) {\n    return others[localName]();\n  }\n\n  if (isContentEditable(element)) return true;\n  return hasTabIndex(element);\n}\nexport function isTabbable(element) {\n  if (!element) return false;\n  return isHTMLElement(element) && isFocusable(element) && !hasNegativeTabIndex(element);\n}","map":{"version":3,"sources":["../../src/tabbable.ts"],"names":["hasDisplayNone","element","window","hasTabIndex","hasNegativeTabIndex","Boolean","isHTMLElement","doc","getOwnerDocument","document","isHidden","value","isDisabled","localName","focusableTags","others","a","audio","video","isContentEditable","isFocusable"],"mappings":"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","sourcesContent":["// Really great work done by Diego Haz on this one\n// https://github.com/reakit/reakit/blob/master/packages/reakit-utils/src/tabbable.ts\n\nimport { getOwnerDocument, isHTMLElement } from \"./dom\"\n\nexport const hasDisplayNone = (element: HTMLElement) =>\n  window.getComputedStyle(element).display === \"none\"\n\nexport const hasTabIndex = (element: HTMLElement) =>\n  element.hasAttribute(\"tabindex\")\n\nexport const hasNegativeTabIndex = (element: HTMLElement) =>\n  hasTabIndex(element) && element.tabIndex === -1\n\nexport function isDisabled(element: HTMLElement) {\n  return (\n    Boolean(element.getAttribute(\"disabled\")) === true ||\n    Boolean(element.getAttribute(\"aria-disabled\")) === true\n  )\n}\n\nexport interface FocusableElement {\n  focus(options?: FocusOptions): void\n}\n\nexport function isInputElement(\n  element: FocusableElement,\n): element is HTMLInputElement {\n  return (\n    isHTMLElement(element) &&\n    element.tagName.toLowerCase() === \"input\" &&\n    \"select\" in element\n  )\n}\n\nexport function isActiveElement(element: FocusableElement) {\n  const doc = isHTMLElement(element) ? getOwnerDocument(element) : document\n  return doc.activeElement === (element as HTMLElement)\n}\n\nexport function hasFocusWithin(element: HTMLElement) {\n  if (!document.activeElement) return false\n  return element.contains(document.activeElement)\n}\n\nexport function isHidden(element: HTMLElement) {\n  if (element.parentElement && isHidden(element.parentElement)) return true\n  return element.hidden\n}\n\nexport function isContentEditable(element: HTMLElement) {\n  const value = element.getAttribute(\"contenteditable\")\n  return value !== \"false\" && value != null\n}\n\nexport function isFocusable(element: HTMLElement) {\n  if (!isHTMLElement(element) || isHidden(element) || isDisabled(element)) {\n    return false\n  }\n\n  const { localName } = element\n  const focusableTags = [\"input\", \"select\", \"textarea\", \"button\"]\n  if (focusableTags.indexOf(localName) >= 0) return true\n\n  const others = {\n    a: () => element.hasAttribute(\"href\"),\n    audio: () => element.hasAttribute(\"controls\"),\n    video: () => element.hasAttribute(\"controls\"),\n  }\n\n  if (localName in others) {\n    return others[localName as keyof typeof others]()\n  }\n\n  if (isContentEditable(element)) return true\n\n  return hasTabIndex(element)\n}\n\nexport function isTabbable(element?: HTMLElement | null) {\n  if (!element) return false\n  return (\n    isHTMLElement(element) &&\n    isFocusable(element) &&\n    !hasNegativeTabIndex(element)\n  )\n}\n"]},"metadata":{},"sourceType":"module"}