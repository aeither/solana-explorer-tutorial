{"version":3,"sources":["../../../src/utils/index.ts"],"names":["t","borderWidths","borderStyles","colors","borders","radii","transforms","px","space","spaceT","degreeT","property","transform","degree","prop","scale","propT","sizes","sizesT","fraction","shadows","logical","blur"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;;;AAIA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAEO,IAAMA,CAAC,GAAG;AACfC,EAAAA,YAAY,EAAE,0BAAS,cAAT,CADC;AAEfC,EAAAA,YAAY,EAAE,0BAAS,cAAT,CAFC;AAGfC,EAAAA,MAAM,EAAE,0BAAS,QAAT,CAHO;AAIfC,EAAAA,OAAO,EAAE,0BAAS,SAAT,CAJM;AAKfC,EAAAA,KAAK,EAAE,0BAAS,OAAT,EAAkBC,uCAAWC,EAA7B,CALQ;AAMfC,EAAAA,KAAK,EAAE,0BAAS,OAAT,EAAkBF,uCAAWC,EAA7B,CANQ;AAOfE,EAAAA,MAAM,EAAE,0BAAS,OAAT,EAAkBH,uCAAWC,EAA7B,CAPO;AAQfG,EAAAA,OARe,mBAQPC,QARO,EAQ2B;AACxC,WAAO;AAAEA,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,SAAS,EAAEN,uCAAWO;AAAlC,KAAP;AACD,GAVc;AAWfC,EAAAA,IAXe,gBAYbH,QAZa,EAabI,KAba,EAcbH,SAda,EAeb;AACA;AACED,MAAAA,QAAQ,EAARA,QADF;AAEEI,MAAAA,KAAK,EAALA;AAFF,OAGMA,KAAK,IAAI;AACXH,MAAAA,SAAS,EAAE,sCAAgB;AAAEG,QAAAA,KAAK,EAALA,KAAF;AAASH,QAAAA,SAAS,EAATA;AAAT,OAAhB;AADA,KAHf;AAOD,GAvBc;AAwBfI,EAAAA,KAxBe,iBAwBTL,QAxBS,EAwByBC,SAxBzB,EAwB8D;AAC3E,WAAO;AAAED,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,SAAS,EAATA;AAAZ,KAAP;AACD,GA1Bc;AA2BfK,EAAAA,KAAK,EAAE,0BAAS,OAAT,EAAkBX,uCAAWC,EAA7B,CA3BQ;AA4BfW,EAAAA,MAAM,EAAE,0BAAS,OAAT,EAAkBZ,uCAAWa,QAA7B,CA5BO;AA6BfC,EAAAA,OAAO,EAAE,0BAAS,SAAT,CA7BM;AA8BfC,EAAAA,OAAO,EAAPA,mBA9Be;AA+BfC,EAAAA,IAAI,EAAE,0BAAS,MAAT,EAAiBhB,uCAAWgB,IAA5B;AA/BS,CAAV","sourcesContent":["import type { ThemeScale } from \"../create-theme-vars\"\nimport { createTransform } from \"./create-transform\"\nimport { logical, PropConfig, toConfig } from \"./prop-config\"\nimport { transformFunctions as transforms } from \"./transform-functions\"\n\nexport { transforms }\n\nexport * from \"./types\"\n\nexport const t = {\n  borderWidths: toConfig(\"borderWidths\"),\n  borderStyles: toConfig(\"borderStyles\"),\n  colors: toConfig(\"colors\"),\n  borders: toConfig(\"borders\"),\n  radii: toConfig(\"radii\", transforms.px),\n  space: toConfig(\"space\", transforms.px),\n  spaceT: toConfig(\"space\", transforms.px),\n  degreeT(property: PropConfig[\"property\"]) {\n    return { property, transform: transforms.degree }\n  },\n  prop(\n    property: PropConfig[\"property\"],\n    scale?: ThemeScale,\n    transform?: PropConfig[\"transform\"],\n  ) {\n    return {\n      property,\n      scale,\n      ...(scale && {\n        transform: createTransform({ scale, transform }),\n      }),\n    }\n  },\n  propT(property: PropConfig[\"property\"], transform?: PropConfig[\"transform\"]) {\n    return { property, transform }\n  },\n  sizes: toConfig(\"sizes\", transforms.px),\n  sizesT: toConfig(\"sizes\", transforms.fraction),\n  shadows: toConfig(\"shadows\"),\n  logical,\n  blur: toConfig(\"blur\", transforms.blur),\n}\n"],"file":"index.js"}