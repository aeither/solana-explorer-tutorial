{"ast":null,"code":"import { t } from \"../utils\";\nexport var position = {\n  position: true,\n  pos: t.prop(\"position\"),\n  zIndex: t.prop(\"zIndex\", \"zIndices\"),\n  inset: t.spaceT([\"top\", \"right\", \"bottom\", \"left\"]),\n  insetX: t.spaceT([\"left\", \"right\"]),\n  insetInline: t.spaceT(\"insetInline\"),\n  insetY: t.spaceT([\"top\", \"bottom\"]),\n  insetBlock: t.spaceT(\"insetBlock\"),\n  top: t.spaceT(\"top\"),\n  insetBlockStart: t.spaceT(\"insetBlockStart\"),\n  bottom: t.spaceT(\"bottom\"),\n  insetBlockEnd: t.spaceT(\"insetBlockEnd\"),\n  left: t.spaceT(\"left\"),\n  insetInlineStart: t.logical({\n    scale: \"space\",\n    property: {\n      ltr: \"left\",\n      rtl: \"right\"\n    }\n  }),\n  right: t.spaceT(\"right\"),\n  insetInlineEnd: t.logical({\n    scale: \"space\",\n    property: {\n      ltr: \"right\",\n      rtl: \"left\"\n    }\n  })\n};\nObject.assign(position, {\n  insetStart: position.insetInlineStart,\n  insetEnd: position.insetInlineEnd\n});\n/**\n * Types for position CSS properties\n */","map":{"version":3,"sources":["../../../src/config/position.ts"],"names":["position","pos","t","zIndex","inset","insetX","insetInline","insetY","insetBlock","top","insetBlockStart","bottom","insetBlockEnd","left","insetInlineStart","scale","property","ltr","rtl","right","insetInlineEnd","Object","insetStart","insetEnd"],"mappings":"AAEA,SAAA,CAAA,QAAA,UAAA;AAEA,OAAO,IAAMA,QAAgB,GAAG;AAC9BA,EAAAA,QAAQ,EADsB,IAAA;AAE9BC,EAAAA,GAAG,EAAEC,CAAC,CAADA,IAAAA,CAFyB,UAEzBA,CAFyB;AAG9BC,EAAAA,MAAM,EAAED,CAAC,CAADA,IAAAA,CAAAA,QAAAA,EAHsB,UAGtBA,CAHsB;AAI9BE,EAAAA,KAAK,EAAEF,CAAC,CAADA,MAAAA,CAAS,CAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAJc,MAId,CAATA,CAJuB;AAK9BG,EAAAA,MAAM,EAAEH,CAAC,CAADA,MAAAA,CAAS,CAAA,MAAA,EALa,OAKb,CAATA,CALsB;AAM9BI,EAAAA,WAAW,EAAEJ,CAAC,CAADA,MAAAA,CANiB,aAMjBA,CANiB;AAO9BK,EAAAA,MAAM,EAAEL,CAAC,CAADA,MAAAA,CAAS,CAAA,KAAA,EAPa,QAOb,CAATA,CAPsB;AAQ9BM,EAAAA,UAAU,EAAEN,CAAC,CAADA,MAAAA,CARkB,YAQlBA,CARkB;AAS9BO,EAAAA,GAAG,EAAEP,CAAC,CAADA,MAAAA,CATyB,KASzBA,CATyB;AAU9BQ,EAAAA,eAAe,EAAER,CAAC,CAADA,MAAAA,CAVa,iBAUbA,CAVa;AAW9BS,EAAAA,MAAM,EAAET,CAAC,CAADA,MAAAA,CAXsB,QAWtBA,CAXsB;AAY9BU,EAAAA,aAAa,EAAEV,CAAC,CAADA,MAAAA,CAZe,eAYfA,CAZe;AAa9BW,EAAAA,IAAI,EAAEX,CAAC,CAADA,MAAAA,CAbwB,MAaxBA,CAbwB;AAc9BY,EAAAA,gBAAgB,EAAE,CAAC,CAAD,OAAA,CAAU;AAC1BC,IAAAA,KAAK,EADqB,OAAA;AAE1BC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,GAAG,EAAL,MAAA;AAAeC,MAAAA,GAAG,EAAE;AAApB;AAFgB,GAAV,CAdY;AAkB9BC,EAAAA,KAAK,EAAEjB,CAAC,CAADA,MAAAA,CAlBuB,OAkBvBA,CAlBuB;AAmB9BkB,EAAAA,cAAc,EAAE,CAAC,CAAD,OAAA,CAAU;AACxBL,IAAAA,KAAK,EADmB,OAAA;AAExBC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,GAAG,EAAL,OAAA;AAAgBC,MAAAA,GAAG,EAAE;AAArB;AAFc,GAAV;AAnBc,CAAzB;AAyBPG,MAAM,CAANA,MAAAA,CAAAA,QAAAA,EAAwB;AACtBC,EAAAA,UAAU,EAAEtB,QAAQ,CADE,gBAAA;AAEtBuB,EAAAA,QAAQ,EAAEvB,QAAQ,CAACoB;AAFG,CAAxBC;AAKA;AACA;AACA","sourcesContent":["import * as CSS from \"csstype\"\nimport { Config } from \"../utils/prop-config\"\nimport { t, Token } from \"../utils\"\n\nexport const position: Config = {\n  position: true,\n  pos: t.prop(\"position\"),\n  zIndex: t.prop(\"zIndex\", \"zIndices\"),\n  inset: t.spaceT([\"top\", \"right\", \"bottom\", \"left\"]),\n  insetX: t.spaceT([\"left\", \"right\"]),\n  insetInline: t.spaceT(\"insetInline\"),\n  insetY: t.spaceT([\"top\", \"bottom\"]),\n  insetBlock: t.spaceT(\"insetBlock\"),\n  top: t.spaceT(\"top\"),\n  insetBlockStart: t.spaceT(\"insetBlockStart\"),\n  bottom: t.spaceT(\"bottom\"),\n  insetBlockEnd: t.spaceT(\"insetBlockEnd\"),\n  left: t.spaceT(\"left\"),\n  insetInlineStart: t.logical({\n    scale: \"space\",\n    property: { ltr: \"left\", rtl: \"right\" },\n  }),\n  right: t.spaceT(\"right\"),\n  insetInlineEnd: t.logical({\n    scale: \"space\",\n    property: { ltr: \"right\", rtl: \"left\" },\n  }),\n}\n\nObject.assign(position, {\n  insetStart: position.insetInlineStart,\n  insetEnd: position.insetInlineEnd,\n})\n\n/**\n * Types for position CSS properties\n */\nexport interface PositionProps {\n  /**\n   * The CSS `z-index` property\n   */\n  zIndex?: Token<CSS.Property.ZIndex, \"zIndices\">\n  /**\n   * The CSS `top` property\n   */\n  top?: Token<CSS.Property.Top | number, \"sizes\">\n  insetBlockStart?: Token<CSS.Property.InsetBlockStart | number, \"sizes\">\n  /**\n   * The CSS `right` property\n   */\n  right?: Token<CSS.Property.Right | number, \"sizes\">\n  /**\n   * When the direction is `ltr`, `insetInlineEnd` is equivalent to `right`.\n   * When the direction is `rtl`, `insetInlineEnd` is equivalent to `left`.\n   */\n  insetInlineEnd?: Token<CSS.Property.InsetInlineEnd | number, \"sizes\">\n  /**\n   * When the direction is `ltr`, `insetEnd` is equivalent to `right`.\n   * When the direction is `rtl`, `insetEnd` is equivalent to `left`.\n   */\n  insetEnd?: Token<CSS.Property.InsetInlineEnd | number, \"sizes\">\n  /**\n   * The CSS `bottom` property\n   */\n  bottom?: Token<CSS.Property.Bottom | number, \"sizes\">\n  insetBlockEnd?: Token<CSS.Property.InsetBlockEnd | number, \"sizes\">\n  /**\n   * The CSS `left` property\n   */\n  left?: Token<CSS.Property.Left | number, \"sizes\">\n  insetInlineStart?: Token<CSS.Property.InsetInlineStart | number, \"sizes\">\n  /**\n   * When the direction is `start`, `end` is equivalent to `left`.\n   * When the direction is `start`, `end` is equivalent to `right`.\n   */\n  insetStart?: Token<CSS.Property.InsetInlineStart | number, \"sizes\">\n  /**\n   * The CSS `left`, `right`, `top`, `bottom` property\n   */\n  inset?: Token<CSS.Property.Left | number, \"sizes\">\n  /**\n   * The CSS `left`, and `right` property\n   */\n  insetX?: Token<CSS.Property.Left | number, \"sizes\">\n  /**\n   * The CSS `top`, and `bottom` property\n   */\n  insetY?: Token<CSS.Property.Left | number, \"sizes\">\n  /**\n   * The CSS `position` property\n   */\n  pos?: Token<CSS.Property.Position>\n  /**\n   * The CSS `position` property\n   */\n  position?: Token<CSS.Property.Position>\n  insetInline?: Token<CSS.Property.InsetInline>\n  insetBlock?: Token<CSS.Property.InsetBlock>\n}\n"]},"metadata":{},"sourceType":"module"}