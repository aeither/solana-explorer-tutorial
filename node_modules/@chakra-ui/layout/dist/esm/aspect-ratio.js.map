{"version":3,"sources":["../../src/aspect-ratio.tsx"],"names":["chakra","forwardRef","cx","mapResponsive","__DEV__","React","AspectRatio","props","ref","ratio","children","className","rest","child","Children","only","_className","height","content","display","paddingBottom","r","overflow","position","top","right","bottom","left","justifyContent","alignItems","width","objectFit","displayName"],"mappings":";;;;AAAA,SACEA,MADF,EAEEC,UAFF,QAKO,mBALP;AAMA,SAASC,EAAT,EAAaC,aAAb,EAA4BC,OAA5B,QAA2C,kBAA3C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,WAAW,gBAAGL,UAAU,CAA0B,CAACM,KAAD,EAAQC,GAAR,KAAgB;AAC7E,MAAM;AAAEC,IAAAA,KAAK,GAAG,IAAI,CAAd;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA;AAA3B,MAAkDJ,KAAxD;AAAA,MAA+CK,IAA/C,iCAAwDL,KAAxD,sCAD6E,CAG7E;;;AACA,MAAMM,KAAK,GAAGR,KAAK,CAACS,QAAN,CAAeC,IAAf,CAAoBL,QAApB,CAAd;;AAEA,MAAMM,UAAU,GAAGd,EAAE,CAAC,qBAAD,EAAwBS,SAAxB,CAArB;;AAEA,sBACE,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEH,GADP;AAEE,IAAA,QAAQ,EAAC,UAFX;AAGE,IAAA,SAAS,EAAEQ,UAHb;AAIE,IAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,CADD;AAEPC,MAAAA,OAAO,QAFA;AAGPC,MAAAA,OAAO,EAAE,OAHF;AAIPC,MAAAA,aAAa,EAAEjB,aAAa,CAACM,KAAD,EAASY,CAAD,IAAW,IAAIA,CAAL,GAAU,GAApB,MAAR;AAJrB,KAJX;AAUE,IAAA,KAAK,EAAE;AACL,0BAAoB;AAClBC,QAAAA,QAAQ,EAAE,QADQ;AAElBC,QAAAA,QAAQ,EAAE,UAFQ;AAGlBC,QAAAA,GAAG,EAAE,GAHa;AAIlBC,QAAAA,KAAK,EAAE,GAJW;AAKlBC,QAAAA,MAAM,EAAE,GALU;AAMlBC,QAAAA,IAAI,EAAE,GANY;AAOlBR,QAAAA,OAAO,EAAE,MAPS;AAQlBS,QAAAA,cAAc,EAAE,QARE;AASlBC,QAAAA,UAAU,EAAE,QATM;AAUlBC,QAAAA,KAAK,EAAE,MAVW;AAWlBb,QAAAA,MAAM,EAAE;AAXU,OADf;AAcL,4BAAsB;AACpBc,QAAAA,SAAS,EAAE;AADS;AAdjB;AAVT,KA4BMnB,IA5BN,GA8BGC,KA9BH,CADF;AAkCD,CA1CoC,CAA9B;;AA4CP,IAAIT,OAAJ,EAAa;AACXE,EAAAA,WAAW,CAAC0B,WAAZ,GAA0B,aAA1B;AACD","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  ResponsiveValue,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, mapResponsive, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\ninterface AspectRatioOptions {\n  /**\n   * The aspect ratio of the Box. Common values are:\n   *\n   * `21/9`, `16/9`, `9/16`, `4/3`, `1.85/1`\n   */\n  ratio?: ResponsiveValue<number>\n}\n\nexport interface AspectRatioProps\n  extends HTMLChakraProps<\"div\">,\n    AspectRatioOptions {}\n\n/**\n * React component used to cropping media (videos, images and maps)\n * to a desired aspect ratio.\n *\n * @see Docs https://chakra-ui.com/aspectratiobox\n */\nexport const AspectRatio = forwardRef<AspectRatioProps, \"div\">((props, ref) => {\n  const { ratio = 4 / 3, children, className, ...rest } = props\n\n  // enforce single child\n  const child = React.Children.only(children)\n\n  const _className = cx(\"chakra-aspect-ratio\", className)\n\n  return (\n    <chakra.div\n      ref={ref}\n      position=\"relative\"\n      className={_className}\n      _before={{\n        height: 0,\n        content: `\"\"`,\n        display: \"block\",\n        paddingBottom: mapResponsive(ratio, (r) => `${(1 / r) * 100}%`),\n      }}\n      __css={{\n        \"& > *:not(style)\": {\n          overflow: \"hidden\",\n          position: \"absolute\",\n          top: \"0\",\n          right: \"0\",\n          bottom: \"0\",\n          left: \"0\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"100%\",\n          height: \"100%\",\n        },\n        \"& > img, & > video\": {\n          objectFit: \"cover\",\n        }\n      }}\n      {...rest}\n    >\n      {child}\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  AspectRatio.displayName = \"AspectRatio\"\n}\n"],"file":"aspect-ratio.js"}