{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/lin/Documents/Projects/solana-explorer-tutorial/src/TpsCard.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { Connection, clusterApiUrl } from \"@solana/web3.js\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var SAMPLE_HISTORY_HOURS = 6;\nexport default function TpsCard() {\n  _s();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      tpsStats = _useState2[0],\n      setTpsStats = _useState2[1];\n\n  useEffect(function () {});\n\n  function getClusterStats() {\n    return _getClusterStats.apply(this, arguments);\n  }\n\n  function _getClusterStats() {\n    _getClusterStats = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, connection, samples, short, avgTps, transactionCount, averageTps, tpsData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"Hello\");\n              url = clusterApiUrl(\"devnet\").replace(\"api\", \"explorer-api\");\n              connection = new Connection(url);\n              _context.next = 5;\n              return connection.getRecentPerformanceSamples(60 * SAMPLE_HISTORY_HOURS);\n\n            case 5:\n              samples = _context.sent;\n              short = samples.filter(function (sample) {\n                return sample.numTransactions !== 0;\n              }).map(function (sample) {\n                return sample.numTransactions / sample.samplePeriodSecs;\n              });\n              avgTps = short[0];\n              _context.next = 10;\n              return connection.getTransactionCount();\n\n            case 10:\n              transactionCount = _context.sent;\n              averageTps = Math.round(avgTps).toLocaleString(\"en-US\"); // console.log(samples);\n\n              tpsData = {\n                transactionCount: transactionCount,\n                averageTps: averageTps\n              };\n              setTpsStats(tpsData);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getClusterStats.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tps Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return getClusterStats();\n      },\n      children: \"Supply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), tpsStats ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"w-100\",\n          children: \"Transaction count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"text-lg-right text-monospace\",\n          children: tpsStats.transactionCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"w-100\",\n          children: \"Transactions per second (TPS)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"text-lg-right text-monospace\",\n          children: [tpsStats.averageTps, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TpsCard, \"fKLKBh0ENkxMZDfki4+BDqBPZXc=\");\n\n_c = TpsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TpsCard\");","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/src/TpsCard.tsx"],"names":["Connection","clusterApiUrl","useEffect","useState","SAMPLE_HISTORY_HOURS","TpsCard","tpsStats","setTpsStats","getClusterStats","console","log","url","replace","connection","getRecentPerformanceSamples","samples","short","filter","sample","numTransactions","map","samplePeriodSecs","avgTps","getTransactionCount","transactionCount","averageTps","Math","round","toLocaleString","tpsData"],"mappings":";;;;;;;AAAA,OAAO,cAAP;AACA,SAAiBA,UAAjB,EAA6BC,aAA7B,QAAkD,iBAAlD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAIA,OAAO,IAAMC,oBAAoB,GAAG,CAA7B;AAOP,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,kBAAgCF,QAAQ,EAAxC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AACAL,EAAAA,SAAS,CAAC,YAAM,CAAE,CAAT,CAAT;;AAFgC,WAGjBM,eAHiB;AAAA;AAAA;;AAAA;AAAA,gFAGhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACMC,cAAAA,GAFR,GAEcV,aAAa,CAAC,QAAD,CAAb,CAAwBW,OAAxB,CAAgC,KAAhC,EAAuC,cAAvC,CAFd;AAGQC,cAAAA,UAHR,GAGqB,IAAIb,UAAJ,CAAeW,GAAf,CAHrB;AAAA;AAAA,qBAIwBE,UAAU,CAACC,2BAAX,CACpB,KAAKV,oBADe,CAJxB;;AAAA;AAIQW,cAAAA,OAJR;AAOMC,cAAAA,KAPN,GAOcD,OAAO,CAChBE,MADS,CACF,UAACC,MAAD,EAAY;AAClB,uBAAOA,MAAM,CAACC,eAAP,KAA2B,CAAlC;AACD,eAHS,EAITC,GAJS,CAIL,UAACF,MAAD,EAAY;AACf,uBAAOA,MAAM,CAACC,eAAP,GAAyBD,MAAM,CAACG,gBAAvC;AACD,eANS,CAPd;AAcQC,cAAAA,MAdR,GAciBN,KAAK,CAAC,CAAD,CAdtB;AAAA;AAAA,qBAgBiCH,UAAU,CAACU,mBAAX,EAhBjC;;AAAA;AAgBQC,cAAAA,gBAhBR;AAiBQC,cAAAA,UAjBR,GAiBqBC,IAAI,CAACC,KAAL,CAAWL,MAAX,EAAmBM,cAAnB,CAAkC,OAAlC,CAjBrB,EAmBE;;AACMC,cAAAA,OApBR,GAoBkB;AACdL,gBAAAA,gBAAgB,EAAhBA,gBADc;AAEdC,gBAAAA,UAAU,EAAVA;AAFc,eApBlB;AAwBElB,cAAAA,WAAW,CAACsB,OAAD,CAAX;;AAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHgC;AAAA;AAAA;;AA6BhC,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMrB,eAAe,EAArB;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGF,QAAQ,gBACP;AAAA,8BACE;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,8BAAd;AAAA,oBACGA,QAAQ,CAACkB;AADZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,8BAAd;AAAA,qBACGlB,QAAQ,CAACmB,UADZ,EACwB,GADxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,oBADO,gBAgBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GArDuBpB,O;;KAAAA,O","sourcesContent":["import \"./styles.css\";\nimport { Supply, Connection, clusterApiUrl } from \"@solana/web3.js\";\nimport { useEffect, useState } from \"react\";\nimport { displayTimestampUtc } from \"./utils/date\";\nimport CountUp from \"react-countup\";\n\nexport const SAMPLE_HISTORY_HOURS = 6;\n\nexport type TpsStats = {\n  transactionCount: number;\n  averageTps: string;\n};\n\nexport default function TpsCard() {\n  const [tpsStats, setTpsStats] = useState<TpsStats>();\n  useEffect(() => {});\n  async function getClusterStats() {\n    console.log(\"Hello\");\n    const url = clusterApiUrl(\"devnet\").replace(\"api\", \"explorer-api\");\n    const connection = new Connection(url);\n    const samples = await connection.getRecentPerformanceSamples(\n      60 * SAMPLE_HISTORY_HOURS\n    );\n    let short = samples\n      .filter((sample) => {\n        return sample.numTransactions !== 0;\n      })\n      .map((sample) => {\n        return sample.numTransactions / sample.samplePeriodSecs;\n      });\n    const avgTps = short[0];\n\n    const transactionCount = await connection.getTransactionCount();\n    const averageTps = Math.round(avgTps).toLocaleString(\"en-US\");\n\n    // console.log(samples);\n    const tpsData = {\n      transactionCount,\n      averageTps\n    };\n    setTpsStats(tpsData);\n  }\n  return (\n    <div className=\"App\">\n      <h1>Tps Card</h1>\n      <button onClick={() => getClusterStats()}>Supply</button>\n      {tpsStats ? (\n        <>\n          <tr>\n            <td className=\"w-100\">Transaction count</td>\n            <td className=\"text-lg-right text-monospace\">\n              {tpsStats.transactionCount}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"w-100\">Transactions per second (TPS)</td>\n            <td className=\"text-lg-right text-monospace\">\n              {tpsStats.averageTps}{\" \"}\n            </td>\n          </tr>\n        </>\n      ) : (\n        <p>No Data</p>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}