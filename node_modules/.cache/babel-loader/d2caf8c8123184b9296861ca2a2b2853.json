{"ast":null,"code":"import { __rest, __assign } from 'tslib';\nimport { detectAnimationFromOptions } from './utils/detect-animation-from-options.js';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../utils/interpolate.js';\nimport { hasRepeatDelayElapsed, reverseElapsed, loopElapsed } from './utils/elapsed.js';\n\nvar framesync = function framesync(update) {\n  var passTimestamp = function passTimestamp(_a) {\n    var delta = _a.delta;\n    return update(delta);\n  };\n\n  return {\n    start: function start() {\n      return sync.update(passTimestamp, true);\n    },\n    stop: function stop() {\n      return cancelSync.update(passTimestamp);\n    }\n  };\n};\n\nfunction animate(_a) {\n  var _b, _c;\n\n  var from = _a.from,\n      _d = _a.autoplay,\n      autoplay = _d === void 0 ? true : _d,\n      _e = _a.driver,\n      driver = _e === void 0 ? framesync : _e,\n      _f = _a.elapsed,\n      elapsed = _f === void 0 ? 0 : _f,\n      _g = _a.repeat,\n      repeatMax = _g === void 0 ? 0 : _g,\n      _h = _a.repeatType,\n      repeatType = _h === void 0 ? \"loop\" : _h,\n      _j = _a.repeatDelay,\n      repeatDelay = _j === void 0 ? 0 : _j,\n      onPlay = _a.onPlay,\n      onStop = _a.onStop,\n      onComplete = _a.onComplete,\n      onRepeat = _a.onRepeat,\n      onUpdate = _a.onUpdate,\n      options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n\n  var to = options.to;\n  var driverControls;\n  var repeatCount = 0;\n  var computedDuration = options.duration;\n  var latest;\n  var isComplete = false;\n  var isForwardPlayback = true;\n  var interpolateFromNumber;\n  var animator = detectAnimationFromOptions(options);\n\n  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n    interpolateFromNumber = interpolate([0, 100], [from, to], {\n      clamp: false\n    });\n    from = 0;\n    to = 100;\n  }\n\n  var animation = animator(__assign(__assign({}, options), {\n    from: from,\n    to: to\n  }));\n\n  function repeat() {\n    repeatCount++;\n\n    if (repeatType === \"reverse\") {\n      isForwardPlayback = repeatCount % 2 === 0;\n      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n    } else {\n      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n      if (repeatType === \"mirror\") animation.flipTarget();\n    }\n\n    isComplete = false;\n    onRepeat && onRepeat();\n  }\n\n  function complete() {\n    driverControls.stop();\n    onComplete && onComplete();\n  }\n\n  function update(delta) {\n    if (!isForwardPlayback) delta = -delta;\n    elapsed += delta;\n\n    if (!isComplete) {\n      var state = animation.next(Math.max(0, elapsed));\n      latest = state.value;\n      if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n      isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n    }\n\n    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n\n    if (isComplete) {\n      if (repeatCount === 0) computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;\n\n      if (repeatCount < repeatMax) {\n        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n      } else {\n        complete();\n      }\n    }\n  }\n\n  function play() {\n    onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n    driverControls = driver(update);\n    driverControls.start();\n  }\n\n  autoplay && play();\n  return {\n    stop: function stop() {\n      onStop === null || onStop === void 0 ? void 0 : onStop();\n      driverControls.stop();\n    }\n  };\n}\n\nexport { animate };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/popmotion/dist/es/animations/index.js"],"names":["__rest","__assign","detectAnimationFromOptions","sync","cancelSync","interpolate","hasRepeatDelayElapsed","reverseElapsed","loopElapsed","framesync","update","passTimestamp","_a","delta","start","stop","animate","_b","_c","from","_d","autoplay","_e","driver","_f","elapsed","_g","repeat","repeatMax","_h","repeatType","_j","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","options","to","driverControls","repeatCount","computedDuration","duration","latest","isComplete","isForwardPlayback","interpolateFromNumber","animator","needsInterpolation","call","clamp","animation","flipTarget","complete","state","next","Math","max","value","done","play"],"mappings":"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","sourcesContent":["import { __rest, __assign } from 'tslib';\nimport { detectAnimationFromOptions } from './utils/detect-animation-from-options.js';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../utils/interpolate.js';\nimport { hasRepeatDelayElapsed, reverseElapsed, loopElapsed } from './utils/elapsed.js';\n\nvar framesync = function (update) {\n    var passTimestamp = function (_a) {\n        var delta = _a.delta;\n        return update(delta);\n    };\n    return {\n        start: function () { return sync.update(passTimestamp, true); },\n        stop: function () { return cancelSync.update(passTimestamp); },\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var from = _a.from, _d = _a.autoplay, autoplay = _d === void 0 ? true : _d, _e = _a.driver, driver = _e === void 0 ? framesync : _e, _f = _a.elapsed, elapsed = _f === void 0 ? 0 : _f, _g = _a.repeat, repeatMax = _g === void 0 ? 0 : _g, _h = _a.repeatType, repeatType = _h === void 0 ? \"loop\" : _h, _j = _a.repeatDelay, repeatDelay = _j === void 0 ? 0 : _j, onPlay = _a.onPlay, onStop = _a.onStop, onComplete = _a.onComplete, onRepeat = _a.onRepeat, onUpdate = _a.onUpdate, options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    var to = options.to;\n    var driverControls;\n    var repeatCount = 0;\n    var computedDuration = options.duration;\n    var latest;\n    var isComplete = false;\n    var isForwardPlayback = true;\n    var interpolateFromNumber;\n    var animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    var animation = animator(__assign(__assign({}, options), { from: from, to: to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            var state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: function () {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate };\n"]},"metadata":{},"sourceType":"module"}