{"version":3,"sources":["../../src/scale-fade.tsx"],"names":["cx","__DEV__","AnimatePresence","motion","React","TransitionDefaults","withDelay","variants","exit","reverse","initialScale","transition","transitionEnd","delay","opacity","scale","enter","scaleFadeConfig","initial","animate","ScaleFade","forwardRef","props","ref","unmountOnExit","in","isOpen","className","rest","show","custom","displayName"],"mappings":"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","sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  TransitionDefaults,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface ScaleFadeOptions {\n  /**\n   * The initial scale of the element\n   * @default 0.95\n   */\n  initialScale?: number\n  /**\n   * If `true`, the element will transition back to exit state\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<ScaleFadeOptions> = {\n  exit: ({ reverse, initialScale, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    ...(reverse\n      ? { scale: initialScale, transitionEnd: transitionEnd?.exit }\n      : { transitionEnd: { scale: initialScale, ...transitionEnd?.exit } }),\n    transition:\n      transition?.exit ?? withDelay.exit(TransitionDefaults.exit, delay),\n  }),\n  enter: ({ transitionEnd, transition, delay }) => ({\n    opacity: 1,\n    scale: 1,\n    transition:\n      transition?.enter ?? withDelay.enter(TransitionDefaults.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n}\n\nexport const scaleFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface ScaleFadeProps\n  extends ScaleFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const ScaleFade = React.forwardRef<HTMLDivElement, ScaleFadeProps>(\n  (props, ref) => {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      initialScale = 0.95,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = { initialScale, reverse, transition, transitionEnd, delay }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            {...scaleFadeConfig}\n            animate={animate}\n            custom={custom}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  ScaleFade.displayName = \"ScaleFade\"\n}\n"],"file":"scale-fade.js"}