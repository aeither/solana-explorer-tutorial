{"version":3,"sources":["../../src/use-form-control.ts"],"names":["useFormControl","props","useFormControlProps","isDisabled","isInvalid","isReadOnly","isRequired","rest","disabled","readOnly","required","field","id","onFocus","onBlur","labelIds","hasFeedbackText","push","feedbackId","hasHelpText","helpTextId","join","undefined"],"mappings":";;;;;;AAAA;;AAEA;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,cAAT,CACLC,KADK,EAEL;AAAA,6BAOIC,mBAAmB,CAACD,KAAD,CAPvB;AAAA,MAEEE,UAFF,wBAEEA,UAFF;AAAA,MAGEC,SAHF,wBAGEA,SAHF;AAAA,MAIEC,UAJF,wBAIEA,UAJF;AAAA,MAKEC,UALF,wBAKEA,UALF;AAAA,MAMKC,IANL;;AASA,sBACKA,IADL;AAEEC,IAAAA,QAAQ,EAAEL,UAFZ;AAGEM,IAAAA,QAAQ,EAAEJ,UAHZ;AAIEK,IAAAA,QAAQ,EAAEJ,UAJZ;AAKE,oBAAgB,qBAASF,SAAT,CALlB;AAME,qBAAiB,qBAASE,UAAT,CANnB;AAOE,qBAAiB,qBAASD,UAAT;AAPnB;AASD;;AAEM,SAASH,mBAAT,CACLD,KADK,EAEL;AAAA;;AACA,MAAMU,KAAK,GAAG,yCAAd;;AADA,MAIEC,EAJF,GAeIX,KAfJ,CAIEW,EAJF;AAAA,MAKEJ,QALF,GAeIP,KAfJ,CAKEO,QALF;AAAA,MAMEC,QANF,GAeIR,KAfJ,CAMEQ,QANF;AAAA,MAOEC,QAPF,GAeIT,KAfJ,CAOES,QAPF;AAAA,MAQEJ,UARF,GAeIL,KAfJ,CAQEK,UARF;AAAA,MASEF,SATF,GAeIH,KAfJ,CASEG,SATF;AAAA,MAUEC,UAVF,GAeIJ,KAfJ,CAUEI,UAVF;AAAA,MAWEF,UAXF,GAeIF,KAfJ,CAWEE,UAXF;AAAA,MAYEU,OAZF,GAeIZ,KAfJ,CAYEY,OAZF;AAAA,MAaEC,MAbF,GAeIb,KAfJ,CAaEa,MAbF;AAAA,MAcKP,IAdL,iCAeIN,KAfJ;;AAiBA,MAAMc,QAAkB,GAAGd,KAAK,CAAC,kBAAD,CAAL,GACvB,CAACA,KAAK,CAAC,kBAAD,CAAN,CADuB,GAEvB,EAFJ,CAjBA,CAqBA;;AACA,MAAIU,KAAK,QAAL,IAAAA,KAAK,CAAEK,eAAP,IAA0BL,KAA1B,YAA0BA,KAAK,CAAEP,SAArC,EAAgD;AAC9CW,IAAAA,QAAQ,CAACE,IAAT,CAAcN,KAAK,CAACO,UAApB;AACD;;AAED,MAAIP,KAAJ,YAAIA,KAAK,CAAEQ,WAAX,EAAwB;AACtBJ,IAAAA,QAAQ,CAACE,IAAT,CAAcN,KAAK,CAACS,UAApB;AACD;;AAED,sBACKb,IADL;AAEE,wBAAoBQ,QAAQ,CAACM,IAAT,CAAc,GAAd,KAAsBC,SAF5C;AAGEV,IAAAA,EAAE,EAAEA,EAAF,WAAEA,EAAF,GAAQD,KAAR,oBAAQA,KAAK,CAAEC,EAHnB;AAIET,IAAAA,UAAU,UAAEK,QAAF,WAAEA,QAAF,GAAcL,UAAd,mBAA4BQ,KAA5B,oBAA4BA,KAAK,CAAER,UAJ/C;AAKEE,IAAAA,UAAU,WAAEI,QAAF,WAAEA,QAAF,GAAcJ,UAAd,oBAA4BM,KAA5B,oBAA4BA,KAAK,CAAEN,UAL/C;AAMEC,IAAAA,UAAU,WAAEI,QAAF,WAAEA,QAAF,GAAcJ,UAAd,oBAA4BK,KAA5B,oBAA4BA,KAAK,CAAEL,UAN/C;AAOEF,IAAAA,SAAS,EAAEA,SAAF,WAAEA,SAAF,GAAeO,KAAf,oBAAeA,KAAK,CAAEP,SAPjC;AAQES,IAAAA,OAAO,EAAE,4BAAgBF,KAAhB,oBAAgBA,KAAK,CAAEE,OAAvB,EAAgCA,OAAhC,CARX;AASEC,IAAAA,MAAM,EAAE,4BAAgBH,KAAhB,oBAAgBA,KAAK,CAAEG,MAAvB,EAA+BA,MAA/B;AATV;AAWD","sourcesContent":["import { ariaAttr, callAllHandlers } from \"@chakra-ui/utils\"\nimport { FocusEventHandler } from \"react\"\nimport { FormControlOptions, useFormControlContext } from \"./form-control\"\n\nexport interface UseFormControlProps<T extends HTMLElement>\n  extends FormControlOptions {\n  id?: string\n  onFocus?: FocusEventHandler<T>\n  onBlur?: FocusEventHandler<T>\n  disabled?: boolean\n  readOnly?: boolean\n  required?: boolean\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\nexport function useFormControl<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const {\n    isDisabled,\n    isInvalid,\n    isReadOnly,\n    isRequired,\n    ...rest\n  } = useFormControlProps(props)\n\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly),\n  }\n}\n\nexport function useFormControlProps<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const field = useFormControlContext()\n\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props\n\n  const labelIds: string[] = props[\"aria-describedby\"]\n    ? [props[\"aria-describedby\"]]\n    : []\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText && field?.isInvalid) {\n    labelIds.push(field.feedbackId)\n  }\n\n  if (field?.hasHelpText) {\n    labelIds.push(field.helpTextId)\n  }\n\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id ?? field?.id,\n    isDisabled: disabled ?? isDisabled ?? field?.isDisabled,\n    isReadOnly: readOnly ?? isReadOnly ?? field?.isReadOnly,\n    isRequired: required ?? isRequired ?? field?.isRequired,\n    isInvalid: isInvalid ?? field?.isInvalid,\n    onFocus: callAllHandlers(field?.onFocus, onFocus),\n    onBlur: callAllHandlers(field?.onBlur, onBlur),\n  }\n}\n"],"file":"use-form-control.js"}