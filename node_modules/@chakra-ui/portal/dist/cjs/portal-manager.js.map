{"version":3,"sources":["../../src/portal-manager.tsx"],"names":["strict","name","PortalManagerContextProvider","usePortalManager","PortalManager","props","children","zIndex","__DEV__","displayName"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;;;qBASI,+BAA2C;AAC7CA,EAAAA,MAAM,EAAE,KADqC;AAE7CC,EAAAA,IAAI,EAAE;AAFuC,CAA3C,C;IAFFC,4B;IACAC,gB;;;;AAiBK,SAASC,aAAT,CAAuBC,KAAvB,EAAkD;AAAA,MAC/CC,QAD+C,GAC1BD,KAD0B,CAC/CC,QAD+C;AAAA,MACrCC,MADqC,GAC1BF,KAD0B,CACrCE,MADqC;AAEvD,sBACE,oBAAC,4BAAD;AAA8B,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAM,EAANA;AAAF;AAArC,KACGD,QADH,CADF;AAKD;;AAED,IAAIE,cAAJ,EAAa;AACXJ,EAAAA,aAAa,CAACK,WAAd,GAA4B,eAA5B;AACD","sourcesContent":["import { __DEV__ } from \"@chakra-ui/utils\"\nimport { createContext } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\n\ninterface PortalManagerContext {\n  zIndex?: number\n}\n\nconst [\n  PortalManagerContextProvider,\n  usePortalManager,\n] = createContext<PortalManagerContext | null>({\n  strict: false,\n  name: \"PortalManagerContext\",\n})\n\nexport { usePortalManager }\n\nexport interface PortalManagerProps {\n  children?: React.ReactNode\n  /**\n   * [Z-Index war] If your has multiple elements\n   * with z-index clashing, you might need to apply a z-index to the Portal manager\n   */\n  zIndex?: number\n}\n\nexport function PortalManager(props: PortalManagerProps) {\n  const { children, zIndex } = props\n  return (\n    <PortalManagerContextProvider value={{ zIndex }}>\n      {children}\n    </PortalManagerContextProvider>\n  )\n}\n\nif (__DEV__) {\n  PortalManager.displayName = \"PortalManager\"\n}\n"],"file":"portal-manager.js"}