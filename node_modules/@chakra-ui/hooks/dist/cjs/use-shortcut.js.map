{"version":3,"sources":["../../src/use-shortcut.ts"],"names":["isPrintableCharacter","event","key","length","test","useShortcut","props","timeout","preventDefault","React","useState","keys","setKeys","timeoutRef","useRef","flush","current","clearTimeout","clearKeysAfterDelay","setTimeout","useEffect","onKeyDown","fn","keysCopy","pop","concat","stopPropagation","join"],"mappings":";;;;;AAAA;;;;;;AAEA;AACA;AACA;AACA;AACA,SAASA,oBAAT,CAA8BC,KAA9B,EAA0D;AAAA,MAChDC,GADgD,GACxCD,KADwC,CAChDC,GADgD;AAExD,SAAOA,GAAG,CAACC,MAAJ,KAAe,CAAf,IAAqBD,GAAG,CAACC,MAAJ,GAAa,CAAb,IAAkB,eAAeC,IAAf,CAAoBF,GAApB,CAA9C;AACD;;AAOD;AACA;AACA;AACA;AACO,SAASG,WAAT,CAAqBC,KAArB,EAAmD;AAAA,MAA9BA,KAA8B;AAA9BA,IAAAA,KAA8B,GAAJ,EAAI;AAAA;;AAAA,eACDA,KADC;AAAA,8BAChDC,OADgD;AAAA,MAChDA,OADgD,+BACtC,GADsC;AAAA,qCACjCC,cADiC;AAAA,MACjCA,cADiC,sCAChB;AAAA,WAAM,IAAN;AAAA,GADgB;;AAAA,wBAGhCC,KAAK,CAACC,QAAN,CAAyB,EAAzB,CAHgC;AAAA,MAGjDC,IAHiD;AAAA,MAG3CC,OAH2C;;AAIxD,MAAMC,UAAU,GAAGJ,KAAK,CAACK,MAAN,EAAnB;;AAEA,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,QAAIF,UAAU,CAACG,OAAf,EAAwB;AACtBC,MAAAA,YAAY,CAACJ,UAAU,CAACG,OAAZ,CAAZ;AACAH,MAAAA,UAAU,CAACG,OAAX,GAAqB,IAArB;AACD;AACF,GALD;;AAOA,MAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCH,IAAAA,KAAK;AACLF,IAAAA,UAAU,CAACG,OAAX,GAAqBG,UAAU,CAAC,YAAM;AACpCP,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAC,MAAAA,UAAU,CAACG,OAAX,GAAqB,IAArB;AACD,KAH8B,EAG5BT,OAH4B,CAA/B;AAID,GAND;;AAQAE,EAAAA,KAAK,CAACW,SAAN,CAAgB;AAAA,WAAML,KAAN;AAAA,GAAhB,EAA6B,EAA7B;;AAIA,WAASM,SAAT,CAAmBC,EAAnB,EAAiC;AAC/B,WAAO,UAACrB,KAAD,EAAgC;AACrC,UAAIA,KAAK,CAACC,GAAN,KAAc,WAAlB,EAA+B;AAC7B,YAAMqB,QAAQ,aAAOZ,IAAP,CAAd;AACAY,QAAAA,QAAQ,CAACC,GAAT;AACAZ,QAAAA,OAAO,CAACW,QAAD,CAAP;AACA;AACD;;AAED,UAAIvB,oBAAoB,CAACC,KAAD,CAAxB,EAAiC;AAC/B,YAAMsB,SAAQ,GAAGZ,IAAI,CAACc,MAAL,CAAYxB,KAAK,CAACC,GAAlB,CAAjB;;AAEA,YAAIM,cAAc,CAACP,KAAD,CAAlB,EAA2B;AACzBA,UAAAA,KAAK,CAACO,cAAN;AACAP,UAAAA,KAAK,CAACyB,eAAN;AACD;;AAEDd,QAAAA,OAAO,CAACW,SAAD,CAAP;AACAD,QAAAA,EAAE,CAACC,SAAQ,CAACI,IAAT,CAAc,EAAd,CAAD,CAAF;AAEAT,QAAAA,mBAAmB;AACpB;AACF,KArBD;AAsBD;;AAED,SAAOG,SAAP;AACD","sourcesContent":["import * as React from \"react\"\n\n/**\n * Checks if the key pressed is a printable character\n * and can be used for shortcut navigation\n */\nfunction isPrintableCharacter(event: React.KeyboardEvent) {\n  const { key } = event\n  return key.length === 1 || (key.length > 1 && /[^a-zA-Z0-9]/.test(key))\n}\n\nexport interface UseShortcutProps {\n  timeout?: number\n  preventDefault?: (event: React.KeyboardEvent) => boolean\n}\n\n/**\n * React hook that provides an enhanced keydown handler,\n * that's used for key navigation within menus, select dropdowns.\n */\nexport function useShortcut(props: UseShortcutProps = {}) {\n  const { timeout = 300, preventDefault = () => true } = props\n\n  const [keys, setKeys] = React.useState<string[]>([])\n  const timeoutRef = React.useRef<any>()\n\n  const flush = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current)\n      timeoutRef.current = null\n    }\n  }\n\n  const clearKeysAfterDelay = () => {\n    flush()\n    timeoutRef.current = setTimeout(() => {\n      setKeys([])\n      timeoutRef.current = null\n    }, timeout)\n  }\n\n  React.useEffect(() => flush, [])\n\n  type Callback = (keysSoFar: string) => void\n\n  function onKeyDown(fn: Callback) {\n    return (event: React.KeyboardEvent) => {\n      if (event.key === \"Backspace\") {\n        const keysCopy = [...keys]\n        keysCopy.pop()\n        setKeys(keysCopy)\n        return\n      }\n\n      if (isPrintableCharacter(event)) {\n        const keysCopy = keys.concat(event.key)\n\n        if (preventDefault(event)) {\n          event.preventDefault()\n          event.stopPropagation()\n        }\n\n        setKeys(keysCopy)\n        fn(keysCopy.join(\"\"))\n\n        clearKeysAfterDelay()\n      }\n    }\n  }\n\n  return onKeyDown\n}\n"],"file":"use-shortcut.js"}