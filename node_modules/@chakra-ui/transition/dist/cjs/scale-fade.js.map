{"version":3,"sources":["../../src/scale-fade.tsx"],"names":["variants","exit","reverse","initialScale","transition","transitionEnd","delay","opacity","scale","withDelay","TransitionDefaults","enter","scaleFadeConfig","initial","animate","ScaleFade","React","forwardRef","props","ref","unmountOnExit","isOpen","className","rest","show","custom","__DEV__","displayName"],"mappings":"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","sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  TransitionDefaults,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface ScaleFadeOptions {\n  /**\n   * The initial scale of the element\n   * @default 0.95\n   */\n  initialScale?: number\n  /**\n   * If `true`, the element will transition back to exit state\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<ScaleFadeOptions> = {\n  exit: ({ reverse, initialScale, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    ...(reverse\n      ? { scale: initialScale, transitionEnd: transitionEnd?.exit }\n      : { transitionEnd: { scale: initialScale, ...transitionEnd?.exit } }),\n    transition:\n      transition?.exit ?? withDelay.exit(TransitionDefaults.exit, delay),\n  }),\n  enter: ({ transitionEnd, transition, delay }) => ({\n    opacity: 1,\n    scale: 1,\n    transition:\n      transition?.enter ?? withDelay.enter(TransitionDefaults.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n}\n\nexport const scaleFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface ScaleFadeProps\n  extends ScaleFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const ScaleFade = React.forwardRef<HTMLDivElement, ScaleFadeProps>(\n  (props, ref) => {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      initialScale = 0.95,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = { initialScale, reverse, transition, transitionEnd, delay }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            {...scaleFadeConfig}\n            animate={animate}\n            custom={custom}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  ScaleFade.displayName = \"ScaleFade\"\n}\n"],"file":"scale-fade.js"}