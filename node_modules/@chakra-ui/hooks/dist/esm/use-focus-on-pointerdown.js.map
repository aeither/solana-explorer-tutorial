{"version":3,"sources":["../../src/use-focus-on-pointerdown.ts"],"names":["contains","detectBrowser","focus","getOwnerDocument","isActiveElement","isRefObject","usePointerEvent","useFocusOnPointerDown","props","ref","elements","enabled","isSafari","doc","current","event","target","els","isValidTarget","some","elementOrRef","el","preventDefault"],"mappings":"AAAA,SACEA,QADF,EAEEC,aAFF,EAGEC,KAHF,EAIEC,gBAJF,EAKEC,eALF,EAMEC,WANF,QAOO,kBAPP;AASA,SAASC,eAAT,QAAgC,qBAAhC;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAAgE;AACrE,MAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA;AAAjB,MAA6BH,KAAnC;AAEA,MAAMI,QAAQ,GAAGX,aAAa,CAAC,QAAD,CAA9B;;AACA,MAAMY,GAAG,GAAG,MAAMV,gBAAgB,CAACM,GAAG,CAACK,OAAL,CAAlC;;AAEAR,EAAAA,eAAe,CAACO,GAAD,EAAM,aAAN,EAAsBE,KAAD,IAAW;AAC7C,QAAI,CAACH,QAAD,IAAa,CAACD,OAAlB,EAA2B;AAC3B,QAAMK,MAAM,GAAGD,KAAK,CAACC,MAArB;AAEA,QAAMC,GAAG,GAAGP,QAAH,WAAGA,QAAH,GAAe,CAACD,GAAD,CAAxB;AACA,QAAMS,aAAa,GAAGD,GAAG,CAACE,IAAJ,CAAUC,YAAD,IAAkB;AAC/C,UAAMC,EAAE,GAAGhB,WAAW,CAACe,YAAD,CAAX,GAA4BA,YAAY,CAACN,OAAzC,GAAmDM,YAA9D;AACA,aAAOpB,QAAQ,CAACqB,EAAD,EAAKL,MAAL,CAAf;AACD,KAHqB,CAAtB;;AAKA,QAAI,CAACZ,eAAe,CAACY,MAAD,CAAhB,IAA4BE,aAAhC,EAA+C;AAC7CH,MAAAA,KAAK,CAACO,cAAN;AACApB,MAAAA,KAAK,CAACc,MAAD,CAAL;AACD;AACF,GAdc,CAAf;AAeD","sourcesContent":["import {\n  contains,\n  detectBrowser,\n  focus,\n  getOwnerDocument,\n  isActiveElement,\n  isRefObject,\n} from \"@chakra-ui/utils\"\nimport { RefObject } from \"react\"\nimport { usePointerEvent } from \"./use-pointer-event\"\n\nexport interface UseFocusOnMouseDownProps {\n  enabled?: boolean\n  ref: RefObject<HTMLElement>\n  elements?: Array<RefObject<HTMLElement> | HTMLElement | null>\n}\n\n/**\n * Polyfill to get `relatedTarget` working correctly consistently\n * across all browsers.\n *\n * It ensures that elements receives focus on pointer down if\n * it's not the active active element.\n *\n * @internal\n */\nexport function useFocusOnPointerDown(props: UseFocusOnMouseDownProps) {\n  const { ref, elements, enabled } = props\n\n  const isSafari = detectBrowser(\"Safari\")\n  const doc = () => getOwnerDocument(ref.current)\n\n  usePointerEvent(doc, \"pointerdown\", (event) => {\n    if (!isSafari || !enabled) return\n    const target = event.target as HTMLElement\n\n    const els = elements ?? [ref]\n    const isValidTarget = els.some((elementOrRef) => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef\n      return contains(el, target)\n    })\n\n    if (!isActiveElement(target) && isValidTarget) {\n      event.preventDefault()\n      focus(target)\n    }\n  })\n}\n"],"file":"use-focus-on-pointerdown.js"}