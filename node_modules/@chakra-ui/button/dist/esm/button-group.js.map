{"version":3,"sources":["../../src/button-group.tsx"],"names":["chakra","forwardRef","cx","__DEV__","createContext","React","ButtonGroupProvider","useButtonGroup","strict","name","ButtonGroup","props","ref","size","colorScheme","variant","className","spacing","isAttached","isDisabled","rest","_className","context","useMemo","groupStyles","display","borderEndRadius","borderRadius","borderStartRadius","marginStart","displayName"],"mappings":";;;;AAAA,SACEA,MADF,EAEEC,UAFF,QAOO,mBAPP;AAQA,SAASC,EAAT,EAAaC,OAAb,QAA4B,kBAA5B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AA0BA,IAAM,CAACC,mBAAD,EAAsBC,cAAtB,IAAwCH,aAAa,CACzD;AACEI,EAAAA,MAAM,EAAE,KADV;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADyD,CAA3D;AAOA,SAASF,cAAT;AAEA,OAAO,IAAMG,WAAW,gBAAGT,UAAU,CAA0B,CAACU,KAAD,EAAQC,GAAR,KAAgB;AAC7E,MAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,OAAO,GAAG,QALN;AAMJC,IAAAA,UANI;AAOJC,IAAAA;AAPI,MASFR,KATJ;AAAA,MAQKS,IARL,iCASIT,KATJ;;AAWA,MAAMU,UAAU,GAAGnB,EAAE,CAAC,sBAAD,EAAyBc,SAAzB,CAArB;;AAEA,MAAMM,OAAO,GAAGjB,KAAK,CAACkB,OAAN,CACd,OAAO;AAAEV,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,OAArB;AAA8BI,IAAAA;AAA9B,GAAP,CADc,EAEd,CAACN,IAAD,EAAOC,WAAP,EAAoBC,OAApB,EAA6BI,UAA7B,CAFc,CAAhB;AAKA,MAAIK,WAA8B,GAAG;AACnCC,IAAAA,OAAO,EAAE;AAD0B,GAArC;;AAIA,MAAIP,UAAJ,EAAgB;AACdM,IAAAA,WAAW,gBACNA,WADM;AAET,8CAAwC;AAAEE,QAAAA,eAAe,EAAE;AAAnB,OAF/B;AAGT,oDAA8C;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAHrC;AAIT,8CAAwC;AAAEC,QAAAA,iBAAiB,EAAE;AAArB;AAJ/B,MAAX;AAMD,GAPD,MAOO;AACLJ,IAAAA,WAAW,gBACNA,WADM;AAET,yCAAmC;AAAEK,QAAAA,WAAW,EAAEZ;AAAf;AAF1B,MAAX;AAID;;AAED,sBACE,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEK;AAA5B,kBACE,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEV,GADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEY,WAHT;AAIE,IAAA,SAAS,EAAEH;AAJb,KAKMD,IALN,EADF,CADF;AAWD,CAhDoC,CAA9B;;AAkDP,IAAIjB,OAAJ,EAAa;AACXO,EAAAA,WAAW,CAACoB,WAAZ,GAA0B,aAA1B;AACD","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport { createContext } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\n\nexport interface ButtonGroupProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Button\"> {\n  /**\n   * If `true`, the borderRadius of button that are direct children will be altered\n   * to look flushed together\n   */\n  isAttached?: boolean\n  /**\n   * If `true`, all wrapped button will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * The spacing between the buttons\n   * @default '0.5rem'\n   * @type SystemProps[\"marginRight\"]\n   */\n  spacing?: SystemProps[\"marginRight\"]\n}\n\ninterface ButtonGroupContext extends ThemingProps<\"ButtonGroup\"> {\n  isDisabled?: boolean\n}\n\nconst [ButtonGroupProvider, useButtonGroup] = createContext<ButtonGroupContext>(\n  {\n    strict: false,\n    name: \"ButtonGroupContext\",\n  },\n)\n\nexport { useButtonGroup }\n\nexport const ButtonGroup = forwardRef<ButtonGroupProps, \"div\">((props, ref) => {\n  const {\n    size,\n    colorScheme,\n    variant,\n    className,\n    spacing = \"0.5rem\",\n    isAttached,\n    isDisabled,\n    ...rest\n  } = props\n\n  const _className = cx(\"chakra-button__group\", className)\n\n  const context = React.useMemo(\n    () => ({ size, colorScheme, variant, isDisabled }),\n    [size, colorScheme, variant, isDisabled],\n  )\n\n  let groupStyles: SystemStyleObject = {\n    display: \"inline-flex\",\n  }\n\n  if (isAttached) {\n    groupStyles = {\n      ...groupStyles,\n      \"> *:first-of-type:not(:last-of-type)\": { borderEndRadius: 0 },\n      \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n      \"> *:not(:first-of-type):last-of-type\": { borderStartRadius: 0 },\n    }\n  } else {\n    groupStyles = {\n      ...groupStyles,\n      \"& > *:not(style) ~ *:not(style)\": { marginStart: spacing },\n    }\n  }\n\n  return (\n    <ButtonGroupProvider value={context}>\n      <chakra.div\n        ref={ref}\n        role=\"group\"\n        __css={groupStyles}\n        className={_className}\n        {...rest}\n      />\n    </ButtonGroupProvider>\n  )\n})\n\nif (__DEV__) {\n  ButtonGroup.displayName = \"ButtonGroup\"\n}\n"],"file":"button-group.js"}