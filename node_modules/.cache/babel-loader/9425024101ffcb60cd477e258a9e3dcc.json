{"ast":null,"code":"import _slicedToArray from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/lin/Documents/Projects/solana-explorer-tutorial/src/PriceCard.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { abbreviatedNumber } from \"./utils/index\";\nimport { Heading, Text, VStack, Tag } from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var CoingeckoStatus;\n\n(function (CoingeckoStatus) {\n  CoingeckoStatus[CoingeckoStatus[\"Success\"] = 0] = \"Success\";\n  CoingeckoStatus[CoingeckoStatus[\"FetchFailed\"] = 1] = \"FetchFailed\";\n  CoingeckoStatus[CoingeckoStatus[\"Loading\"] = 2] = \"Loading\";\n})(CoingeckoStatus || (CoingeckoStatus = {}));\n\nexport default function PriceCard() {\n  _s();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      coinInfo = _useState2[0],\n      setCoinInfo = _useState2[1];\n\n  var coinId = \"solana\";\n  useEffect(function () {\n    getPrice();\n  }, []);\n\n  function getPrice() {\n    fetch(\"https://api.coingecko.com/api/v3/coins/\".concat(coinId)).then(function (res) {\n      return res.json();\n    }).then(function (info) {\n      setCoinInfo({\n        coinInfo: {\n          price: info.market_data.current_price.usd,\n          volume_24: info.market_data.total_volume.usd,\n          market_cap: info.market_data.market_cap.usd,\n          market_cap_rank: info.market_data.market_cap_rank,\n          price_change_percentage_24h: info.market_data.price_change_percentage_24h,\n          last_updated: new Date(info.last_updated)\n        },\n        status: CoingeckoStatus.Success\n      });\n    }).catch(function (error) {\n      setCoinInfo({\n        status: CoingeckoStatus.FetchFailed\n      });\n    });\n  }\n\n  var solanaInfo;\n\n  if (coinInfo && coinInfo.status === CoingeckoStatus.Success) {\n    solanaInfo = coinInfo.coinInfo;\n  }\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    align: \"start\",\n    background: \"white\",\n    rounded: \"lg\",\n    p: \"4\",\n    children: solanaInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: [\"Price\", \" \", /*#__PURE__*/_jsxDEV(Tag, {\n          colorScheme: \"green\",\n          children: [\"Rank #\", solanaInfo.market_cap_rank]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \"Price \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"em\", {\n          children: [\"$\", solanaInfo.price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), \" \", solanaInfo.price_change_percentage_24h > 0 && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"change-positive\",\n          children: [\"\\u2191 \", solanaInfo.price_change_percentage_24h.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), solanaInfo.price_change_percentage_24h < 0 && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"change-negative\",\n          children: [\"\\u2193 \", solanaInfo.price_change_percentage_24h.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), solanaInfo.price_change_percentage_24h === 0 && /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"0%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"24h Vol: \", /*#__PURE__*/_jsxDEV(\"em\", {\n          children: [\"$\", abbreviatedNumber(solanaInfo.volume_24)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 22\n        }, this), \" MCap:\", \" \", /*#__PURE__*/_jsxDEV(\"em\", {\n          children: [\"$\", abbreviatedNumber(solanaInfo.market_cap)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PriceCard, \"nNlJe5aJga0sBLgQlqZtse8SpXw=\");\n\n_c = PriceCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PriceCard\");","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/src/PriceCard.tsx"],"names":["useState","abbreviatedNumber","Heading","Text","VStack","Tag","useEffect","CoingeckoStatus","PriceCard","coinInfo","setCoinInfo","coinId","getPrice","fetch","then","res","json","info","price","market_data","current_price","usd","volume_24","total_volume","market_cap","market_cap_rank","price_change_percentage_24h","last_updated","Date","status","Success","catch","error","FetchFailed","solanaInfo","toFixed"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { abbreviatedNumber } from \"./utils/index\";\nimport { Button, Heading, Text, VStack, Tag } from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nexport interface CoinInfo {\n  price: number;\n  volume_24: number;\n  market_cap: number;\n  price_change_percentage_24h: number;\n  market_cap_rank: number;\n  last_updated: Date;\n}\n\nexport enum CoingeckoStatus {\n  Success,\n  FetchFailed,\n  Loading,\n}\n\nexport type CoinGeckoResult = {\n  coinInfo?: CoinInfo;\n  status: CoingeckoStatus;\n};\n\nexport interface CoinInfoResult {\n  market_data: {\n    current_price: {\n      usd: number;\n    };\n    total_volume: {\n      usd: number;\n    };\n    market_cap: {\n      usd: number;\n    };\n    price_change_percentage_24h: number;\n    market_cap_rank: number;\n  };\n  last_updated: string;\n}\n\nexport default function PriceCard() {\n  const [coinInfo, setCoinInfo] = useState<CoinGeckoResult>();\n  const coinId = \"solana\";\n  useEffect(() => {\n    getPrice();\n  }, []);\n  function getPrice() {\n    fetch(`https://api.coingecko.com/api/v3/coins/${coinId}`)\n      .then((res) => res.json())\n      .then((info: CoinInfoResult) => {\n        setCoinInfo({\n          coinInfo: {\n            price: info.market_data.current_price.usd,\n            volume_24: info.market_data.total_volume.usd,\n            market_cap: info.market_data.market_cap.usd,\n            market_cap_rank: info.market_data.market_cap_rank,\n            price_change_percentage_24h:\n              info.market_data.price_change_percentage_24h,\n            last_updated: new Date(info.last_updated),\n          },\n          status: CoingeckoStatus.Success,\n        });\n      })\n      .catch((error: any) => {\n        setCoinInfo({\n          status: CoingeckoStatus.FetchFailed,\n        });\n      });\n  }\n\n  let solanaInfo;\n  if (coinInfo && coinInfo.status === CoingeckoStatus.Success) {\n    solanaInfo = coinInfo.coinInfo;\n  }\n\n  return (\n    <VStack align=\"start\" background=\"white\" rounded=\"lg\" p=\"4\">\n      {solanaInfo && (\n        <>\n          <Heading size=\"md\">\n            Price{\" \"}\n            <Tag colorScheme=\"green\">Rank #{solanaInfo.market_cap_rank}</Tag>\n          </Heading>\n\n          <Text>Price </Text>\n          <h1>\n            <em>${solanaInfo.price.toFixed(2)}</em>{\" \"}\n            {solanaInfo.price_change_percentage_24h > 0 && (\n              <small className=\"change-positive\">\n                &uarr; {solanaInfo.price_change_percentage_24h.toFixed(2)}%\n              </small>\n            )}\n            {solanaInfo.price_change_percentage_24h < 0 && (\n              <small className=\"change-negative\">\n                &darr; {solanaInfo.price_change_percentage_24h.toFixed(2)}%\n              </small>\n            )}\n            {solanaInfo.price_change_percentage_24h === 0 && <small>0%</small>}\n          </h1>\n          <h5>\n            24h Vol: <em>${abbreviatedNumber(solanaInfo.volume_24)}</em> MCap:{\" \"}\n            <em>${abbreviatedNumber(solanaInfo.market_cap)}</em>\n          </h5>\n        </>\n      )}\n    </VStack>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}