{"ast":null,"code":"/**\n * Decides if the supplied variable is an array of variant labels\n */\nfunction isVariantLabels(v) {\n  return Array.isArray(v);\n}\n/**\n * Decides if the supplied variable is variant label\n */\n\n\nfunction isVariantLabel(v) {\n  return typeof v === \"string\" || isVariantLabels(v);\n}\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\n\n\nfunction getCurrent(visualElement) {\n  var current = {};\n  visualElement.forEachValue(function (value, key) {\n    return current[key] = value.get();\n  });\n  return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\n\n\nfunction getVelocity(visualElement) {\n  var velocity = {};\n  visualElement.forEachValue(function (value, key) {\n    return velocity[key] = value.getVelocity();\n  });\n  return velocity;\n}\n\nfunction resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {\n  var _a;\n\n  if (currentValues === void 0) {\n    currentValues = {};\n  }\n\n  if (currentVelocity === void 0) {\n    currentVelocity = {};\n  }\n\n  if (typeof definition === \"string\") {\n    definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\n  }\n\n  return typeof definition === \"function\" ? definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity) : definition;\n}\n\nfunction resolveVariant(visualElement, definition, custom) {\n  var props = visualElement.getProps();\n  return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nfunction checkIfControllingVariants(props) {\n  var _a;\n\n  return typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" || isVariantLabel(props.initial) || isVariantLabel(props.animate) || isVariantLabel(props.whileHover) || isVariantLabel(props.whileDrag) || isVariantLabel(props.whileTap) || isVariantLabel(props.whileFocus) || isVariantLabel(props.exit);\n}\n\nfunction checkIfVariantNode(props) {\n  return Boolean(checkIfControllingVariants(props) || props.variants);\n}\n\nexport { checkIfControllingVariants, checkIfVariantNode, isVariantLabel, isVariantLabels, resolveVariant, resolveVariantFromProps };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/framer-motion/dist/es/render/utils/variants.js"],"names":["isVariantLabels","v","Array","isArray","isVariantLabel","getCurrent","visualElement","current","forEachValue","value","key","get","getVelocity","velocity","resolveVariantFromProps","props","definition","custom","currentValues","currentVelocity","_a","variants","resolveVariant","getProps","checkIfControllingVariants","animate","start","initial","whileHover","whileDrag","whileTap","whileFocus","exit","checkIfVariantNode","Boolean"],"mappings":"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","sourcesContent":["/**\n * Decides if the supplied variable is an array of variant labels\n */\nfunction isVariantLabels(v) {\n    return Array.isArray(v);\n}\n/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || isVariantLabels(v);\n}\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    var current = {};\n    visualElement.forEachValue(function (value, key) { return (current[key] = value.get()); });\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    var velocity = {};\n    visualElement.forEachValue(function (value, key) { return (velocity[key] = value.getVelocity()); });\n    return velocity;\n}\nfunction resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {\n    var _a;\n    if (currentValues === void 0) { currentValues = {}; }\n    if (currentVelocity === void 0) { currentVelocity = {}; }\n    if (typeof definition === \"string\") {\n        definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\n    }\n    return typeof definition === \"function\"\n        ? definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity)\n        : definition;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    var props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\nfunction checkIfControllingVariants(props) {\n    var _a;\n    return (typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" ||\n        isVariantLabel(props.initial) ||\n        isVariantLabel(props.animate) ||\n        isVariantLabel(props.whileHover) ||\n        isVariantLabel(props.whileDrag) ||\n        isVariantLabel(props.whileTap) ||\n        isVariantLabel(props.whileFocus) ||\n        isVariantLabel(props.exit));\n}\nfunction checkIfVariantNode(props) {\n    return Boolean(checkIfControllingVariants(props) || props.variants);\n}\n\nexport { checkIfControllingVariants, checkIfVariantNode, isVariantLabel, isVariantLabels, resolveVariant, resolveVariantFromProps };\n"]},"metadata":{},"sourceType":"module"}