{"version":3,"sources":["../../src/modal.tsx"],"names":["strict","name","errorMessage","ModalContextProvider","useModalContext","Modal","props","portalProps","children","autoFocus","trapFocus","initialFocusRef","finalFocusRef","returnFocusOnClose","blockScrollOnMount","allowPinchZoom","preserveScrollBarGap","motionPreset","lockFocusAcrossFrames","styles","modal","context","isOpen","defaultProps","scrollBehavior","__DEV__","displayName","MotionDiv","motion","div","ModalContent","ref","className","rootProps","containerProps","rest","getDialogProps","getDialogContainerProps","dialogProps","_className","dialogStyles","display","flexDirection","position","width","outline","dialog","dialogContainerStyles","height","left","top","dialogContainer","ModalFocusScope","dialogRef","isPresent","safeToRemove","React","useEffect","setTimeout","ModalOverlay","transition","overlayStyle","pos","w","h","overlay","motionProps","fadeConfig","ModalHeader","headerId","setHeaderMounted","headerStyles","flex","header","ModalBody","bodyId","setBodyMounted","body","ModalFooter","footerStyles","alignItems","justifyContent","footer","ModalCloseButton","onClick","onClose","closeButton","event","stopPropagation"],"mappings":"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","sourcesContent":["import { CloseButton, CloseButtonProps } from \"@chakra-ui/close-button\"\nimport { FocusLock, FocusLockProps } from \"@chakra-ui/focus-lock\"\nimport { Portal, PortalProps } from \"@chakra-ui/portal\"\nimport {\n  chakra,\n  ChakraProps,\n  forwardRef,\n  HTMLChakraProps,\n  StylesProvider,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n} from \"@chakra-ui/system\"\nimport { fadeConfig } from \"@chakra-ui/transition\"\nimport {\n  callAllHandlers,\n  cx,\n  FocusableElement,\n  __DEV__,\n} from \"@chakra-ui/utils\"\nimport { createContext } from \"@chakra-ui/react-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  usePresence,\n} from \"framer-motion\"\nimport * as React from \"react\"\nimport { RemoveScroll } from \"react-remove-scroll\"\nimport { MouseEvent } from \"react\"\nimport { ModalTransition } from \"./modal-transition\"\nimport { useModal, UseModalProps, UseModalReturn } from \"./use-modal\"\n\ninterface ModalOptions extends Pick<FocusLockProps, \"lockFocusAcrossFrames\"> {\n  /**\n   * If `false`, focus lock will be disabled completely.\n   *\n   * This is useful in situations where you still need to interact with\n   * other surrounding elements.\n   *\n   * 🚨Warning: We don't recommend doing this because it hurts the\n   * accessibility of the modal, based on WAI-ARIA specifications.\n   *\n   * @default true\n   */\n  trapFocus?: boolean\n  /**\n   * If `true`, the modal will autofocus the first enabled and interactive\n   * element within the `ModalContent`\n   *\n   * @default true\n   */\n  autoFocus?: boolean\n  /**\n   * The `ref` of element to receive focus when the modal opens.\n   */\n  initialFocusRef?: React.RefObject<FocusableElement>\n  /**\n   * The `ref` of element to receive focus when the modal closes.\n   */\n  finalFocusRef?: React.RefObject<FocusableElement>\n  /**\n   * If `true`, the modal will return focus to the element that triggered it when it closes.\n   * @default true\n   */\n  returnFocusOnClose?: boolean\n  /**\n   * If `true`, scrolling will be disabled on the `body` when the modal opens.\n   *  @default true\n   */\n  blockScrollOnMount?: boolean\n  /**\n   * Handle zoom/pinch gestures on iOS devices when scroll locking is enabled.\n   * Defaults to `false`.\n   */\n  allowPinchZoom?: boolean\n  /**\n   * If `true`, a `padding-right` will be applied to the body element\n   * that's equal to the width of the scrollbar.\n   *\n   * This can help prevent some unpleasant flickering effect\n   * and content adjustment when the modal opens\n   */\n  preserveScrollBarGap?: boolean\n}\n\ntype ScrollBehavior = \"inside\" | \"outside\"\n\ntype MotionPreset = \"slideInBottom\" | \"slideInRight\" | \"scale\" | \"none\"\n\nexport interface ModalProps\n  extends UseModalProps,\n    ModalOptions,\n    ThemingProps<\"Modal\"> {\n  children: React.ReactNode\n  /**\n   *  If `true`, the modal will be centered on screen.\n   * @default false\n   */\n  isCentered?: boolean\n  /**\n   * Where scroll behavior should originate.\n   * - If set to `inside`, scroll only occurs within the `ModalBody`.\n   * - If set to `outside`, the entire `ModalContent` will scroll within the viewport.\n   *\n   * @default \"outside\"\n   */\n  scrollBehavior?: ScrollBehavior\n  /**\n   * Props to be forwarded to the portal component\n   */\n  portalProps?: Pick<PortalProps, \"appendToParentPortal\" | \"containerRef\">\n  /**\n   * The transition that should be used for the modal\n   */\n  motionPreset?: MotionPreset\n}\n\ninterface ModalContext extends ModalOptions, UseModalReturn {\n  /**\n   * The transition that should be used for the modal\n   */\n  motionPreset?: MotionPreset\n}\n\nconst [ModalContextProvider, useModalContext] = createContext<ModalContext>({\n  strict: true,\n  name: \"ModalContext\",\n  errorMessage:\n    \"useModalContext: `context` is undefined. Seems you forgot to wrap modal components in `<Modal />`\",\n})\n\nexport { ModalContextProvider, useModalContext }\n\n/**\n * Modal provides context, theming, and accessibility properties\n * to all other modal components.\n *\n * It doesn't render any DOM node.\n */\nexport const Modal: React.FC<ModalProps> = (props) => {\n  const {\n    portalProps,\n    children,\n    autoFocus,\n    trapFocus,\n    initialFocusRef,\n    finalFocusRef,\n    returnFocusOnClose,\n    blockScrollOnMount,\n    allowPinchZoom,\n    preserveScrollBarGap,\n    motionPreset,\n    lockFocusAcrossFrames,\n  } = props\n\n  const styles = useMultiStyleConfig(\"Modal\", props)\n  const modal = useModal(props)\n\n  const context = {\n    ...modal,\n    autoFocus,\n    trapFocus,\n    initialFocusRef,\n    finalFocusRef,\n    returnFocusOnClose,\n    blockScrollOnMount,\n    allowPinchZoom,\n    preserveScrollBarGap,\n    motionPreset,\n    lockFocusAcrossFrames,\n  }\n\n  return (\n    <ModalContextProvider value={context}>\n      <StylesProvider value={styles}>\n        <AnimatePresence>\n          {context.isOpen && <Portal {...portalProps}>{children}</Portal>}\n        </AnimatePresence>\n      </StylesProvider>\n    </ModalContextProvider>\n  )\n}\n\nModal.defaultProps = {\n  lockFocusAcrossFrames: true,\n  returnFocusOnClose: true,\n  scrollBehavior: \"outside\",\n  trapFocus: true,\n  autoFocus: true,\n  blockScrollOnMount: true,\n  allowPinchZoom: false,\n  motionPreset: \"scale\",\n}\n\nif (__DEV__) {\n  Modal.displayName = \"Modal\"\n}\n\nexport interface ModalContentProps extends HTMLChakraProps<\"section\"> {\n  /**\n   * The props to forward to the modal's content wrapper\n   */\n  containerProps?: HTMLChakraProps<\"div\">\n}\n\nconst MotionDiv = chakra(motion.div)\n\n/**\n * ModalContent is used to group modal's content. It has all the\n * necessary `aria-*` properties to indicate that it is a modal\n */\nexport const ModalContent = forwardRef<ModalContentProps, \"section\">(\n  (props, ref) => {\n    const { className, children, containerProps: rootProps, ...rest } = props\n\n    const { getDialogProps, getDialogContainerProps } = useModalContext()\n\n    const dialogProps = getDialogProps(rest, ref) as any\n    const containerProps = getDialogContainerProps(rootProps)\n\n    const _className = cx(\"chakra-modal__content\", className)\n\n    const styles = useStyles()\n\n    const dialogStyles: SystemStyleObject = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\",\n      width: \"100%\",\n      outline: 0,\n      ...styles.dialog,\n    }\n\n    const dialogContainerStyles: SystemStyleObject = {\n      display: \"flex\",\n      width: \"100vw\",\n      height: \"100vh\",\n      \"@supports(height: -webkit-fill-available)\": {\n        height: \"-webkit-fill-available\",\n      },\n      position: \"fixed\",\n      left: 0,\n      top: 0,\n      ...styles.dialogContainer,\n    }\n\n    const { motionPreset } = useModalContext()\n\n    return (\n      <ModalFocusScope>\n        <chakra.div\n          {...containerProps}\n          className=\"chakra-modal__content-container\"\n          __css={dialogContainerStyles}\n        >\n          <ModalTransition\n            preset={motionPreset}\n            className={_className}\n            {...dialogProps}\n            __css={dialogStyles}\n          >\n            {children}\n          </ModalTransition>\n        </chakra.div>\n      </ModalFocusScope>\n    )\n  },\n)\n\nif (__DEV__) {\n  ModalContent.displayName = \"ModalContent\"\n}\n\ninterface ModalFocusScopeProps {\n  /**\n   * @type React.ReactElement\n   */\n  children: React.ReactElement\n}\n\nexport function ModalFocusScope(props: ModalFocusScopeProps) {\n  const {\n    autoFocus,\n    trapFocus,\n    dialogRef,\n    initialFocusRef,\n    blockScrollOnMount,\n    allowPinchZoom,\n    finalFocusRef,\n    returnFocusOnClose,\n    preserveScrollBarGap,\n    lockFocusAcrossFrames,\n  } = useModalContext()\n\n  const [isPresent, safeToRemove] = usePresence()\n\n  React.useEffect(() => {\n    if (!isPresent && safeToRemove) {\n      setTimeout(safeToRemove)\n    }\n  }, [isPresent, safeToRemove])\n\n  return (\n    <FocusLock\n      autoFocus={autoFocus}\n      isDisabled={!trapFocus}\n      initialFocusRef={initialFocusRef}\n      finalFocusRef={finalFocusRef}\n      restoreFocus={returnFocusOnClose}\n      contentRef={dialogRef}\n      lockFocusAcrossFrames={lockFocusAcrossFrames}\n    >\n      <RemoveScroll\n        removeScrollBar={!preserveScrollBarGap}\n        allowPinchZoom={allowPinchZoom}\n        enabled={blockScrollOnMount}\n        forwardProps\n      >\n        {props.children}\n      </RemoveScroll>\n    </FocusLock>\n  )\n}\n\nexport interface ModalOverlayProps\n  extends Omit<HTMLMotionProps<\"div\">, \"color\" | \"transition\">,\n    ChakraProps {\n  children?: React.ReactNode\n}\n\n/**\n * ModalOverlay renders a backdrop behind the modal. It is\n * also used as a wrapper for the modal content for better positioning.\n *\n * @see Docs https://chakra-ui.com/modal\n */\nexport const ModalOverlay = forwardRef<ModalOverlayProps, \"div\">(\n  (props, ref) => {\n    const { className, transition, ...rest } = props\n    const _className = cx(\"chakra-modal__overlay\", className)\n\n    const styles = useStyles()\n    const overlayStyle: SystemStyleObject = {\n      pos: \"fixed\",\n      left: \"0\",\n      top: \"0\",\n      w: \"100vw\",\n      h: \"100vh\",\n      ...styles.overlay,\n    }\n\n    const { motionPreset } = useModalContext()\n    const motionProps: any = motionPreset === \"none\" ? {} : fadeConfig\n\n    return (\n      <MotionDiv\n        {...motionProps}\n        __css={overlayStyle}\n        ref={ref}\n        className={_className}\n        {...rest}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  ModalOverlay.displayName = \"ModalOverlay\"\n}\n\nexport interface ModalHeaderProps extends HTMLChakraProps<\"header\"> {}\n\n/**\n * ModalHeader\n *\n * React component that houses the title of the modal.\n *\n * @see Docs https://chakra-ui.com/modal\n */\nexport const ModalHeader = forwardRef<ModalHeaderProps, \"header\">(\n  (props, ref) => {\n    const { className, ...rest } = props\n\n    const { headerId, setHeaderMounted } = useModalContext()\n\n    /**\n     * Notify us if this component was rendered or used\n     * so we can append `aria-labelledby` automatically\n     */\n    React.useEffect(() => {\n      setHeaderMounted(true)\n      return () => setHeaderMounted(false)\n    }, [setHeaderMounted])\n\n    const _className = cx(\"chakra-modal__header\", className)\n\n    const styles = useStyles()\n    const headerStyles: SystemStyleObject = {\n      flex: 0,\n      ...styles.header,\n    }\n\n    return (\n      <chakra.header\n        ref={ref}\n        className={_className}\n        id={headerId}\n        {...rest}\n        __css={headerStyles}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  ModalHeader.displayName = \"ModalHeader\"\n}\n\nexport interface ModalBodyProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * ModalBody\n *\n * React component that houses the main content of the modal.\n *\n * @see Docs https://chakra-ui.com/modal\n */\nexport const ModalBody = forwardRef<ModalBodyProps, \"div\">((props, ref) => {\n  const { className, ...rest } = props\n  const { bodyId, setBodyMounted } = useModalContext()\n\n  /**\n   * Notify us if this component was rendered or used\n   * so we can append `aria-describedby` automatically\n   */\n  React.useEffect(() => {\n    setBodyMounted(true)\n    return () => setBodyMounted(false)\n  }, [setBodyMounted])\n\n  const _className = cx(\"chakra-modal__body\", className)\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={_className}\n      id={bodyId}\n      {...rest}\n      __css={styles.body}\n    />\n  )\n})\n\nif (__DEV__) {\n  ModalBody.displayName = \"ModalBody\"\n}\n\nexport interface ModalFooterProps extends HTMLChakraProps<\"footer\"> {}\n\n/**\n * ModalFooter houses the action buttons of the modal.\n * @see Docs https://chakra-ui.com/modal\n */\nexport const ModalFooter = forwardRef<ModalFooterProps, \"footer\">(\n  (props, ref) => {\n    const { className, ...rest } = props\n    const _className = cx(\"chakra-modal__footer\", className)\n\n    const styles = useStyles()\n    const footerStyles: SystemStyleObject = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      ...styles.footer,\n    }\n\n    return (\n      <chakra.footer\n        ref={ref}\n        {...rest}\n        __css={footerStyles}\n        className={_className}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  ModalFooter.displayName = \"ModalFooter\"\n}\n\n/**\n * ModalCloseButton is used closes the modal.\n *\n * You don't need to pass the `onClick` to it, it reads the\n * `onClose` action from the modal context.\n */\nexport const ModalCloseButton = forwardRef<CloseButtonProps, \"button\">(\n  (props, ref) => {\n    const { onClick, className, ...rest } = props\n    const { onClose } = useModalContext()\n\n    const _className = cx(\"chakra-modal__close-btn\", className)\n\n    const styles = useStyles()\n\n    return (\n      <CloseButton\n        ref={ref}\n        __css={styles.closeButton}\n        className={_className}\n        onClick={callAllHandlers(onClick, (event: MouseEvent) => {\n          event.stopPropagation()\n          onClose()\n        })}\n        {...rest}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  ModalCloseButton.displayName = \"ModalCloseButton\"\n}\n"],"file":"modal.js"}