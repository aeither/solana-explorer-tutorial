{"version":3,"sources":["../../../src/utils/expand-responsive.ts"],"names":["isObject","runIfFn","expandResponsive","styles","theme","__breakpoints","isResponsive","toArrayValue","media","medias","computedStyles","key","value","Array","isArray","queries","slice","length","index"],"mappings":"AAAA,SAAeA,QAAf,EAAyBC,OAAzB,QAAwC,kBAAxC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,gBAAgB,GAAIC,MAAD,IAAmBC,KAAD,IAAiB;AACjE;AACF;AACA;AACA;AACA;AACA;AACA;AACE,MAAI,CAACA,KAAK,CAACC,aAAX,EAA0B,OAAOF,MAAP;AAC1B,MAAM;AAAEG,IAAAA,YAAF;AAAgBC,IAAAA,YAAhB;AAA8BC,IAAAA,KAAK,EAAEC;AAArC,MAAgDL,KAAK,CAACC,aAA5D;AAEA,MAAMK,cAAoB,GAAG,EAA7B;;AAEA,OAAK,IAAMC,GAAX,IAAkBR,MAAlB,EAA0B;AACxB,QAAIS,KAAK,GAAGX,OAAO,CAACE,MAAM,CAACQ,GAAD,CAAP,EAAcP,KAAd,CAAnB;AAEA,QAAIQ,KAAK,IAAI,IAAb,EAAmB,SAHK,CAKxB;;AACAA,IAAAA,KAAK,GAAGZ,QAAQ,CAACY,KAAD,CAAR,IAAmBN,YAAY,CAACM,KAAD,CAA/B,GAAyCL,YAAY,CAACK,KAAD,CAArD,GAA+DA,KAAvE;;AAEA,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAL,EAA2B;AACzBF,MAAAA,cAAc,CAACC,GAAD,CAAd,GAAsBC,KAAtB;AACA;AACD;;AAED,QAAMG,OAAO,GAAGH,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAeP,MAAM,CAACQ,MAAtB,EAA8BA,MAA9C;;AAEA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,OAA5B,EAAqCG,KAAK,IAAI,CAA9C,EAAiD;AAC/C,UAAMV,KAAK,GAAGC,MAAH,oBAAGA,MAAM,CAAGS,KAAH,CAApB;;AAEA,UAAI,CAACV,KAAL,EAAY;AACVE,QAAAA,cAAc,CAACC,GAAD,CAAd,GAAsBC,KAAK,CAACM,KAAD,CAA3B;AACA;AACD;;AAEDR,MAAAA,cAAc,CAACF,KAAD,CAAd,GAAwBE,cAAc,CAACF,KAAD,CAAd,IAAyB,EAAjD;;AAEA,UAAII,KAAK,CAACM,KAAD,CAAL,IAAgB,IAApB,EAA0B;AACxB;AACD;;AAEDR,MAAAA,cAAc,CAACF,KAAD,CAAd,CAAsBG,GAAtB,IAA6BC,KAAK,CAACM,KAAD,CAAlC;AACD;AACF;;AAED,SAAOR,cAAP;AACD,CA/CM","sourcesContent":["import { Dict, isObject, runIfFn } from \"@chakra-ui/utils\"\n\n/**\n * Expands an array or object syntax responsive style.\n *\n * @example\n * expandResponsive({ mx: [1, 2] })\n * // or\n * expandResponsive({ mx: { base: 1, sm: 2 } })\n *\n * // => { mx: 1, \"@media(min-width:<sm>)\": { mx: 2 } }\n */\nexport const expandResponsive = (styles: Dict) => (theme: Dict) => {\n  /**\n   * Before any style can be processed, the user needs to call `toCSSVar`\n   * which analyzes the theme's breakpoint and appends a `__breakpoints` property\n   * to the theme with more details of the breakpoints.\n   *\n   * To learn more, go here: packages/utils/src/responsive.ts #analyzeBreakpoints\n   */\n  if (!theme.__breakpoints) return styles\n  const { isResponsive, toArrayValue, media: medias } = theme.__breakpoints\n\n  const computedStyles: Dict = {}\n\n  for (const key in styles) {\n    let value = runIfFn(styles[key], theme)\n\n    if (value == null) continue\n\n    // converts the object responsive syntax to array syntax\n    value = isObject(value) && isResponsive(value) ? toArrayValue(value) : value\n\n    if (!Array.isArray(value)) {\n      computedStyles[key] = value\n      continue\n    }\n\n    const queries = value.slice(0, medias.length).length\n\n    for (let index = 0; index < queries; index += 1) {\n      const media = medias?.[index]\n\n      if (!media) {\n        computedStyles[key] = value[index]\n        continue\n      }\n\n      computedStyles[media] = computedStyles[media] || {}\n\n      if (value[index] == null) {\n        continue\n      }\n\n      computedStyles[media][key] = value[index]\n    }\n  }\n\n  return computedStyles\n}\n"],"file":"expand-responsive.js"}