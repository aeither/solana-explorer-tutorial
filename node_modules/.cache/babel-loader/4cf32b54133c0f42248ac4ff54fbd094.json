{"ast":null,"code":"import _defineProperty2 from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { objectKeys } from \"@chakra-ui/utils\";\nimport { AnimatePresence } from \"framer-motion\";\nimport * as React from \"react\";\nimport { Toast } from \"./toast\";\nimport { findToast, getToastPosition } from \"./toast.utils\";\n/**\n * Manages the creation, and removal of toasts\n * across all corners (\"top\", \"bottom\", etc.)\n */\n\nexport var ToastManager = /*#__PURE__*/function (_React$Component) {\n  _inherits(ToastManager, _React$Component);\n\n  var _super = _createSuper(ToastManager);\n\n  /**\n   * Static id counter to create unique ids\n   * for each toast\n   */\n\n  /**\n   * State to track all the toast across all positions\n   */\n  function ToastManager(props) {\n    var _this2;\n\n    _classCallCheck(this, ToastManager);\n\n    var _this;\n\n    _this2 = _super.call(this, props);\n    _this = _assertThisInitialized(_this2);\n\n    _defineProperty(_assertThisInitialized(_this2), \"state\", {\n      top: [],\n      \"top-left\": [],\n      \"top-right\": [],\n      \"bottom-left\": [],\n      bottom: [],\n      \"bottom-right\": []\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"notify\", function (message, options) {\n      var toast = _this2.createToast(message, options);\n\n      var position = toast.position,\n          id = toast.id;\n\n      _this2.setState(function (prevToasts) {\n        var isTop = position.includes(\"top\");\n        /**\n         * - If the toast is positioned at the top edges, the\n         * recent toast stacks on top of the other toasts.\n         *\n         * - If the toast is positioned at the bottom edges, the recent\n         * toast stacks below the other toasts.\n         */\n\n        var toasts = isTop ? [toast].concat(_toConsumableArray(prevToasts[position])) : [].concat(_toConsumableArray(prevToasts[position]), [toast]);\n        return _extends({}, prevToasts, _defineProperty2({}, position, toasts));\n      });\n\n      return id;\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"updateToast\", function (id, options) {\n      _this2.setState(function (prevState) {\n        var nextState = _extends({}, prevState);\n\n        var _findToast = findToast(nextState, id),\n            position = _findToast.position,\n            index = _findToast.index;\n\n        if (position && index !== -1) {\n          nextState[position][index] = _extends({}, nextState[position][index], options);\n        }\n\n        return nextState;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"closeAll\", function (_temp) {\n      var _ref = _temp === void 0 ? {} : _temp,\n          positions = _ref.positions; // only one setState here for perf reasons\n      // instead of spamming this.closeToast\n\n\n      _this.setState(function (prev) {\n        var allPositions = [\"bottom\", \"bottom-right\", \"bottom-left\", \"top\", \"top-left\", \"top-right\"];\n        var positionsToClose = positions != null ? positions : allPositions;\n        return positionsToClose.reduce(function (acc, position) {\n          acc[position] = prev[position].map(function (toast) {\n            return _extends({}, toast, {\n              requestClose: true\n            });\n          });\n          return acc;\n        }, {});\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"createToast\", function (message, options) {\n      var _options$id, _options$position;\n\n      ToastManager.counter += 1;\n      var id = (_options$id = options.id) != null ? _options$id : ToastManager.counter;\n      var position = (_options$position = options.position) != null ? _options$position : \"top\";\n      return {\n        id: id,\n        message: message,\n        position: position,\n        duration: options.duration,\n        onCloseComplete: options.onCloseComplete,\n        onRequestRemove: function onRequestRemove() {\n          return _this2.removeToast(String(id), position);\n        },\n        status: options.status,\n        requestClose: false\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"closeToast\", function (id) {\n      _this2.setState(function (prevState) {\n        var position = getToastPosition(prevState, id);\n        if (!position) return prevState;\n        return _extends({}, prevState, _defineProperty2({}, position, prevState[position].map(function (toast) {\n          // id may be string or number\n          // eslint-disable-next-line eqeqeq\n          if (toast.id == id) {\n            return _extends({}, toast, {\n              requestClose: true\n            });\n          }\n\n          return toast;\n        })));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"removeToast\", function (id, position) {\n      _this2.setState(function (prevState) {\n        return _extends({}, prevState, _defineProperty2({}, position, prevState[position].filter(function (toast) {\n          return toast.id != id;\n        })));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"isVisible\", function (id) {\n      var _findToast2 = findToast(_this2.state, id),\n          position = _findToast2.position;\n\n      return Boolean(position);\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"getStyle\", function (position) {\n      var isTopOrBottom = position === \"top\" || position === \"bottom\";\n      var margin = isTopOrBottom ? \"0 auto\" : undefined;\n      var top = position.includes(\"top\") ? \"env(safe-area-inset-top, 0px)\" : undefined;\n      var bottom = position.includes(\"bottom\") ? \"env(safe-area-inset-bottom, 0px)\" : undefined;\n      var right = !position.includes(\"left\") ? \"env(safe-area-inset-right, 0px)\" : undefined;\n      var left = !position.includes(\"right\") ? \"env(safe-area-inset-left, 0px)\" : undefined;\n      return {\n        position: \"fixed\",\n        zIndex: 5500,\n        pointerEvents: \"none\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        margin: margin,\n        top: top,\n        bottom: bottom,\n        right: right,\n        left: left\n      };\n    });\n\n    var methods = {\n      notify: _this2.notify,\n      closeAll: _this2.closeAll,\n      close: _this2.closeToast,\n      update: _this2.updateToast,\n      isActive: _this2.isVisible\n    };\n    props.notify(methods);\n    return _this2;\n  }\n  /**\n   * Function to actually create a toast and add it\n   * to state at the specified position\n   */\n\n\n  _createClass(ToastManager, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return objectKeys(this.state).map(function (position) {\n        var toasts = _this3.state[position];\n        return /*#__PURE__*/React.createElement(\"ul\", {\n          key: position,\n          id: \"chakra-toast-manager-\" + position,\n          style: _this3.getStyle(position)\n        }, /*#__PURE__*/React.createElement(AnimatePresence, {\n          initial: false\n        }, toasts.map(function (toast) {\n          return /*#__PURE__*/React.createElement(Toast, _extends({\n            key: toast.id\n          }, toast));\n        })));\n      });\n    }\n  }]);\n\n  return ToastManager;\n}(React.Component);\n\n_defineProperty(ToastManager, \"counter\", 0);","map":{"version":3,"sources":["../../src/toast-manager.tsx"],"names":["ToastManager","React","top","bottom","constructor","methods","notify","closeAll","close","update","isActive","isVisible","props","toast","id","prevToasts","isTop","position","toasts","prevState","nextState","index","findToast","positions","prev","allPositions","positionsToClose","acc","requestClose","options","message","duration","onCloseComplete","onRequestRemove","String","status","getToastPosition","Boolean","isTopOrBottom","margin","right","left","zIndex","pointerEvents","display","flexDirection","render"],"mappings":"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","sourcesContent":["import { objectKeys } from \"@chakra-ui/utils\"\nimport { AnimatePresence } from \"framer-motion\"\nimport * as React from \"react\"\nimport { Toast } from \"./toast\"\nimport type {\n  CloseAllToastsOptions,\n  ToastId,\n  ToastMessage,\n  ToastOptions,\n  ToastPosition,\n} from \"./toast.types\"\nimport { findToast, getToastPosition } from \"./toast.utils\"\n\nexport interface ToastMethods {\n  notify: (message: ToastMessage, options: CreateToastOptions) => ToastId\n  closeAll: (options?: CloseAllToastsOptions) => void\n  close: (id: ToastId) => void\n  update: (id: ToastId, options: CreateToastOptions) => void\n  isActive: (id: ToastId) => boolean\n}\n\ninterface Props {\n  notify: (methods: ToastMethods) => void\n}\n\ntype State = { [K in ToastPosition]: ToastOptions[] }\n\ntype CreateToastOptions = Partial<\n  Pick<\n    ToastOptions,\n    \"status\" | \"duration\" | \"position\" | \"id\" | \"onCloseComplete\"\n  >\n>\n\n/**\n * Manages the creation, and removal of toasts\n * across all corners (\"top\", \"bottom\", etc.)\n */\nexport class ToastManager extends React.Component<Props, State> {\n  /**\n   * Static id counter to create unique ids\n   * for each toast\n   */\n  static counter = 0\n\n  /**\n   * State to track all the toast across all positions\n   */\n  state: State = {\n    top: [],\n    \"top-left\": [],\n    \"top-right\": [],\n    \"bottom-left\": [],\n    bottom: [],\n    \"bottom-right\": [],\n  }\n\n  constructor(props: Props) {\n    super(props)\n\n    const methods = {\n      notify: this.notify,\n      closeAll: this.closeAll,\n      close: this.closeToast,\n      update: this.updateToast,\n      isActive: this.isVisible,\n    }\n\n    props.notify(methods)\n  }\n\n  /**\n   * Function to actually create a toast and add it\n   * to state at the specified position\n   */\n  notify = (message: ToastMessage, options: CreateToastOptions) => {\n    const toast = this.createToast(message, options)\n    const { position, id } = toast\n\n    this.setState((prevToasts) => {\n      const isTop = position.includes(\"top\")\n\n      /**\n       * - If the toast is positioned at the top edges, the\n       * recent toast stacks on top of the other toasts.\n       *\n       * - If the toast is positioned at the bottom edges, the recent\n       * toast stacks below the other toasts.\n       */\n      const toasts = isTop\n        ? [toast, ...prevToasts[position]]\n        : [...prevToasts[position], toast]\n\n      return {\n        ...prevToasts,\n        [position]: toasts,\n      }\n    })\n\n    return id\n  }\n\n  /**\n   * Update a specific toast with new options based on the\n   * passed `id`\n   */\n  updateToast = (id: ToastId, options: CreateToastOptions) => {\n    this.setState((prevState) => {\n      const nextState = { ...prevState }\n      const { position, index } = findToast(nextState, id)\n\n      if (position && index !== -1) {\n        nextState[position][index] = {\n          ...nextState[position][index],\n          ...options,\n        }\n      }\n\n      return nextState\n    })\n  }\n\n  /**\n   * Close all toasts at once.\n   * If given positions, will only close those.\n   */\n  closeAll = ({ positions }: CloseAllToastsOptions = {}) => {\n    // only one setState here for perf reasons\n    // instead of spamming this.closeToast\n    this.setState((prev) => {\n      const allPositions: ToastPosition[] = [\n        \"bottom\",\n        \"bottom-right\",\n        \"bottom-left\",\n        \"top\",\n        \"top-left\",\n        \"top-right\",\n      ]\n\n      const positionsToClose = positions ?? allPositions\n\n      return positionsToClose.reduce((acc, position) => {\n        acc[position] = prev[position].map((toast) => ({\n          ...toast,\n          requestClose: true,\n        }))\n\n        return acc\n      }, {})\n    })\n  }\n\n  /**\n   * Create properties for a new toast\n   */\n  createToast = (message: ToastMessage, options: CreateToastOptions) => {\n    ToastManager.counter += 1\n    const id = options.id ?? ToastManager.counter\n\n    const position = options.position ?? \"top\"\n\n    return {\n      id,\n      message,\n      position,\n      duration: options.duration,\n      onCloseComplete: options.onCloseComplete,\n      onRequestRemove: () => this.removeToast(String(id), position),\n      status: options.status,\n      requestClose: false,\n    }\n  }\n\n  /**\n   * Requests to close a toast based on its id and position\n   */\n  closeToast = (id: ToastId) => {\n    this.setState((prevState) => {\n      const position = getToastPosition(prevState, id)\n\n      if (!position) return prevState\n\n      return {\n        ...prevState,\n        [position]: prevState[position].map((toast) => {\n          // id may be string or number\n          // eslint-disable-next-line eqeqeq\n          if (toast.id == id) {\n            return {\n              ...toast,\n              requestClose: true,\n            }\n          }\n\n          return toast\n        }),\n      }\n    })\n  }\n\n  /**\n   * Delete a toast record at its position\n   */\n  removeToast = (id: ToastId, position: ToastPosition) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      // id may be string or number\n      // eslint-disable-next-line eqeqeq\n      [position]: prevState[position].filter((toast) => toast.id != id),\n    }))\n  }\n\n  isVisible = (id: ToastId) => {\n    const { position } = findToast(this.state, id)\n    return Boolean(position)\n  }\n\n  /**\n   * Compute the style of a toast based on its position\n   */\n  getStyle = (position: ToastPosition): React.CSSProperties => {\n    const isTopOrBottom = position === \"top\" || position === \"bottom\"\n    const margin = isTopOrBottom ? \"0 auto\" : undefined\n\n    const top = position.includes(\"top\")\n      ? \"env(safe-area-inset-top, 0px)\"\n      : undefined\n    const bottom = position.includes(\"bottom\")\n      ? \"env(safe-area-inset-bottom, 0px)\"\n      : undefined\n    const right = !position.includes(\"left\")\n      ? \"env(safe-area-inset-right, 0px)\"\n      : undefined\n    const left = !position.includes(\"right\")\n      ? \"env(safe-area-inset-left, 0px)\"\n      : undefined\n\n    return {\n      position: \"fixed\",\n      zIndex: 5500,\n      pointerEvents: \"none\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      margin,\n      top,\n      bottom,\n      right,\n      left,\n    }\n  }\n\n  render() {\n    return objectKeys(this.state).map((position) => {\n      const toasts = this.state[position]\n      return (\n        <ul\n          key={position}\n          id={`chakra-toast-manager-${position}`}\n          style={this.getStyle(position)}\n        >\n          <AnimatePresence initial={false}>\n            {toasts.map((toast) => (\n              <Toast key={toast.id} {...toast} />\n            ))}\n          </AnimatePresence>\n        </ul>\n      )\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}