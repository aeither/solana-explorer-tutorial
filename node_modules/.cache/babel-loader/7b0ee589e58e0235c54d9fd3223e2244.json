{"ast":null,"code":"import { interpolate } from '../../utils/interpolate.js';\nimport { easeInOut } from '../../easing/index.js';\n\nfunction defaultEasing(values, easing) {\n  return values.map(function () {\n    return easing || easeInOut;\n  }).splice(0, values.length - 1);\n}\n\nfunction defaultOffset(values) {\n  var numValues = values.length;\n  return values.map(function (_value, i) {\n    return i !== 0 ? i / (numValues - 1) : 0;\n  });\n}\n\nfunction convertOffsetToTimes(offset, duration) {\n  return offset.map(function (o) {\n    return o * duration;\n  });\n}\n\nfunction keyframes(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0 : _b,\n      _c = _a.to,\n      to = _c === void 0 ? 1 : _c,\n      ease = _a.ease,\n      offset = _a.offset,\n      _d = _a.duration,\n      duration = _d === void 0 ? 300 : _d;\n  var state = {\n    done: false,\n    value: from\n  };\n  var values = Array.isArray(to) ? to : [from, to];\n  var times = convertOffsetToTimes(offset && offset.length === values.length ? offset : defaultOffset(values), duration);\n\n  function createInterpolator() {\n    return interpolate(times, values, {\n      ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)\n    });\n  }\n\n  var interpolator = createInterpolator();\n  return {\n    next: function next(t) {\n      state.value = interpolator(t);\n      state.done = t >= duration;\n      return state;\n    },\n    flipTarget: function flipTarget() {\n      values.reverse();\n      interpolator = createInterpolator();\n    }\n  };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/popmotion/dist/es/animations/generators/keyframes.js"],"names":["interpolate","easeInOut","defaultEasing","values","easing","map","splice","length","defaultOffset","numValues","_value","i","convertOffsetToTimes","offset","duration","o","keyframes","_a","_b","from","_c","to","ease","_d","state","done","value","Array","isArray","times","createInterpolator","interpolator","next","t","flipTarget","reverse"],"mappings":"AAAA,SAASA,WAAT,QAA4B,4BAA5B;AACA,SAASC,SAAT,QAA0B,uBAA1B;;AAEA,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuC;AACnC,SAAOD,MAAM,CAACE,GAAP,CAAW,YAAY;AAAE,WAAOD,MAAM,IAAIH,SAAjB;AAA6B,GAAtD,EAAwDK,MAAxD,CAA+D,CAA/D,EAAkEH,MAAM,CAACI,MAAP,GAAgB,CAAlF,CAAP;AACH;;AACD,SAASC,aAAT,CAAuBL,MAAvB,EAA+B;AAC3B,MAAIM,SAAS,GAAGN,MAAM,CAACI,MAAvB;AACA,SAAOJ,MAAM,CAACE,GAAP,CAAW,UAAUK,MAAV,EAAkBC,CAAlB,EAAqB;AACnC,WAAOA,CAAC,KAAK,CAAN,GAAUA,CAAC,IAAIF,SAAS,GAAG,CAAhB,CAAX,GAAgC,CAAvC;AACH,GAFM,CAAP;AAGH;;AACD,SAASG,oBAAT,CAA8BC,MAA9B,EAAsCC,QAAtC,EAAgD;AAC5C,SAAOD,MAAM,CAACR,GAAP,CAAW,UAAUU,CAAV,EAAa;AAAE,WAAOA,CAAC,GAAGD,QAAX;AAAsB,GAAhD,CAAP;AACH;;AACD,SAASE,SAAT,CAAmBC,EAAnB,EAAuB;AACnB,MAAIC,EAAE,GAAGD,EAAE,CAACE,IAAZ;AAAA,MAAkBA,IAAI,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,EAA7C;AAAA,MAAiDE,EAAE,GAAGH,EAAE,CAACI,EAAzD;AAAA,MAA6DA,EAAE,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,EAAtF;AAAA,MAA0FE,IAAI,GAAGL,EAAE,CAACK,IAApG;AAAA,MAA0GT,MAAM,GAAGI,EAAE,CAACJ,MAAtH;AAAA,MAA8HU,EAAE,GAAGN,EAAE,CAACH,QAAtI;AAAA,MAAgJA,QAAQ,GAAGS,EAAE,KAAK,KAAK,CAAZ,GAAgB,GAAhB,GAAsBA,EAAjL;AACA,MAAIC,KAAK,GAAG;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAEP;AAAtB,GAAZ;AACA,MAAIhB,MAAM,GAAGwB,KAAK,CAACC,OAAN,CAAcP,EAAd,IAAoBA,EAApB,GAAyB,CAACF,IAAD,EAAOE,EAAP,CAAtC;AACA,MAAIQ,KAAK,GAAGjB,oBAAoB,CAACC,MAAM,IAAIA,MAAM,CAACN,MAAP,KAAkBJ,MAAM,CAACI,MAAnC,GAC3BM,MAD2B,GAE3BL,aAAa,CAACL,MAAD,CAFa,EAEHW,QAFG,CAAhC;;AAGA,WAASgB,kBAAT,GAA8B;AAC1B,WAAO9B,WAAW,CAAC6B,KAAD,EAAQ1B,MAAR,EAAgB;AAC9BmB,MAAAA,IAAI,EAAEK,KAAK,CAACC,OAAN,CAAcN,IAAd,IAAsBA,IAAtB,GAA6BpB,aAAa,CAACC,MAAD,EAASmB,IAAT;AADlB,KAAhB,CAAlB;AAGH;;AACD,MAAIS,YAAY,GAAGD,kBAAkB,EAArC;AACA,SAAO;AACHE,IAAAA,IAAI,EAAE,cAAUC,CAAV,EAAa;AACfT,MAAAA,KAAK,CAACE,KAAN,GAAcK,YAAY,CAACE,CAAD,CAA1B;AACAT,MAAAA,KAAK,CAACC,IAAN,GAAaQ,CAAC,IAAInB,QAAlB;AACA,aAAOU,KAAP;AACH,KALE;AAMHU,IAAAA,UAAU,EAAE,sBAAY;AACpB/B,MAAAA,MAAM,CAACgC,OAAP;AACAJ,MAAAA,YAAY,GAAGD,kBAAkB,EAAjC;AACH;AATE,GAAP;AAWH;;AAED,SAASlB,oBAAT,EAA+BV,aAA/B,EAA8CM,aAA9C,EAA6DQ,SAA7D","sourcesContent":["import { interpolate } from '../../utils/interpolate.js';\nimport { easeInOut } from '../../easing/index.js';\n\nfunction defaultEasing(values, easing) {\n    return values.map(function () { return easing || easeInOut; }).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    var numValues = values.length;\n    return values.map(function (_value, i) {\n        return i !== 0 ? i / (numValues - 1) : 0;\n    });\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map(function (o) { return o * duration; });\n}\nfunction keyframes(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.to, to = _c === void 0 ? 1 : _c, ease = _a.ease, offset = _a.offset, _d = _a.duration, duration = _d === void 0 ? 300 : _d;\n    var state = { done: false, value: from };\n    var values = Array.isArray(to) ? to : [from, to];\n    var times = convertOffsetToTimes(offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    var interpolator = createInterpolator();\n    return {\n        next: function (t) {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: function () {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n"]},"metadata":{},"sourceType":"module"}