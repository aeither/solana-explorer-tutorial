{"version":3,"sources":["../../src/slide.tsx"],"names":["defaultTransition","exit","duration","ease","TransitionEasings","easeInOut","enter","type","damping","stiffness","variants","direction","transition","transitionEnd","delay","exitStyles","withDelay","enterStyles","Slide","React","forwardRef","props","ref","style","unmountOnExit","isOpen","className","rest","transitionStyles","computedStyle","Object","assign","position","show","animate","custom","__DEV__","displayName"],"mappings":"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","sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  MotionStyle,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  SlideDirection,\n  slideTransition,\n  TransitionEasings,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\nexport type { SlideDirection }\n\nconst defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TransitionEasings.easeInOut,\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180,\n  },\n}\n\nconst variants: Variants<SlideOptions> = {\n  exit: ({ direction, transition, transitionEnd, delay }) => {\n    const { exit: exitStyles } = slideTransition({ direction })\n    return {\n      ...exitStyles,\n      transition:\n        transition?.exit ?? withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd?.exit,\n    }\n  },\n  enter: ({ direction, transitionEnd, transition, delay }) => {\n    const { enter: enterStyles } = slideTransition({ direction })\n    return {\n      ...enterStyles,\n      transition:\n        transition?.enter ?? withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd?.enter,\n    }\n  },\n}\n\nexport interface SlideOptions {\n  /**\n   * The direction to slide from\n   * @default \"right\"\n   */\n  direction?: SlideDirection\n}\n\nexport interface SlideProps\n  extends WithTransitionConfig<HTMLMotionProps<\"div\">>,\n    SlideOptions {}\n\nexport const Slide = React.forwardRef<HTMLDivElement, SlideProps>(\n  (props, ref) => {\n    const {\n      direction = \"right\",\n      style,\n      unmountOnExit,\n      in: isOpen,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const transitionStyles = slideTransition({ direction })\n    const computedStyle: MotionStyle = Object.assign(\n      { position: \"fixed\" },\n      transitionStyles.position,\n      style,\n    )\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = { transitionEnd, transition, direction, delay }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            initial=\"exit\"\n            className={cx(\"chakra-slide\", className)}\n            animate={animate}\n            exit=\"exit\"\n            custom={custom}\n            variants={variants as _Variants}\n            style={computedStyle}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  Slide.displayName = \"Slide\"\n}\n"],"file":"slide.js"}