{"version":3,"sources":["../../src/slider.tsx"],"names":["chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","cx","__DEV__","createContext","React","useSlider","SliderProvider","useSliderContext","name","errorMessage","Slider","props","ref","styles","ownProps","getInputProps","getRootProps","context","rootProps","inputProps","rootStyles","display","position","cursor","container","children","defaultProps","orientation","displayName","SliderThumb","getThumbProps","thumbStyles","alignItems","justifyContent","outline","thumb","thumbProps","className","SliderTrack","getTrackProps","trackStyles","overflow","track","trackProps","SliderFilledTrack","getInnerTrackProps","width","height","filledTrack","SliderMark","getMarkerProps","markProps"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport { createContext } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport { useSlider, UseSliderProps, UseSliderReturn } from \"./use-slider\"\n\ninterface SliderContext\n  extends Omit<UseSliderReturn, \"getInputProps\" | \"getRootProps\"> {}\n\nconst [SliderProvider, useSliderContext] = createContext<SliderContext>({\n  name: \"SliderContext\",\n  errorMessage:\n    \"useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <Slider />\",\n})\n\nexport { SliderProvider, useSliderContext }\n\ntype Omitted = \"size\" | \"defaultValue\" | \"onChange\"\nexport interface SliderProps\n  extends UseSliderProps,\n    ThemingProps<\"Slider\">,\n    Omit<HTMLChakraProps<\"div\">, Omitted> {}\n\n/**\n * The Slider is used to allow users to make selections from a range of values.\n * It provides context and functionality for all slider components\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices/#slider\n */\nexport const Slider = forwardRef<SliderProps, \"div\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Slider\", props)\n  const ownProps = omitThemingProps(props)\n\n  const { getInputProps, getRootProps, ...context } = useSlider(ownProps)\n\n  const rootProps = getRootProps()\n  const inputProps = getInputProps({}, ref)\n\n  const rootStyles: SystemStyleObject = {\n    display: \"inline-block\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    ...styles.container,\n  }\n\n  return (\n    <SliderProvider value={context}>\n      <StylesProvider value={styles}>\n        <chakra.div {...rootProps} className=\"chakra-slider\" __css={rootStyles}>\n          {props.children}\n          <input {...inputProps} />\n        </chakra.div>\n      </StylesProvider>\n    </SliderProvider>\n  )\n})\n\nSlider.defaultProps = {\n  orientation: \"horizontal\",\n}\n\nif (__DEV__) {\n  Slider.displayName = \"Slider\"\n}\n\nexport interface SliderThumbProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Slider component that acts as the handle used to select predefined\n * values by dragging its handle along the track\n */\nexport const SliderThumb = forwardRef<SliderThumbProps, \"div\">((props, ref) => {\n  const { getThumbProps } = useSliderContext()\n\n  const styles = useStyles()\n\n  const thumbStyles: SystemStyleObject = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    outline: 0,\n    ...styles.thumb,\n  }\n\n  const thumbProps = getThumbProps(props, ref)\n\n  return (\n    <chakra.div\n      {...thumbProps}\n      className={cx(\"chakra-slider__thumb\", props.className)}\n      __css={thumbStyles}\n    />\n  )\n})\n\nif (__DEV__) {\n  SliderThumb.displayName = \"SliderThumb\"\n}\n\nexport interface SliderTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const SliderTrack = forwardRef<SliderTrackProps, \"div\">((props, ref) => {\n  const { getTrackProps } = useSliderContext()\n\n  const styles = useStyles()\n  const trackStyles = {\n    overflow: \"hidden\",\n    ...styles.track,\n  }\n\n  const trackProps = getTrackProps(props, ref)\n\n  return (\n    <chakra.div\n      {...trackProps}\n      className={cx(\"chakra-slider__track\", props.className)}\n      __css={trackStyles}\n    />\n  )\n})\n\nif (__DEV__) {\n  SliderTrack.displayName = \"SliderTrack\"\n}\n\nexport interface SliderInnerTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const SliderFilledTrack = forwardRef<SliderInnerTrackProps, \"div\">(\n  (props, ref) => {\n    const { getInnerTrackProps } = useSliderContext()\n\n    const styles = useStyles()\n    const trackStyles = {\n      width: \"inherit\",\n      height: \"inherit\",\n      ...styles.filledTrack,\n    }\n\n    const trackProps = getInnerTrackProps(props, ref)\n\n    return (\n      <chakra.div\n        {...trackProps}\n        className=\"chakra-slider__filled-track\"\n        __css={trackStyles}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  SliderFilledTrack.displayName = \"SliderFilledTrack\"\n}\n\nexport interface SliderMarkProps extends HTMLChakraProps<\"div\"> {\n  value: number\n}\n\n/**\n * SliderMark is used to provide names for specific Slider\n * values by defining labels or markers along the track.\n *\n * @see Docs https://chakra-ui.com/slider\n */\nexport const SliderMark = forwardRef<SliderMarkProps, \"div\">((props, ref) => {\n  const { getMarkerProps } = useSliderContext()\n  const markProps = getMarkerProps(props, ref)\n  return (\n    <chakra.div\n      {...markProps}\n      className={cx(\"chakra-slider__marker\", props.className)}\n    />\n  )\n})\n\nif (__DEV__) {\n  SliderMark.displayName = \"SliderMark\"\n}\n"],"file":"slider.js"}