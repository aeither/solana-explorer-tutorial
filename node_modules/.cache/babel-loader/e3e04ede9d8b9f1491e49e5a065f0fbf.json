{"ast":null,"code":"import _slicedToArray from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/lin/Documents/Projects/solana-explorer-tutorial/src/PriceCard.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport { abbreviatedNumber } from \"./utils/index\";\nimport { Button, Heading, Text, VStack } from \"@chakra-ui/react\"; // @ts-ignore\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var CoingeckoStatus;\n\n(function (CoingeckoStatus) {\n  CoingeckoStatus[CoingeckoStatus[\"Success\"] = 0] = \"Success\";\n  CoingeckoStatus[CoingeckoStatus[\"FetchFailed\"] = 1] = \"FetchFailed\";\n  CoingeckoStatus[CoingeckoStatus[\"Loading\"] = 2] = \"Loading\";\n})(CoingeckoStatus || (CoingeckoStatus = {}));\n\nexport default function PriceCard() {\n  _s();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      coinInfo = _useState2[0],\n      setCoinInfo = _useState2[1];\n\n  useEffect(function () {});\n\n  function Hello() {\n    console.log(\"Hello\");\n    var coinId = \"solana\";\n    fetch(\"https://api.coingecko.com/api/v3/coins/\".concat(coinId)).then(function (res) {\n      return res.json();\n    }).then(function (info) {\n      console.log(info);\n      setCoinInfo({\n        coinInfo: {\n          price: info.market_data.current_price.usd,\n          volume_24: info.market_data.total_volume.usd,\n          market_cap: info.market_data.market_cap.usd,\n          market_cap_rank: info.market_data.market_cap_rank,\n          price_change_percentage_24h: info.market_data.price_change_percentage_24h,\n          last_updated: new Date(info.last_updated)\n        },\n        status: CoingeckoStatus.Success\n      });\n    }).catch(function (error) {\n      setCoinInfo({\n        status: CoingeckoStatus.FetchFailed\n      });\n    }); // setSupply(supply);\n  }\n\n  var solanaInfo;\n\n  if (coinInfo && coinInfo.status === CoingeckoStatus.Success) {\n    solanaInfo = coinInfo.coinInfo;\n  }\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    align: \"start\",\n    background: \"white\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      size: \"md\",\n      children: \"Price Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: function onClick() {\n        return Hello();\n      },\n      children: \"Supply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), solanaInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Price\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 badge badge-primary rank\",\n          children: [\"Rank #\", solanaInfo.market_cap_rank]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"em\", {\n          children: [\"$\", solanaInfo.price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), \" \", solanaInfo.price_change_percentage_24h > 0 && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"change-positive\",\n          children: [\"\\u2191 \", solanaInfo.price_change_percentage_24h.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), solanaInfo.price_change_percentage_24h < 0 && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"change-negative\",\n          children: [\"\\u2193 \", solanaInfo.price_change_percentage_24h.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), solanaInfo.price_change_percentage_24h === 0 && /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"0%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"24h Vol: \", /*#__PURE__*/_jsxDEV(\"em\", {\n          children: [\"$\", abbreviatedNumber(solanaInfo.volume_24)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 22\n        }, this), \" MCap:\", \" \", /*#__PURE__*/_jsxDEV(\"em\", {\n          children: [\"$\", abbreviatedNumber(solanaInfo.market_cap)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PriceCard, \"nNlJe5aJga0sBLgQlqZtse8SpXw=\");\n\n_c = PriceCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PriceCard\");","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/src/PriceCard.tsx"],"names":["useEffect","useState","abbreviatedNumber","Button","Heading","Text","VStack","CoingeckoStatus","PriceCard","coinInfo","setCoinInfo","Hello","console","log","coinId","fetch","then","res","json","info","price","market_data","current_price","usd","volume_24","total_volume","market_cap","market_cap_rank","price_change_percentage_24h","last_updated","Date","status","Success","catch","error","FetchFailed","solanaInfo","toFixed"],"mappings":"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","sourcesContent":["import \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport { abbreviatedNumber } from \"./utils/index\";\nimport { Button, Heading, Text, VStack } from \"@chakra-ui/react\";\n// @ts-ignore\n\nexport interface CoinInfo {\n  price: number;\n  volume_24: number;\n  market_cap: number;\n  price_change_percentage_24h: number;\n  market_cap_rank: number;\n  last_updated: Date;\n}\n\nexport enum CoingeckoStatus {\n  Success,\n  FetchFailed,\n  Loading\n}\n\nexport type CoinGeckoResult = {\n  coinInfo?: CoinInfo;\n  status: CoingeckoStatus;\n};\n\nexport interface CoinInfoResult {\n  market_data: {\n    current_price: {\n      usd: number;\n    };\n    total_volume: {\n      usd: number;\n    };\n    market_cap: {\n      usd: number;\n    };\n    price_change_percentage_24h: number;\n    market_cap_rank: number;\n  };\n  last_updated: string;\n}\n\nexport default function PriceCard() {\n  const [coinInfo, setCoinInfo] = useState<CoinGeckoResult>();\n  useEffect(() => {});\n  function Hello() {\n    console.log(\"Hello\");\n    const coinId = \"solana\";\n    fetch(`https://api.coingecko.com/api/v3/coins/${coinId}`)\n      .then((res) => res.json())\n      .then((info: CoinInfoResult) => {\n        console.log(info);\n\n        setCoinInfo({\n          coinInfo: {\n            price: info.market_data.current_price.usd,\n            volume_24: info.market_data.total_volume.usd,\n            market_cap: info.market_data.market_cap.usd,\n            market_cap_rank: info.market_data.market_cap_rank,\n            price_change_percentage_24h:\n              info.market_data.price_change_percentage_24h,\n            last_updated: new Date(info.last_updated)\n          },\n          status: CoingeckoStatus.Success\n        });\n      })\n      .catch((error: any) => {\n        setCoinInfo({\n          status: CoingeckoStatus.FetchFailed\n        });\n      });\n    // setSupply(supply);\n  }\n\n  let solanaInfo;\n  if (coinInfo && coinInfo.status === CoingeckoStatus.Success) {\n    solanaInfo = coinInfo.coinInfo;\n  }\n\n  return (\n    <VStack align=\"start\" background=\"white\">\n      <Heading size=\"md\">Price Card</Heading>\n      <Button onClick={() => Hello()}>Supply</Button>\n      {solanaInfo && (\n        <>\n          <Text>\n            Price{\" \"}\n            <span className=\"ml-2 badge badge-primary rank\">\n              Rank #{solanaInfo.market_cap_rank}\n            </span>\n          </Text>\n          <h1>\n            <em>${solanaInfo.price.toFixed(2)}</em>{\" \"}\n            {solanaInfo.price_change_percentage_24h > 0 && (\n              <small className=\"change-positive\">\n                &uarr; {solanaInfo.price_change_percentage_24h.toFixed(2)}%\n              </small>\n            )}\n            {solanaInfo.price_change_percentage_24h < 0 && (\n              <small className=\"change-negative\">\n                &darr; {solanaInfo.price_change_percentage_24h.toFixed(2)}%\n              </small>\n            )}\n            {solanaInfo.price_change_percentage_24h === 0 && <small>0%</small>}\n          </h1>\n          <h5>\n            24h Vol: <em>${abbreviatedNumber(solanaInfo.volume_24)}</em> MCap:{\" \"}\n            <em>${abbreviatedNumber(solanaInfo.market_cap)}</em>\n          </h5>\n        </>\n      )}\n    </VStack>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}