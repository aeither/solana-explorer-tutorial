{"ast":null,"code":"import { isPoint } from './is-point.js';\nimport { isPoint3D } from './is-point-3d.js';\nimport { isNum } from './inc.js';\n\nvar distance1D = function distance1D(a, b) {\n  return Math.abs(a - b);\n};\n\nfunction distance(a, b) {\n  if (isNum(a) && isNum(b)) {\n    return distance1D(a, b);\n  } else if (isPoint(a) && isPoint(b)) {\n    var xDelta = distance1D(a.x, b.x);\n    var yDelta = distance1D(a.y, b.y);\n    var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n  }\n}\n\nexport { distance };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/popmotion/dist/es/utils/distance.js"],"names":["isPoint","isPoint3D","isNum","distance1D","a","b","Math","abs","distance","xDelta","x","yDelta","y","zDelta","z","sqrt","pow"],"mappings":"AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,QAAsB,UAAtB;;AAEA,IAAIC,UAAU,GAAG,SAAbA,UAAa,CAAUC,CAAV,EAAaC,CAAb,EAAgB;AAAE,SAAOC,IAAI,CAACC,GAAL,CAASH,CAAC,GAAGC,CAAb,CAAP;AAAyB,CAA5D;;AACA,SAASG,QAAT,CAAkBJ,CAAlB,EAAqBC,CAArB,EAAwB;AACpB,MAAIH,KAAK,CAACE,CAAD,CAAL,IAAYF,KAAK,CAACG,CAAD,CAArB,EAA0B;AACtB,WAAOF,UAAU,CAACC,CAAD,EAAIC,CAAJ,CAAjB;AACH,GAFD,MAGK,IAAIL,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACK,CAAD,CAAzB,EAA8B;AAC/B,QAAII,MAAM,GAAGN,UAAU,CAACC,CAAC,CAACM,CAAH,EAAML,CAAC,CAACK,CAAR,CAAvB;AACA,QAAIC,MAAM,GAAGR,UAAU,CAACC,CAAC,CAACQ,CAAH,EAAMP,CAAC,CAACO,CAAR,CAAvB;AACA,QAAIC,MAAM,GAAGZ,SAAS,CAACG,CAAD,CAAT,IAAgBH,SAAS,CAACI,CAAD,CAAzB,GAA+BF,UAAU,CAACC,CAAC,CAACU,CAAH,EAAMT,CAAC,CAACS,CAAR,CAAzC,GAAsD,CAAnE;AACA,WAAOR,IAAI,CAACS,IAAL,CAAUT,IAAI,CAACU,GAAL,CAASP,MAAT,EAAiB,CAAjB,IAAsBH,IAAI,CAACU,GAAL,CAASL,MAAT,EAAiB,CAAjB,CAAtB,GAA4CL,IAAI,CAACU,GAAL,CAASH,MAAT,EAAiB,CAAjB,CAAtD,CAAP;AACH;AACJ;;AAED,SAASL,QAAT","sourcesContent":["import { isPoint } from './is-point.js';\nimport { isPoint3D } from './is-point-3d.js';\nimport { isNum } from './inc.js';\n\nvar distance1D = function (a, b) { return Math.abs(a - b); };\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    }\n    else if (isPoint(a) && isPoint(b)) {\n        var xDelta = distance1D(a.x, b.x);\n        var yDelta = distance1D(a.y, b.y);\n        var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nexport { distance };\n"]},"metadata":{},"sourceType":"module"}