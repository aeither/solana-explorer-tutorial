{"ast":null,"code":"export function displayTimestampUtc(unixTimestamp) {\n  var shortTimeZoneName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var expireDate = new Date(unixTimestamp);\n  var dateString = new Intl.DateTimeFormat(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    timeZone: \"UTC\"\n  }).format(expireDate);\n  var timeString = new Intl.DateTimeFormat(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n    timeZone: \"UTC\",\n    timeZoneName: shortTimeZoneName ? \"short\" : \"long\"\n  }).format(expireDate);\n  return \"\".concat(dateString, \" at \").concat(timeString);\n}","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/src/utils/date.ts"],"names":["displayTimestampUtc","unixTimestamp","shortTimeZoneName","expireDate","Date","dateString","Intl","DateTimeFormat","year","month","day","timeZone","format","timeString","hour","minute","second","timeZoneName"],"mappings":"AAAA,OAAO,SAASA,mBAAT,CACLC,aADK,EAGG;AAAA,MADRC,iBACQ,uEADY,KACZ;AACR,MAAMC,UAAU,GAAG,IAAIC,IAAJ,CAASH,aAAT,CAAnB;AACA,MAAMI,UAAU,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAClDC,IAAAA,IAAI,EAAE,SAD4C;AAElDC,IAAAA,KAAK,EAAE,MAF2C;AAGlDC,IAAAA,GAAG,EAAE,SAH6C;AAIlDC,IAAAA,QAAQ,EAAE;AAJwC,GAAjC,EAKhBC,MALgB,CAKTT,UALS,CAAnB;AAMA,MAAMU,UAAU,GAAG,IAAIP,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAClDO,IAAAA,IAAI,EAAE,SAD4C;AAElDC,IAAAA,MAAM,EAAE,SAF0C;AAGlDC,IAAAA,MAAM,EAAE,SAH0C;AAIlDL,IAAAA,QAAQ,EAAE,KAJwC;AAKlDM,IAAAA,YAAY,EAAEf,iBAAiB,GAAG,OAAH,GAAa;AALM,GAAjC,EAMhBU,MANgB,CAMTT,UANS,CAAnB;AAOA,mBAAUE,UAAV,iBAA2BQ,UAA3B;AACD","sourcesContent":["export function displayTimestampUtc(\n  unixTimestamp: number,\n  shortTimeZoneName = false\n): string {\n  const expireDate = new Date(unixTimestamp);\n  const dateString = new Intl.DateTimeFormat(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    timeZone: \"UTC\"\n  }).format(expireDate);\n  const timeString = new Intl.DateTimeFormat(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n    timeZone: \"UTC\",\n    timeZoneName: shortTimeZoneName ? \"short\" : \"long\"\n  }).format(expireDate);\n  return `${dateString} at ${timeString}`;\n}\n"]},"metadata":{},"sourceType":"module"}