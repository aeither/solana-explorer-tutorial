{"ast":null,"code":"import { useMemo, useContext } from 'react';\nimport { MotionContext } from './index.js';\nimport { getCurrentTreeVariants } from './utils.js';\n\nfunction useCreateMotionContext(props, isStatic) {\n  var _a = getCurrentTreeVariants(props, useContext(MotionContext)),\n      initial = _a.initial,\n      animate = _a.animate;\n\n  return useMemo(function () {\n    return {\n      initial: initial,\n      animate: animate\n    };\n  },\n  /**\n   * Only break memoisation in static mode\n   */\n  isStatic ? [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)] : []);\n}\n\nfunction variantLabelsAsDependency(prop) {\n  return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/framer-motion/dist/es/context/MotionContext/create.js"],"names":["useMemo","useContext","MotionContext","getCurrentTreeVariants","useCreateMotionContext","props","isStatic","_a","initial","animate","variantLabelsAsDependency","prop","Array","isArray","join"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,SAASC,sBAAT,QAAuC,YAAvC;;AAEA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuCC,QAAvC,EAAiD;AAC7C,MAAIC,EAAE,GAAGJ,sBAAsB,CAACE,KAAD,EAAQJ,UAAU,CAACC,aAAD,CAAlB,CAA/B;AAAA,MAAmEM,OAAO,GAAGD,EAAE,CAACC,OAAhF;AAAA,MAAyFC,OAAO,GAAGF,EAAE,CAACE,OAAtG;;AACA,SAAOT,OAAO,CAAC,YAAY;AAAE,WAAQ;AAAEQ,MAAAA,OAAO,EAAEA,OAAX;AAAoBC,MAAAA,OAAO,EAAEA;AAA7B,KAAR;AAAkD,GAAjE;AACd;AACJ;AACA;AACIH,EAAAA,QAAQ,GACF,CACEI,yBAAyB,CAACF,OAAD,CAD3B,EAEEE,yBAAyB,CAACD,OAAD,CAF3B,CADE,GAKF,EATQ,CAAd;AAUH;;AACD,SAASC,yBAAT,CAAmCC,IAAnC,EAAyC;AACrC,SAAOC,KAAK,CAACC,OAAN,CAAcF,IAAd,IAAsBA,IAAI,CAACG,IAAL,CAAU,GAAV,CAAtB,GAAuCH,IAA9C;AACH;;AAED,SAASP,sBAAT","sourcesContent":["import { useMemo, useContext } from 'react';\nimport { MotionContext } from './index.js';\nimport { getCurrentTreeVariants } from './utils.js';\n\nfunction useCreateMotionContext(props, isStatic) {\n    var _a = getCurrentTreeVariants(props, useContext(MotionContext)), initial = _a.initial, animate = _a.animate;\n    return useMemo(function () { return ({ initial: initial, animate: animate }); }, \n    /**\n     * Only break memoisation in static mode\n     */\n    isStatic\n        ? [\n            variantLabelsAsDependency(initial),\n            variantLabelsAsDependency(animate),\n        ]\n        : []);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n"]},"metadata":{},"sourceType":"module"}