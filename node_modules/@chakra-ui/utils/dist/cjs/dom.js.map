{"version":3,"sources":["../../src/dom.ts"],"names":["isElement","el","nodeType","Node","ELEMENT_NODE","isHTMLElement","win","ownerDocument","defaultView","window","HTMLElement","getOwnerWindow","node","getOwnerDocument","document","getEventWindow","event","view","canUseDOM","createElement","isBrowser","dataAttr","condition","undefined","ariaAttr","cx","classNames","filter","Boolean","join","getActiveElement","doc","activeElement","contains","parent","child","addDomEvent","target","eventName","handler","options","addEventListener","removeEventListener","normalizeEventKey","key","keyCode","isArrowKey","indexOf","eventKey","getRelatedTarget","currentTarget","originalTarget","nativeEvent","explicitOriginalTarget","relatedTarget","isRightClick","button"],"mappings":";;;;;;;;;;;;;;;;;AAEO,SAASA,SAAT,CAAmBC,EAAnB,EAA2C;AAChD,SACEA,EAAE,IAAI,IAAN,IACA,OAAOA,EAAP,IAAa,QADb,IAEA,cAAcA,EAFd,IAGAA,EAAE,CAACC,QAAH,KAAgBC,IAAI,CAACC,YAJvB;AAMD;;AAEM,SAASC,aAAT,CAAuBJ,EAAvB,EAAmD;AAAA;;AACxD,MAAI,CAACD,SAAS,CAACC,EAAD,CAAd,EAAoB;AAClB,WAAO,KAAP;AACD;;AAED,MAAMK,GAAG,4BAAGL,EAAE,CAACM,aAAH,CAAiBC,WAApB,oCAAmCC,MAA5C;AACA,SAAOR,EAAE,YAAYK,GAAG,CAACI,WAAzB;AACD;;AAEM,SAASC,cAAT,CAAwBC,IAAxB,EAAkE;AAAA;;AACvE,SAAOZ,SAAS,CAACY,IAAD,CAAT,iDACHC,gBAAgB,CAACD,IAAD,CADb,qBACH,kBAAwBJ,WADrB,oCACoCC,MADpC,GAEHA,MAFJ;AAGD;;AAEM,SAASI,gBAAT,CAA0BD,IAA1B,EAA2D;AAAA;;AAChE,SAAOZ,SAAS,CAACY,IAAD,CAAT,0BAAkBA,IAAI,CAACL,aAAvB,kCAAwCO,QAAxC,GAAmDA,QAA1D;AACD;;AAEM,SAASC,cAAT,CAAwBC,KAAxB,EAAyD;AAAA;;AAC9D,kBAAUA,KAAD,CAAmBC,IAA5B,oBAAoCR,MAApC;AACD;;AAEM,SAASS,SAAT,GAA8B;AACnC,SAAO,CAAC,EACN,OAAOT,MAAP,KAAkB,WAAlB,IACAA,MAAM,CAACK,QADP,IAEAL,MAAM,CAACK,QAAP,CAAgBK,aAHV,CAAR;AAKD;;AAEM,IAAMC,SAAS,GAAGF,SAAS,EAA3B;;;AAEA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD;AAAA,SACrBA,SAAS,GAAG,EAAH,GAAQC,SADI;AAAA,CAAjB;;;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACF,SAAD;AAAA,SACtBA,SAAS,GAAG,IAAH,GAAUC,SADG;AAAA,CAAjB;;;;AAGA,IAAME,EAAE,GAAG,SAALA,EAAK;AAAA,oCAAIC,UAAJ;AAAIA,IAAAA,UAAJ;AAAA;;AAAA,SAA0BA,UAAU,CAACC,MAAX,CAAkBC,OAAlB,EAA2BC,IAA3B,CAAgC,GAAhC,CAA1B;AAAA,CAAX;;;;AAEA,SAASC,gBAAT,CAA0BlB,IAA1B,EAA8C;AACnD,MAAMmB,GAAG,GAAGlB,gBAAgB,CAACD,IAAD,CAA5B;AACA,SAAOmB,GAAP,oBAAOA,GAAG,CAAEC,aAAZ;AACD;;AAEM,SAASC,QAAT,CAAkBC,MAAlB,EAA8CC,KAA9C,EAAkE;AACvE,MAAI,CAACD,MAAL,EAAa,OAAO,KAAP;AACb,SAAOA,MAAM,KAAKC,KAAX,IAAoBD,MAAM,CAACD,QAAP,CAAgBE,KAAhB,CAA3B;AACD;;AAEM,SAASC,WAAT,CACLC,MADK,EAELC,SAFK,EAGLC,OAHK,EAILC,OAJK,EAKL;AACAH,EAAAA,MAAM,CAACI,gBAAP,CAAwBH,SAAxB,EAAmCC,OAAnC,EAA4CC,OAA5C;AACA,SAAO,YAAM;AACXH,IAAAA,MAAM,CAACK,mBAAP,CAA2BJ,SAA3B,EAAsCC,OAAtC,EAA+CC,OAA/C;AACD,GAFD;AAGD;AAED;AACA;AACA;AACA;;;AACO,SAASG,iBAAT,CACL3B,KADK,EAEL;AAAA,MACQ4B,GADR,GACyB5B,KADzB,CACQ4B,GADR;AAAA,MACaC,OADb,GACyB7B,KADzB,CACa6B,OADb;AAGA,MAAMC,UAAU,GACdD,OAAO,IAAI,EAAX,IAAiBA,OAAO,IAAI,EAA5B,IAAkCD,GAAG,CAACG,OAAJ,CAAY,OAAZ,MAAyB,CAD7D;AAGA,MAAMC,QAAQ,GAAGF,UAAU,aAAWF,GAAX,GAAmBA,GAA9C;AAEA,SAAOI,QAAP;AACD;;AAEM,SAASC,gBAAT,CACLjC,KADK,EAEL;AAAA;;AACA,MAAMqB,MAAM,oBAAIrB,KAAK,CAACqB,MAAV,4BAAoBrB,KAAK,CAACkC,aAAtC;AACA,MAAMlB,aAAa,GAAGF,gBAAgB,CAACO,MAAD,CAAtC;AACA,MAAMc,cAAc,GAAInC,KAAD,CAAeoC,WAAf,CAA2BC,sBAAlD;AACA,yCAAQrC,KAAK,CAACsC,aAAd,mCAA+BH,cAA/B,mBAAiDnB,aAAjD;AACD;;AAEM,SAASuB,YAAT,CAAsBvC,KAAtB,EAAkE;AACvE,SAAOA,KAAK,CAACwC,MAAN,KAAiB,CAAxB;AACD","sourcesContent":["import { Booleanish, EventKeys } from \"./types\"\n\nexport function isElement(el: any): el is Element {\n  return (\n    el != null &&\n    typeof el == \"object\" &&\n    \"nodeType\" in el &&\n    el.nodeType === Node.ELEMENT_NODE\n  )\n}\n\nexport function isHTMLElement(el: any): el is HTMLElement {\n  if (!isElement(el)) {\n    return false\n  }\n\n  const win = el.ownerDocument.defaultView ?? window\n  return el instanceof win.HTMLElement\n}\n\nexport function getOwnerWindow(node?: Element | null): typeof globalThis {\n  return isElement(node)\n    ? getOwnerDocument(node)?.defaultView ?? window\n    : window\n}\n\nexport function getOwnerDocument(node?: Element | null): Document {\n  return isElement(node) ? node.ownerDocument ?? document : document\n}\n\nexport function getEventWindow(event: Event): typeof globalThis {\n  return (((event as UIEvent).view ?? window) as unknown) as typeof globalThis\n}\n\nexport function canUseDOM(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n  )\n}\n\nexport const isBrowser = canUseDOM()\n\nexport const dataAttr = (condition: boolean | undefined) =>\n  (condition ? \"\" : undefined) as Booleanish\n\nexport const ariaAttr = (condition: boolean | undefined) =>\n  condition ? true : undefined\n\nexport const cx = (...classNames: any[]) => classNames.filter(Boolean).join(\" \")\n\nexport function getActiveElement(node?: HTMLElement) {\n  const doc = getOwnerDocument(node)\n  return doc?.activeElement as HTMLElement\n}\n\nexport function contains(parent: HTMLElement | null, child: HTMLElement) {\n  if (!parent) return false\n  return parent === child || parent.contains(child)\n}\n\nexport function addDomEvent(\n  target: EventTarget,\n  eventName: string,\n  handler: EventListener,\n  options?: AddEventListenerOptions,\n) {\n  target.addEventListener(eventName, handler, options)\n  return () => {\n    target.removeEventListener(eventName, handler, options)\n  }\n}\n\n/**\n * Get the normalized event key across all browsers\n * @param event keyboard event\n */\nexport function normalizeEventKey(\n  event: Pick<KeyboardEvent, \"key\" | \"keyCode\">,\n) {\n  const { key, keyCode } = event\n\n  const isArrowKey =\n    keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0\n\n  const eventKey = isArrowKey ? `Arrow${key}` : key\n\n  return eventKey as EventKeys\n}\n\nexport function getRelatedTarget(\n  event: Pick<FocusEvent, \"relatedTarget\" | \"target\" | \"currentTarget\">,\n) {\n  const target = (event.target ?? event.currentTarget) as HTMLElement\n  const activeElement = getActiveElement(target)\n  const originalTarget = (event as any).nativeEvent.explicitOriginalTarget\n  return (event.relatedTarget ?? originalTarget ?? activeElement) as HTMLElement\n}\n\nexport function isRightClick(event: Pick<MouseEvent, \"button\">): boolean {\n  return event.button !== 0\n}\n"],"file":"dom.js"}