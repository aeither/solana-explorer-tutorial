{"version":3,"sources":["../../src/use-force-update.ts"],"names":["useForceUpdate","unloadingRef","React","useRef","useState","count","setCount","current","useCallback"],"mappings":";;;;;AAAA;;AACA;;;;;;AAEO,SAASA,cAAT,GAA0B;AAC/B,MAAMC,YAAY,GAAGC,KAAK,CAACC,MAAN,CAAa,KAAb,CAArB;;AAD+B,wBAELD,KAAK,CAACE,QAAN,CAAe,CAAf,CAFK;AAAA,MAExBC,KAFwB;AAAA,MAEjBC,QAFiB;;AAI/B,0CAAiB,YAAM;AACrBL,IAAAA,YAAY,CAACM,OAAb,GAAuB,IAAvB;AACD,GAFD;AAIA,SAAOL,KAAK,CAACM,WAAN,CAAkB,YAAM;AAC7B,QAAI,CAACP,YAAY,CAACM,OAAlB,EAA2B;AACzBD,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;AACF,GAJM,EAIJ,CAACA,KAAD,CAJI,CAAP;AAKD","sourcesContent":["import * as React from \"react\"\nimport { useUnmountEffect } from \"./use-unmount-effect\"\n\nexport function useForceUpdate() {\n  const unloadingRef = React.useRef(false)\n  const [count, setCount] = React.useState(0)\n\n  useUnmountEffect(() => {\n    unloadingRef.current = true\n  })\n\n  return React.useCallback(() => {\n    if (!unloadingRef.current) {\n      setCount(count + 1)\n    }\n  }, [count])\n}\n"],"file":"use-force-update.js"}