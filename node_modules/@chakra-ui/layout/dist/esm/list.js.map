{"version":3,"sources":["../../src/list.tsx"],"names":["Icon","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","StylesProvider","useStyles","__DEV__","getValidChildren","React","List","props","ref","styles","children","styleType","stylePosition","spacing","rest","validChildren","selector","spacingStyle","mt","container","displayName","OrderedList","UnorderedList","ListItem","item","ListIcon","icon"],"mappings":"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","sourcesContent":["import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport {\n  chakra,\n  SystemProps,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  StylesProvider,\n  useStyles,\n} from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport { getValidChildren } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\n\ninterface ListOptions {\n  /**\n   * Short hand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Short hand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <StylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </StylesProvider>\n  )\n})\n\nif (__DEV__) {\n  List.displayName = \"List\"\n}\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nif (__DEV__) {\n  OrderedList.displayName = \"OrderedList\"\n}\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nif (__DEV__) {\n  UnorderedList.displayName = \"UnorderedList\"\n}\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">((props, ref) => {\n  const styles = useStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nif (__DEV__) {\n  ListItem.displayName = \"ListItem\"\n}\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">((props, ref) => {\n  const styles = useStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nif (__DEV__) {\n  ListIcon.displayName = \"ListIcon\"\n}\n"],"file":"list.js"}