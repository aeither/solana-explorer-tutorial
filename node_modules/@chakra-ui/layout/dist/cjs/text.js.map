{"version":3,"sources":["../../src/text.tsx"],"names":["Text","props","ref","styles","className","align","decoration","casing","rest","aliasedProps","textAlign","textDecoration","textTransform","__DEV__","displayName"],"mappings":";;;;;AAAA;;AASA;;AACA;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACO,IAAMA,IAAI,gBAAG,wBAA2B,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC7D,MAAMC,MAAM,GAAG,4BAAe,MAAf,EAAuBF,KAAvB,CAAf;;AAD6D,0BAEH,8BACxDA,KADwD,CAFG;AAAA,MAErDG,SAFqD,qBAErDA,SAFqD;AAAA,MAE1CC,KAF0C,qBAE1CA,KAF0C;AAAA,MAEnCC,UAFmC,qBAEnCA,UAFmC;AAAA,MAEvBC,MAFuB,qBAEvBA,MAFuB;AAAA,MAEZC,IAFY;;AAM7D,MAAMC,YAAY,GAAG,4BAAgB;AACnCC,IAAAA,SAAS,EAAET,KAAK,CAACI,KADkB;AAEnCM,IAAAA,cAAc,EAAEV,KAAK,CAACK,UAFa;AAGnCM,IAAAA,aAAa,EAAEX,KAAK,CAACM;AAHc,GAAhB,CAArB;AAMA,sBACE,oBAAC,cAAD,CAAQ,CAAR;AACE,IAAA,GAAG,EAAEL,GADP;AAEE,IAAA,SAAS,EAAE,eAAG,aAAH,EAAkBD,KAAK,CAACG,SAAxB;AAFb,KAGMK,YAHN,EAIMD,IAJN;AAKE,IAAA,KAAK,EAAEL;AALT,KADF;AASD,CArBmB,CAAb;;;AAuBP,IAAIU,cAAJ,EAAa;AACXb,EAAAA,IAAI,CAACc,WAAL,GAAmB,MAAnB;AACD","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__, filterUndefined } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">((props, ref) => {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(\n    props,\n  )\n\n  const aliasedProps = filterUndefined({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nif (__DEV__) {\n  Text.displayName = \"Text\"\n}\n"],"file":"text.js"}