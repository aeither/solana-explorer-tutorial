{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { Icon } from \"@chakra-ui/icon\";\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * The tag component is used to label or categorize UI elements.\n * To style the tag globally, change the styles in `theme.components.Tag`\n * @see Docs https://chakra-ui.com/tag\n */\n\nexport var Tag = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Tag\", props);\n  var ownProps = omitThemingProps(props);\n\n  var containerStyles = _extends({\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\"\n  }, styles.container);\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref\n  }, ownProps, {\n    __css: containerStyles\n  })));\n});\n\nif (__DEV__) {\n  Tag.displayName = \"Tag\";\n}\n\nexport var TagLabel = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    isTruncated: true\n  }, props, {\n    __css: styles.label\n  }));\n});\n\nif (__DEV__) {\n  TagLabel.displayName = \"TagLabel\";\n}\n\nexport var TagLeftIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    verticalAlign: \"top\",\n    marginEnd: \"0.5rem\"\n  }, props));\n});\n\nif (__DEV__) {\n  TagLeftIcon.displayName = \"TagLeftIcon\";\n}\n\nexport var TagRightIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    verticalAlign: \"top\",\n    marginStart: \"0.5rem\"\n  }, props));\n});\n\nif (__DEV__) {\n  TagRightIcon.displayName = \"TagRightIcon\";\n}\n\nvar TagCloseIcon = function TagCloseIcon(props) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    verticalAlign: \"inherit\",\n    viewBox: \"0 0 512 512\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n  }));\n};\n\nif (__DEV__) {\n  TagCloseIcon.displayName = \"TagCloseIcon\";\n}\n/**\n * TagCloseButton is used to close \"remove\" the tag\n * @see Docs https://chakra-ui.com/tag\n */\n\n\nexport var TagCloseButton = function TagCloseButton(props) {\n  var isDisabled = props.isDisabled,\n      children = props.children,\n      rest = _objectWithoutPropertiesLoose(props, [\"isDisabled\", \"children\"]);\n\n  var styles = useStyles();\n\n  var btnStyles = _extends({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    outline: \"0\"\n  }, styles.closeButton);\n\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({}, rest, {\n    type: \"button\",\n    \"aria-label\": \"close\",\n    disabled: isDisabled,\n    __css: btnStyles\n  }), children || /*#__PURE__*/React.createElement(TagCloseIcon, null));\n};\n\nif (__DEV__) {\n  TagCloseButton.displayName = \"TagCloseButton\";\n}","map":{"version":3,"sources":["../../src/tag.tsx"],"names":["Tag","forwardRef","styles","useMultiStyleConfig","ownProps","omitThemingProps","containerStyles","display","verticalAlign","alignItems","maxWidth","ref","TagLabel","useStyles","label","TagLeftIcon","TagRightIcon","TagCloseIcon","props","TagCloseButton","children","btnStyles","justifyContent","outline"],"mappings":"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","sourcesContent":["import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface TagProps\n  extends HTMLChakraProps<\"span\">,\n    ThemingProps<\"Tag\"> {}\n\n/**\n * The tag component is used to label or categorize UI elements.\n * To style the tag globally, change the styles in `theme.components.Tag`\n * @see Docs https://chakra-ui.com/tag\n */\nexport const Tag = forwardRef<TagProps, \"span\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tag\", props)\n  const ownProps = omitThemingProps(props)\n\n  const containerStyles: SystemStyleObject = {\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n    ...styles.container,\n  }\n\n  return (\n    <StylesProvider value={styles}>\n      <chakra.span ref={ref} {...ownProps} __css={containerStyles} />\n    </StylesProvider>\n  )\n})\n\nif (__DEV__) {\n  Tag.displayName = \"Tag\"\n}\n\nexport interface TagLabelProps extends HTMLChakraProps<\"span\"> {}\n\nexport const TagLabel = forwardRef<TagLabelProps, \"span\">((props, ref) => {\n  const styles = useStyles()\n  return <chakra.span ref={ref} isTruncated {...props} __css={styles.label} />\n})\n\nif (__DEV__) {\n  TagLabel.displayName = \"TagLabel\"\n}\n\nexport const TagLeftIcon = forwardRef<IconProps, \"svg\">((props, ref) => (\n  <Icon ref={ref} verticalAlign=\"top\" marginEnd=\"0.5rem\" {...props} />\n))\n\nif (__DEV__) {\n  TagLeftIcon.displayName = \"TagLeftIcon\"\n}\n\nexport const TagRightIcon = forwardRef<IconProps, \"svg\">((props, ref) => (\n  <Icon ref={ref} verticalAlign=\"top\" marginStart=\"0.5rem\" {...props} />\n))\n\nif (__DEV__) {\n  TagRightIcon.displayName = \"TagRightIcon\"\n}\n\nconst TagCloseIcon: React.FC<IconProps> = (props) => (\n  <Icon verticalAlign=\"inherit\" viewBox=\"0 0 512 512\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n    />\n  </Icon>\n)\n\nif (__DEV__) {\n  TagCloseIcon.displayName = \"TagCloseIcon\"\n}\n\nexport interface TagCloseButtonProps\n  extends Omit<HTMLChakraProps<\"button\">, \"disabled\"> {\n  isDisabled?: boolean\n}\n\n/**\n * TagCloseButton is used to close \"remove\" the tag\n * @see Docs https://chakra-ui.com/tag\n */\nexport const TagCloseButton: React.FC<TagCloseButtonProps> = (props) => {\n  const { isDisabled, children, ...rest } = props\n\n  const styles = useStyles()\n\n  const btnStyles: SystemStyleObject = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    outline: \"0\",\n    ...styles.closeButton,\n  }\n\n  return (\n    <chakra.button\n      {...rest}\n      type=\"button\"\n      aria-label=\"close\"\n      disabled={isDisabled}\n      __css={btnStyles}\n    >\n      {children || <TagCloseIcon />}\n    </chakra.button>\n  )\n}\n\nif (__DEV__) {\n  TagCloseButton.displayName = \"TagCloseButton\"\n}\n"]},"metadata":{},"sourceType":"module"}