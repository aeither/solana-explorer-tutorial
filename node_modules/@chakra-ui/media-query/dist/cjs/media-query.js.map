{"version":3,"sources":["../../src/media-query.tsx"],"names":["Visibility","props","breakpoint","hide","children","show","isVisible","rendered","Hide","query","useQuery","__DEV__","displayName","Show","getBreakpoint","theme","value","below","above","bpBelow","bpAbove"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,UAAqC,GAAG,SAAxCA,UAAwC,CAACC,KAAD,EAAW;AAAA,MAC/CC,UAD+C,GAChBD,KADgB,CAC/CC,UAD+C;AAAA,MACnCC,IADmC,GAChBF,KADgB,CACnCE,IADmC;AAAA,MAC7BC,QAD6B,GAChBH,KADgB,CAC7BG,QAD6B;;AAAA,uBAExC,mCAAcF,UAAd,CAFwC;AAAA,MAEhDG,IAFgD;;AAGvD,MAAMC,SAAS,GAAGH,IAAI,GAAG,CAACE,IAAJ,GAAWA,IAAjC;AAEA,MAAME,QAAQ,GAAGD,SAAS,GAAGF,QAAH,GAAc,IAAxC;AACA,SAAOG,QAAP;AACD,CAPD;;AAWO,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,CAACP,KAAD,EAAW;AAAA,MAC1CG,QAD0C,GAC7BH,KAD6B,CAC1CG,QAD0C;AAElD,MAAMK,KAAK,GAAGC,QAAQ,CAACT,KAAD,CAAtB;AACA,sBACE,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEQ,KAAxB;AAA+B,IAAA,IAAI;AAAnC,KACGL,QADH,CADF;AAKD,CARM;;;;AAUP,IAAIO,cAAJ,EAAa;AACXH,EAAAA,IAAI,CAACI,WAAL,GAAmB,MAAnB;AACD;;AASM,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,CAACZ,KAAD,EAAW;AAAA,MAC1CG,QAD0C,GAC7BH,KAD6B,CAC1CG,QAD0C;AAElD,MAAMK,KAAK,GAAGC,QAAQ,CAACT,KAAD,CAAtB;AACA,sBAAO,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEQ;AAAxB,KAAgCL,QAAhC,CAAP;AACD,CAJM;;;;AAMP,IAAIO,cAAJ,EAAa;AACXE,EAAAA,IAAI,CAACD,WAAL,GAAmB,MAAnB;AACD;;AAED,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAcC,KAAd;AAAA,SACpB,wBAAID,KAAJ,mBAA0BC,KAA1B,EAAmCA,KAAnC,CADoB;AAAA,CAAtB;;AASO,SAASN,QAAT,CAAkBT,KAAlB,EAAwC;AAAA,0BACHA,KADG,CACrCC,UADqC;AAAA,MACrCA,UADqC,kCACxB,EADwB;AAAA,MACpBe,KADoB,GACHhB,KADG,CACpBgB,KADoB;AAAA,MACbC,KADa,GACHjB,KADG,CACbiB,KADa;AAG7C,MAAMH,KAAK,GAAG,uBAAd;AACA,MAAMI,OAAO,GAAGL,aAAa,CAACC,KAAD,EAAQE,KAAR,CAA7B;AACA,MAAMG,OAAO,GAAGN,aAAa,CAACC,KAAD,EAAQG,KAAR,CAA7B;AAEA,MAAIT,KAAK,GAAGP,UAAZ;;AAEA,MAAIiB,OAAJ,EAAa;AACXV,IAAAA,KAAK,oBAAkBU,OAAlB,MAAL;AACD,GAFD,MAEO,IAAIC,OAAJ,EAAa;AAClBX,IAAAA,KAAK,oBAAkBW,OAAlB,MAAL;AACD;;AAED,SAAOX,KAAP;AACD","sourcesContent":["import { useTheme } from \"@chakra-ui/system\"\nimport { Dict, memoizedGet as get, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { useMediaQuery } from \"./use-media-query\"\n\ninterface VisibilityProps {\n  breakpoint: string\n  hide?: boolean\n  children: React.ReactNode\n}\n\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\nconst Visibility: React.FC<VisibilityProps> = (props) => {\n  const { breakpoint, hide, children } = props\n  const [show] = useMediaQuery(breakpoint)\n  const isVisible = hide ? !show : show\n\n  const rendered = isVisible ? children : null\n  return rendered as React.ReactElement\n}\n\nexport type HideProps = ShowProps\n\nexport const Hide: React.FC<HideProps> = (props) => {\n  const { children } = props\n  const query = useQuery(props)\n  return (\n    <Visibility breakpoint={query} hide>\n      {children}\n    </Visibility>\n  )\n}\n\nif (__DEV__) {\n  Hide.displayName = \"Hide\"\n}\n\nexport interface ShowProps {\n  breakpoint?: string\n  below?: string\n  above?: string\n  children?: React.ReactNode\n}\n\nexport const Show: React.FC<ShowProps> = (props) => {\n  const { children } = props\n  const query = useQuery(props)\n  return <Visibility breakpoint={query}>{children}</Visibility>\n}\n\nif (__DEV__) {\n  Show.displayName = \"Show\"\n}\n\nconst getBreakpoint = (theme: Dict, value: any) =>\n  get(theme, `breakpoints.${value}`, value)\n\nexport interface UseQueryProps {\n  breakpoint?: string\n  below?: string\n  above?: string\n}\n\nexport function useQuery(props: UseQueryProps) {\n  const { breakpoint = \"\", below, above } = props\n\n  const theme = useTheme()\n  const bpBelow = getBreakpoint(theme, below)\n  const bpAbove = getBreakpoint(theme, above)\n\n  let query = breakpoint\n\n  if (bpBelow) {\n    query = `(max-width: ${bpBelow})`\n  } else if (bpAbove) {\n    query = `(min-width: ${bpAbove})`\n  }\n\n  return query\n}\n"],"file":"media-query.js"}