{"ast":null,"code":"import { __read } from 'tslib';\nimport { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.js';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.js';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { createAnimationState } from '../../render/utils/animation-state.js';\nimport { AnimationType } from '../../render/utils/types.js';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.js';\nvar animations = {\n  animation: makeRenderlessComponent(function (_a) {\n    var visualElement = _a.visualElement,\n        animate = _a.animate;\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n\n    visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n\n    if (isAnimationControls(animate)) {\n      useEffect(function () {\n        return animate.subscribe(visualElement);\n      }, [animate]);\n    }\n  }),\n  exit: makeRenderlessComponent(function (props) {\n    var custom = props.custom,\n        visualElement = props.visualElement;\n\n    var _a = __read(usePresence(), 2),\n        isPresent = _a[0],\n        onExitComplete = _a[1];\n\n    var presenceContext = useContext(PresenceContext);\n    useEffect(function () {\n      var _a, _b;\n\n      var animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Exit, !isPresent, {\n        custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom\n      });\n      !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(onExitComplete));\n    }, [isPresent]);\n  })\n};\nexport { animations };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/framer-motion/dist/es/motion/features/animations.js"],"names":["__read","useEffect","useContext","isAnimationControls","usePresence","PresenceContext","createAnimationState","AnimationType","makeRenderlessComponent","animations","animation","_a","visualElement","animate","animationState","subscribe","exit","props","custom","isPresent","onExitComplete","presenceContext","_b","setActive","Exit","then"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SAASC,mBAAT,QAAoC,gDAApC;AACA,SAASC,WAAT,QAA4B,kDAA5B;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,oBAAT,QAAqC,uCAArC;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,uBAAT,QAAwC,uCAAxC;AAEA,IAAIC,UAAU,GAAG;AACbC,EAAAA,SAAS,EAAEF,uBAAuB,CAAC,UAAUG,EAAV,EAAc;AAC7C,QAAIC,aAAa,GAAGD,EAAE,CAACC,aAAvB;AAAA,QAAsCC,OAAO,GAAGF,EAAE,CAACE,OAAnD;AACA;AACR;AACA;AACA;AACA;;AACQD,IAAAA,aAAa,CAACE,cAAd,KAAiCF,aAAa,CAACE,cAAd,GAA+BR,oBAAoB,CAACM,aAAD,CAApF;AACA;AACR;AACA;;AACQ,QAAIT,mBAAmB,CAACU,OAAD,CAAvB,EAAkC;AAC9BZ,MAAAA,SAAS,CAAC,YAAY;AAAE,eAAOY,OAAO,CAACE,SAAR,CAAkBH,aAAlB,CAAP;AAA0C,OAAzD,EAA2D,CAACC,OAAD,CAA3D,CAAT;AACH;AACJ,GAdiC,CADrB;AAgBbG,EAAAA,IAAI,EAAER,uBAAuB,CAAC,UAAUS,KAAV,EAAiB;AAC3C,QAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,QAA2BN,aAAa,GAAGK,KAAK,CAACL,aAAjD;;AACA,QAAID,EAAE,GAAGX,MAAM,CAACI,WAAW,EAAZ,EAAgB,CAAhB,CAAf;AAAA,QAAmCe,SAAS,GAAGR,EAAE,CAAC,CAAD,CAAjD;AAAA,QAAsDS,cAAc,GAAGT,EAAE,CAAC,CAAD,CAAzE;;AACA,QAAIU,eAAe,GAAGnB,UAAU,CAACG,eAAD,CAAhC;AACAJ,IAAAA,SAAS,CAAC,YAAY;AAClB,UAAIU,EAAJ,EAAQW,EAAR;;AACA,UAAIZ,SAAS,GAAG,CAACC,EAAE,GAAGC,aAAa,CAACE,cAApB,MAAwC,IAAxC,IAAgDH,EAAE,KAAK,KAAK,CAA5D,GAAgE,KAAK,CAArE,GAAyEA,EAAE,CAACY,SAAH,CAAahB,aAAa,CAACiB,IAA3B,EAAiC,CAACL,SAAlC,EAA6C;AAAED,QAAAA,MAAM,EAAE,CAACI,EAAE,GAAGD,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,eAAe,CAACH,MAAxF,MAAoG,IAApG,IAA4GI,EAAE,KAAK,KAAK,CAAxH,GAA4HA,EAA5H,GAAiIJ;AAA3I,OAA7C,CAAzF;AACA,OAACC,SAAD,KAAeT,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACe,IAAV,CAAeL,cAAf,CAArE;AACH,KAJQ,EAIN,CAACD,SAAD,CAJM,CAAT;AAKH,GAT4B;AAhBhB,CAAjB;AA4BA,SAASV,UAAT","sourcesContent":["import { __read } from 'tslib';\nimport { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.js';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.js';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { createAnimationState } from '../../render/utils/animation-state.js';\nimport { AnimationType } from '../../render/utils/types.js';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.js';\n\nvar animations = {\n    animation: makeRenderlessComponent(function (_a) {\n        var visualElement = _a.visualElement, animate = _a.animate;\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(function () { return animate.subscribe(visualElement); }, [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent(function (props) {\n        var custom = props.custom, visualElement = props.visualElement;\n        var _a = __read(usePresence(), 2), isPresent = _a[0], onExitComplete = _a[1];\n        var presenceContext = useContext(PresenceContext);\n        useEffect(function () {\n            var _a, _b;\n            var animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });\n            !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(onExitComplete));\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n"]},"metadata":{},"sourceType":"module"}