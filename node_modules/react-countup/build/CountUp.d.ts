import React, { Component, CSSProperties } from 'react';
import { CountUp as CountUpJs } from 'countup.js';
import { CallbackProps, CommonProps, RenderCounterProps } from './types';
export interface CountUpProps extends CommonProps, CallbackProps {
    className?: string;
    redraw?: boolean;
    preserveValue?: boolean;
    children?: (props: RenderCounterProps) => React.ReactNode;
    style?: CSSProperties;
}
declare class CountUp extends Component<CountUpProps> {
    private instance;
    private timeoutId;
    static defaultProps: {
        redraw: boolean;
        style: undefined;
        preserveValue: boolean;
        decimal: string;
        delay: null;
        prefix: string;
        suffix: string;
        start: number;
    };
    componentDidMount(): void;
    checkProps: (updatedProps: CountUpProps) => boolean | undefined;
    shouldComponentUpdate(nextProps: CountUpProps): boolean;
    componentDidUpdate(prevProps: CountUpProps): void;
    componentWillUnmount(): void;
    createInstance: () => CountUpJs | undefined;
    pauseResume: () => void;
    reset: () => void;
    restart: () => void;
    start: () => void;
    update: (newEnd: string | number) => void;
    containerRef: React.RefObject<any>;
    render(): React.ReactNode;
}
export default CountUp;
