{"version":3,"sources":["../../src/use-event-callback.ts"],"names":["useEventCallback","callback","ref","React","useRef","current","useCallback","event","args"],"mappings":";;;;;AAAA;;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,gBAAT,CACLC,QADK,EAEL;AACA,MAAMC,GAAG,GAAGC,KAAK,CAACC,MAAN,CAAaH,QAAb,CAAZ;AACA,gDAAoB,YAAM;AACxBC,IAAAA,GAAG,CAACG,OAAJ,GAAcJ,QAAd;AACD,GAFD;AAGA,SAAOE,KAAK,CAACG,WAAN,CACL,UAACC,KAAD;AAAA,sCAAcC,IAAd;AAAcA,MAAAA,IAAd;AAAA;;AAAA,WAA8BN,GAAG,CAACG,OAAJ,OAAAH,GAAG,GAASK,KAAT,SAAmBC,IAAnB,EAAjC;AAAA,GADK,EAEL,EAFK,CAAP;AAID","sourcesContent":["import * as React from \"react\"\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\"\n\n/**\n * React hook for performant `useCallbacks`\n *\n * @see https://github.com/facebook/react/issues/14099#issuecomment-440013892\n *\n * @deprecated Use `useCallbackRef` instead. `useEventCallback` will be removed\n * in a future version.\n */\nexport function useEventCallback<E extends Event | React.SyntheticEvent>(\n  callback: (event: E, ...args: any[]) => void,\n) {\n  const ref = React.useRef(callback)\n  useSafeLayoutEffect(() => {\n    ref.current = callback\n  })\n  return React.useCallback(\n    (event: E, ...args: any[]) => ref.current(event, ...args),\n    [],\n  )\n}\n"],"file":"use-event-callback.js"}