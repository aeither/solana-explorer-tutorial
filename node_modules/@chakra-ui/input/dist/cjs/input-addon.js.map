{"version":3,"sources":["../../src/input-addon.tsx"],"names":["placements","left","marginEnd","borderEndRadius","borderEndColor","right","marginStart","borderStartRadius","borderStartColor","StyledAddon","baseStyle","flex","width","display","alignItems","whiteSpace","InputAddon","props","ref","placement","rest","placementStyles","styles","addon","__DEV__","displayName","InputLeftAddon","className","id","InputRightAddon"],"mappings":";;;;;AAAA;;AAMA;;AACA;;;;;;;;;;AAIA,IAAMA,UAAU,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,MADP;AAEJC,IAAAA,eAAe,EAAE,CAFb;AAGJC,IAAAA,cAAc,EAAE;AAHZ,GADW;AAMjBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE,MADR;AAELC,IAAAA,iBAAiB,EAAE,CAFd;AAGLC,IAAAA,gBAAgB,EAAE;AAHb;AANU,CAAnB;AAaA,IAAMC,WAAW,GAAG,oBAAO,KAAP,EAAc;AAChCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,UADG;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,OAAO,EAAE,MAHA;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,UAAU,EAAE;AALH;AADqB,CAAd,CAApB;;AAcA;AACA;AACA;AACA;AACA;AACO,IAAMC,UAAU,gBAAG,wBAAmC,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAAA;;AAAA,yBACnCD,KADmC,CACnEE,SADmE;AAAA,MACnEA,SADmE,iCACvD,MADuD;AAAA,MAC5CC,IAD4C,iCACnCH,KADmC;;AAE3E,MAAMI,eAAe,4BAAGrB,UAAU,CAACmB,SAAD,CAAb,oCAA4B,EAAjD;AACA,MAAMG,MAAM,GAAG,wBAAf;AAEA,sBACE,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEJ;AADP,KAEME,IAFN;AAGE,IAAA,KAAK,eACAE,MAAM,CAACC,KADP,EAEAF,eAFA;AAHP,KADF;AAUD,CAfyB,CAAnB;;;AAiBP,IAAIG,cAAJ,EAAa;AACXR,EAAAA,UAAU,CAACS,WAAX,GAAyB,YAAzB;AACD;AAED;AACA;AACA;AACA;AACA;;;AACO,IAAMC,cAAc,gBAAG,wBAC5B,UAACT,KAAD,EAAQC,GAAR;AAAA,sBACE,oBAAC,UAAD;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,SAAS,EAAC;AAFZ,KAGMD,KAHN;AAIE,IAAA,SAAS,EAAE,eAAG,0BAAH,EAA+BA,KAAK,CAACU,SAArC;AAJb,KADF;AAAA,CAD4B,CAAvB;;;AAWP,IAAIH,cAAJ,EAAa;AACXE,EAAAA,cAAc,CAACD,WAAf,GAA6B,gBAA7B;AACD,C,CAED;;;AACAC,cAAc,CAACE,EAAf,GAAoB,gBAApB;AAEA;AACA;AACA;AACA;AACA;;AACO,IAAMC,eAAe,gBAAG,wBAC7B,UAACZ,KAAD,EAAQC,GAAR;AAAA,sBACE,oBAAC,UAAD;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,SAAS,EAAC;AAFZ,KAGMD,KAHN;AAIE,IAAA,SAAS,EAAE,eAAG,2BAAH,EAAgCA,KAAK,CAACU,SAAtC;AAJb,KADF;AAAA,CAD6B,CAAxB;;;AAWP,IAAIH,cAAJ,EAAa;AACXK,EAAAA,eAAe,CAACJ,WAAhB,GAA8B,iBAA9B;AACD,C,CAED;;;AACAI,eAAe,CAACD,EAAhB,GAAqB,iBAArB","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\ntype Placement = \"left\" | \"right\"\n\nconst placements = {\n  left: {\n    marginEnd: \"-1px\",\n    borderEndRadius: 0,\n    borderEndColor: \"transparent\",\n  },\n  right: {\n    marginStart: \"-1px\",\n    borderStartRadius: 0,\n    borderStartColor: \"transparent\",\n  },\n}\n\nconst StyledAddon = chakra(\"div\", {\n  baseStyle: {\n    flex: \"0 0 auto\",\n    width: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    whiteSpace: \"nowrap\",\n  },\n})\n\nexport interface InputAddonProps extends HTMLChakraProps<\"div\"> {\n  placement?: Placement\n}\n\n/**\n * InputAddon\n *\n * Element to append or prepend to an input\n */\nexport const InputAddon = forwardRef<InputAddonProps, \"div\">((props, ref) => {\n  const { placement = \"left\", ...rest } = props\n  const placementStyles = placements[placement] ?? {}\n  const styles = useStyles()\n\n  return (\n    <StyledAddon\n      ref={ref}\n      {...rest}\n      __css={{\n        ...styles.addon,\n        ...placementStyles,\n      }}\n    />\n  )\n})\n\nif (__DEV__) {\n  InputAddon.displayName = \"InputAddon\"\n}\n\n/**\n * InputLeftAddon\n *\n * Element to append to the left of an input\n */\nexport const InputLeftAddon = forwardRef<InputAddonProps, \"div\">(\n  (props, ref) => (\n    <InputAddon\n      ref={ref}\n      placement=\"left\"\n      {...props}\n      className={cx(\"chakra-input__left-addon\", props.className)}\n    />\n  ),\n)\n\nif (__DEV__) {\n  InputLeftAddon.displayName = \"InputLeftAddon\"\n}\n\n// This is used in `input-group.tsx`\nInputLeftAddon.id = \"InputLeftAddon\"\n\n/**\n * InputRightAddon\n *\n * Element to append to the right of an input\n */\nexport const InputRightAddon = forwardRef<InputAddonProps, \"div\">(\n  (props, ref) => (\n    <InputAddon\n      ref={ref}\n      placement=\"right\"\n      {...props}\n      className={cx(\"chakra-input__right-addon\", props.className)}\n    />\n  ),\n)\n\nif (__DEV__) {\n  InputRightAddon.displayName = \"InputRightAddon\"\n}\n\n// This is used in `input-group.tsx`\nInputRightAddon.id = \"InputRightAddon\"\n"],"file":"input-addon.js"}