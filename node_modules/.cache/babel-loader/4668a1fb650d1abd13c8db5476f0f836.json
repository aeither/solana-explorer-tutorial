{"ast":null,"code":"import { __assign } from 'tslib';\nimport { isMouseEvent, isTouchEvent } from './utils/event-type.js';\nimport { extractEventInfo } from '../events/event-info.js';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.js';\nimport { addPointerEvent } from '../events/use-pointer-event.js';\nimport { distance, pipe } from 'popmotion';\n/**\n * @internal\n */\n\nvar PanSession = function () {\n  function PanSession(event, handlers, _a) {\n    var _this = this;\n\n    var _b = _a === void 0 ? {} : _a,\n        transformPagePoint = _b.transformPagePoint;\n    /**\n     * @internal\n     */\n\n\n    this.startEvent = null;\n    /**\n     * @internal\n     */\n\n    this.lastMoveEvent = null;\n    /**\n     * @internal\n     */\n\n    this.lastMoveEventInfo = null;\n    /**\n     * @internal\n     */\n\n    this.handlers = {};\n\n    this.updatePoint = function () {\n      if (!(_this.lastMoveEvent && _this.lastMoveEventInfo)) return;\n      var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\n      var isPanStarted = _this.startEvent !== null; // Only start panning if the offset is larger than 3 pixels. If we make it\n      // any larger than this we'll want to reset the pointer history\n      // on the first update to avoid visual snapping to the cursoe.\n\n      var isDistancePastThreshold = distance(info.offset, {\n        x: 0,\n        y: 0\n      }) >= 3;\n      if (!isPanStarted && !isDistancePastThreshold) return;\n      var point = info.point;\n      var timestamp = getFrameData().timestamp;\n\n      _this.history.push(__assign(__assign({}, point), {\n        timestamp: timestamp\n      }));\n\n      var _a = _this.handlers,\n          onStart = _a.onStart,\n          onMove = _a.onMove;\n\n      if (!isPanStarted) {\n        onStart && onStart(_this.lastMoveEvent, info);\n        _this.startEvent = _this.lastMoveEvent;\n      }\n\n      onMove && onMove(_this.lastMoveEvent, info);\n    };\n\n    this.handlePointerMove = function (event, info) {\n      _this.lastMoveEvent = event;\n      _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint); // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n\n      if (isMouseEvent(event) && event.buttons === 0) {\n        _this.handlePointerUp(event, info);\n\n        return;\n      } // Throttle mouse move event to once per frame\n\n\n      sync.update(_this.updatePoint, true);\n    };\n\n    this.handlePointerUp = function (event, info) {\n      _this.end();\n\n      var _a = _this.handlers,\n          onEnd = _a.onEnd,\n          onSessionEnd = _a.onSessionEnd;\n      var panInfo = getPanInfo(transformPoint(info, _this.transformPagePoint), _this.history);\n\n      if (_this.startEvent && onEnd) {\n        onEnd(event, panInfo);\n      }\n\n      onSessionEnd && onSessionEnd(event, panInfo);\n    }; // If we have more than one touch, don't start detecting this gesture\n\n\n    if (isTouchEvent(event) && event.touches.length > 1) return;\n    this.handlers = handlers;\n    this.transformPagePoint = transformPagePoint;\n    var info = extractEventInfo(event);\n    var initialInfo = transformPoint(info, this.transformPagePoint);\n    var point = initialInfo.point;\n    var timestamp = getFrameData().timestamp;\n    this.history = [__assign(__assign({}, point), {\n      timestamp: timestamp\n    })];\n    var onSessionStart = handlers.onSessionStart;\n    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));\n    this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n  }\n\n  PanSession.prototype.updateHandlers = function (handlers) {\n    this.handlers = handlers;\n  };\n\n  PanSession.prototype.end = function () {\n    this.removeListeners && this.removeListeners();\n    cancelSync.update(this.updatePoint);\n  };\n\n  return PanSession;\n}();\n\nfunction transformPoint(info, transformPagePoint) {\n  return transformPagePoint ? {\n    point: transformPagePoint(info.point)\n  } : info;\n}\n\nfunction subtractPoint(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n\nfunction getPanInfo(_a, history) {\n  var point = _a.point;\n  return {\n    point: point,\n    delta: subtractPoint(point, lastDevicePoint(history)),\n    offset: subtractPoint(point, startDevicePoint(history)),\n    velocity: getVelocity(history, 0.1)\n  };\n}\n\nfunction startDevicePoint(history) {\n  return history[0];\n}\n\nfunction lastDevicePoint(history) {\n  return history[history.length - 1];\n}\n\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var i = history.length - 1;\n  var timestampedPoint = null;\n  var lastPoint = lastDevicePoint(history);\n\n  while (i >= 0) {\n    timestampedPoint = history[i];\n\n    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {\n      break;\n    }\n\n    i--;\n  }\n\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n\n  return currentVelocity;\n}\n\nexport { PanSession };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/framer-motion/dist/es/gestures/PanSession.js"],"names":["__assign","isMouseEvent","isTouchEvent","extractEventInfo","sync","getFrameData","cancelSync","secondsToMilliseconds","addPointerEvent","distance","pipe","PanSession","event","handlers","_a","_this","_b","transformPagePoint","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","offset","x","y","point","timestamp","push","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","update","end","onEnd","onSessionEnd","panInfo","touches","length","initialInfo","onSessionStart","removeListeners","window","prototype","updateHandlers","subtractPoint","a","b","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity"],"mappings":"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","sourcesContent":["import { __assign } from 'tslib';\nimport { isMouseEvent, isTouchEvent } from './utils/event-type.js';\nimport { extractEventInfo } from '../events/event-info.js';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.js';\nimport { addPointerEvent } from '../events/use-pointer-event.js';\nimport { distance, pipe } from 'popmotion';\n\n/**\n * @internal\n */\nvar PanSession = /** @class */ (function () {\n    function PanSession(event, handlers, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, transformPagePoint = _b.transformPagePoint;\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = function () {\n            if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))\n                return;\n            var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\n            var isPanStarted = _this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            var isDistancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            var point = info.point;\n            var timestamp = getFrameData().timestamp;\n            _this.history.push(__assign(__assign({}, point), { timestamp: timestamp }));\n            var _a = _this.handlers, onStart = _a.onStart, onMove = _a.onMove;\n            if (!isPanStarted) {\n                onStart && onStart(_this.lastMoveEvent, info);\n                _this.startEvent = _this.lastMoveEvent;\n            }\n            onMove && onMove(_this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = function (event, info) {\n            _this.lastMoveEvent = event;\n            _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                _this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(_this.updatePoint, true);\n        };\n        this.handlePointerUp = function (event, info) {\n            _this.end();\n            var _a = _this.handlers, onEnd = _a.onEnd, onSessionEnd = _a.onSessionEnd;\n            var panInfo = getPanInfo(transformPoint(info, _this.transformPagePoint), _this.history);\n            if (_this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        var info = extractEventInfo(event);\n        var initialInfo = transformPoint(info, this.transformPagePoint);\n        var point = initialInfo.point;\n        var timestamp = getFrameData().timestamp;\n        this.history = [__assign(__assign({}, point), { timestamp: timestamp })];\n        var onSessionStart = handlers.onSessionStart;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    PanSession.prototype.updateHandlers = function (handlers) {\n        this.handlers = handlers;\n    };\n    PanSession.prototype.end = function () {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    };\n    return PanSession;\n}());\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo(_a, history) {\n    var point = _a.point;\n    return {\n        point: point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    var i = history.length - 1;\n    var timestampedPoint = null;\n    var lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    var currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n"]},"metadata":{},"sourceType":"module"}