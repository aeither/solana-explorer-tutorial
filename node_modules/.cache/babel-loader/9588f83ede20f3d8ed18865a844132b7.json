{"ast":null,"code":"import _slicedToArray from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useCallback, useState } from \"react\";\n/**\n * React hook to manage boolean (on - off) states\n *\n * @param initialState the initial boolean state value\n */\n\nexport function useBoolean(initialState) {\n  if (initialState === void 0) {\n    initialState = false;\n  }\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var on = useCallback(function () {\n    setValue(true);\n  }, []);\n  var off = useCallback(function () {\n    setValue(false);\n  }, []);\n  var toggle = useCallback(function () {\n    setValue(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return [value, {\n    on: on,\n    off: off,\n    toggle: toggle\n  }];\n}","map":{"version":3,"sources":["../../src/use-boolean.ts"],"names":["initialState","useState","on","useCallback","setValue","off","toggle","prev"],"mappings":";AAAA,SAAA,WAAA,EAAA,QAAA,QAAA,OAAA;AAIA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAAA,UAAA,CAAA,YAAA,EAAwD;AAAA,MAApCA,YAAoC,KAAA,KAAA,CAAA,EAAA;AAApCA,IAAAA,YAAoC,GAAP,KAA7BA;AAAoC;;AAC7D,kBAA0BC,QAAQ,CAAlC,YAAkC,CAAlC;AAAA;AAAA,MAAM,KAAN;AAAA,MAAM,QAAN;;AAEA,MAAMC,EAAE,GAAGC,WAAW,CAAC,YAAM;AAC3BC,IAAAA,QAAQ,CAARA,IAAQ,CAARA;AADoB,GAAA,EAAtB,EAAsB,CAAtB;AAIA,MAAMC,GAAG,GAAGF,WAAW,CAAC,YAAM;AAC5BC,IAAAA,QAAQ,CAARA,KAAQ,CAARA;AADqB,GAAA,EAAvB,EAAuB,CAAvB;AAIA,MAAME,MAAM,GAAGH,WAAW,CAAC,YAAM;AAC/BC,IAAAA,QAAQ,CAAEG,UAAAA,IAAD;AAAA,aAAU,CAAnBH,IAAS;AAAA,KAAD,CAARA;AADwB,GAAA,EAA1B,EAA0B,CAA1B;AAIA,SAAO,CAAA,KAAA,EAAQ;AAAEF,IAAAA,EAAF,EAAEA,EAAF;AAAMG,IAAAA,GAAN,EAAMA,GAAN;AAAWC,IAAAA,MAAAA,EAAAA;AAAX,GAAR,CAAP;AACD","sourcesContent":["import { useCallback, useState } from \"react\"\n\ntype InitialState = boolean | (() => boolean)\n\n/**\n * React hook to manage boolean (on - off) states\n *\n * @param initialState the initial boolean state value\n */\nexport function useBoolean(initialState: InitialState = false) {\n  const [value, setValue] = useState(initialState)\n\n  const on = useCallback(() => {\n    setValue(true)\n  }, [])\n\n  const off = useCallback(() => {\n    setValue(false)\n  }, [])\n\n  const toggle = useCallback(() => {\n    setValue((prev) => !prev)\n  }, [])\n\n  return [value, { on, off, toggle }] as const\n}\n"]},"metadata":{},"sourceType":"module"}