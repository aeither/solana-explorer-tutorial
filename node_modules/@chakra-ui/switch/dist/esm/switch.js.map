{"version":3,"sources":["../../src/switch.tsx"],"names":["useCheckbox","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","cx","dataAttr","__DEV__","React","Switch","props","ref","styles","spacing","children","ownProps","state","getInputProps","getCheckboxProps","getRootProps","getLabelProps","containerStyles","useMemo","display","verticalAlign","lineHeight","container","trackStyles","flexShrink","justifyContent","boxSizing","cursor","track","labelStyles","userSelect","marginStart","label","className","thumb","isChecked","isHovered","displayName"],"mappings":";;;;AAAA,SAASA,WAAT,QAA8C,qBAA9C;AACA,SACEC,MADF,EAEEC,UAFF,EAGEC,gBAHF,EAMEC,mBANF,QASO,mBATP;AAUA,SAASC,EAAT,EAAaC,QAAb,EAAuBC,OAAvB,QAAsC,kBAAtC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAcA,OAAO,IAAMC,MAAM,gBAAGP,UAAU,CAAuB,CAACQ,KAAD,EAAQC,GAAR,KAAgB;AACrE,MAAMC,MAAM,GAAGR,mBAAmB,CAAC,QAAD,EAAWM,KAAX,CAAlC;;AAEA,0BAAsDP,gBAAgB,CAACO,KAAD,CAAtE;AAAA,MAAM;AAAEG,IAAAA,OAAO,GAAG,QAAZ;AAAsBC,IAAAA;AAAtB,GAAN;AAAA,MAAyCC,QAAzC;;AAEA,MAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,gBAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA;AALI,MAMFpB,WAAW,CAACe,QAAD,CANf;AAQA,MAAMM,eAAkC,GAAGb,KAAK,CAACc,OAAN,CACzC;AACEC,IAAAA,OAAO,EAAE,cADX;AAEEC,IAAAA,aAAa,EAAE,QAFjB;AAGEC,IAAAA,UAAU,EAAE;AAHd,KAIKb,MAAM,CAACc,SAJZ,CADyC,EAOzC,CAACd,MAAM,CAACc,SAAR,CAPyC,CAA3C;AAUA,MAAMC,WAA8B,GAAGnB,KAAK,CAACc,OAAN,CACrC;AACEC,IAAAA,OAAO,EAAE,aADX;AAEEK,IAAAA,UAAU,EAAE,CAFd;AAGEC,IAAAA,cAAc,EAAE,YAHlB;AAIEC,IAAAA,SAAS,EAAE,aAJb;AAKEC,IAAAA,MAAM,EAAE;AALV,KAMKnB,MAAM,CAACoB,KANZ,CADqC,EASrC,CAACpB,MAAM,CAACoB,KAAR,CATqC,CAAvC;AAYA,MAAMC,WAA8B,GAAGzB,KAAK,CAACc,OAAN,CACrC;AACEY,IAAAA,UAAU,EAAE,MADd;AAEEC,IAAAA,WAAW,EAAEtB;AAFf,KAGKD,MAAM,CAACwB,KAHZ,CADqC,EAMrC,CAACvB,OAAD,EAAUD,MAAM,CAACwB,KAAjB,CANqC,CAAvC;AASA,sBACE,oBAAC,MAAD,CAAQ,KAAR,eACMjB,YAAY,EADlB;AAEE,IAAA,SAAS,EAAEd,EAAE,CAAC,eAAD,EAAkBK,KAAK,CAAC2B,SAAxB,CAFf;AAGE,IAAA,KAAK,EAAEhB;AAHT,mBAKE;AAAO,IAAA,SAAS,EAAC;AAAjB,KAA4CJ,aAAa,CAAC,EAAD,EAAKN,GAAL,CAAzD,EALF,eAME,oBAAC,MAAD,CAAQ,IAAR,eACMO,gBAAgB,EADtB;AAEE,IAAA,SAAS,EAAC,sBAFZ;AAGE,IAAA,KAAK,EAAES;AAHT,mBAKE,oBAAC,MAAD,CAAQ,IAAR;AACE,IAAA,KAAK,EAAEf,MAAM,CAAC0B,KADhB;AAEE,IAAA,SAAS,EAAC,sBAFZ;AAGE,oBAAchC,QAAQ,CAACU,KAAK,CAACuB,SAAP,CAHxB;AAIE,kBAAYjC,QAAQ,CAACU,KAAK,CAACwB,SAAP;AAJtB,IALF,CANF,EAkBG1B,QAAQ,iBACP,oBAAC,MAAD,CAAQ,IAAR;AACE,IAAA,SAAS,EAAC;AADZ,KAEMM,aAAa,EAFnB;AAGE,IAAA,KAAK,EAAEa;AAHT,MAKGnB,QALH,CAnBJ,CADF;AA8BD,CA1E+B,CAAzB;;AA4EP,IAAIP,OAAJ,EAAa;AACXE,EAAAA,MAAM,CAACgC,WAAP,GAAqB,QAArB;AACD","sourcesContent":["import { useCheckbox, UseCheckboxProps } from \"@chakra-ui/checkbox\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { cx, dataAttr, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface SwitchProps\n  extends Omit<UseCheckboxProps, \"isIndeterminate\">,\n    Omit<HTMLChakraProps<\"label\">, keyof UseCheckboxProps>,\n    ThemingProps<\"Switch\"> {\n  /**\n   * The spacing between the switch and its label text\n   * @default 0.5rem\n   * @type SystemProps[\"marginLeft\"]\n   */\n  spacing?: SystemProps[\"marginLeft\"]\n}\n\nexport const Switch = forwardRef<SwitchProps, \"input\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Switch\", props)\n\n  const { spacing = \"0.5rem\", children, ...ownProps } = omitThemingProps(props)\n\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getRootProps,\n    getLabelProps,\n  } = useCheckbox(ownProps)\n\n  const containerStyles: SystemStyleObject = React.useMemo(\n    () => ({\n      display: \"inline-block\",\n      verticalAlign: \"middle\",\n      lineHeight: \"normal\",\n      ...styles.container,\n    }),\n    [styles.container],\n  )\n\n  const trackStyles: SystemStyleObject = React.useMemo(\n    () => ({\n      display: \"inline-flex\",\n      flexShrink: 0,\n      justifyContent: \"flex-start\",\n      boxSizing: \"content-box\",\n      cursor: \"pointer\",\n      ...styles.track,\n    }),\n    [styles.track],\n  )\n\n  const labelStyles: SystemStyleObject = React.useMemo(\n    () => ({\n      userSelect: \"none\",\n      marginStart: spacing,\n      ...styles.label,\n    }),\n    [spacing, styles.label],\n  )\n\n  return (\n    <chakra.label\n      {...getRootProps()}\n      className={cx(\"chakra-switch\", props.className)}\n      __css={containerStyles}\n    >\n      <input className=\"chakra-switch__input\" {...getInputProps({}, ref)} />\n      <chakra.span\n        {...getCheckboxProps()}\n        className=\"chakra-switch__track\"\n        __css={trackStyles}\n      >\n        <chakra.span\n          __css={styles.thumb}\n          className=\"chakra-switch__thumb\"\n          data-checked={dataAttr(state.isChecked)}\n          data-hover={dataAttr(state.isHovered)}\n        />\n      </chakra.span>\n      {children && (\n        <chakra.span\n          className=\"chakra-switch__label\"\n          {...getLabelProps()}\n          __css={labelStyles}\n        >\n          {children}\n        </chakra.span>\n      )}\n    </chakra.label>\n  )\n})\n\nif (__DEV__) {\n  Switch.displayName = \"Switch\"\n}\n"],"file":"switch.js"}