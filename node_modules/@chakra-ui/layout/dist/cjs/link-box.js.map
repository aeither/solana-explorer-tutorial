{"version":3,"sources":["../../src/link-box.tsx"],"names":["LinkOverlay","props","ref","isExternal","target","rel","className","rest","position","content","cursor","display","top","left","zIndex","width","height","LinkBox"],"mappings":";;;;;AAAA;;AACA;;AACA;;;;;;;;;;AASO,IAAMA,WAAW,gBAAG,wBAAkC,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAAA,MACnEC,UADmE,GACnBF,KADmB,CACnEE,UADmE;AAAA,MACvDC,MADuD,GACnBH,KADmB,CACvDG,MADuD;AAAA,MAC/CC,GAD+C,GACnBJ,KADmB,CAC/CI,GAD+C;AAAA,MAC1CC,SAD0C,GACnBL,KADmB,CAC1CK,SAD0C;AAAA,MAC5BC,IAD4B,iCACnBN,KADmB;;AAE3E,sBACE,oBAAC,cAAD,CAAQ,CAAR,eACMM,IADN;AAEE,IAAA,GAAG,EAAEL,GAFP;AAGE,IAAA,SAAS,EAAE,eAAG,yBAAH,EAA8BI,SAA9B,CAHb;AAIE,IAAA,GAAG,EAAEH,UAAU,GAAG,qBAAH,GAA2BE,GAJ5C;AAKE,IAAA,MAAM,EAAEF,UAAU,GAAG,QAAH,GAAcC,MALlC;AAME,IAAA,KAAK,EAAE;AACLI,MAAAA,QAAQ,EAAE,QADL;AAEL,mBAAa;AACXC,QAAAA,OAAO,EAAE,IADE;AAEXC,QAAAA,MAAM,EAAE,SAFG;AAGXC,QAAAA,OAAO,EAAE,OAHE;AAIXH,QAAAA,QAAQ,EAAE,UAJC;AAKXI,QAAAA,GAAG,EAAE,CALM;AAMXC,QAAAA,IAAI,EAAE,CANK;AAOXC,QAAAA,MAAM,EAAE,CAPG;AAQXC,QAAAA,KAAK,EAAE,MARI;AASXC,QAAAA,MAAM,EAAE;AATG;AAFR;AANT,KADF;AAuBD,CAzB0B,CAApB;;;AA6BP;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,OAAO,gBAAG,wBAAgC,UAAChB,KAAD,EAAQC,GAAR,EAAgB;AAAA,MAC7DI,SAD6D,GACtCL,KADsC,CAC7DK,SAD6D;AAAA,MAC/CC,IAD+C,iCACtCN,KADsC;;AAGrE,sBACE,oBAAC,cAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEC,GADP;AAEE,IAAA,QAAQ,EAAC;AAFX,KAGMK,IAHN;AAIE,IAAA,SAAS,EAAE,eAAG,gBAAH,EAAqBD,SAArB,CAJb;AAKE,IAAA,KAAK,EAAE;AACL;AACA,4DAAsD;AACpDE,QAAAA,QAAQ,EAAE,UAD0C;AAEpDM,QAAAA,MAAM,EAAE;AAF4C;AAFjD;AALT,KADF;AAeD,CAlBsB,CAAhB","sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface LinkOverlayProps extends HTMLChakraProps<\"a\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   */\n  isExternal?: boolean\n}\n\nexport const LinkOverlay = forwardRef<LinkOverlayProps, \"a\">((props, ref) => {\n  const { isExternal, target, rel, className, ...rest } = props\n  return (\n    <chakra.a\n      {...rest}\n      ref={ref}\n      className={cx(\"chakra-linkbox__overlay\", className)}\n      rel={isExternal ? \"noopener noreferrer\" : rel}\n      target={isExternal ? \"_blank\" : target}\n      __css={{\n        position: \"static\",\n        \"&::before\": {\n          content: \"''\",\n          cursor: \"inherit\",\n          display: \"block\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          zIndex: 0,\n          width: \"100%\",\n          height: \"100%\",\n        },\n      }}\n    />\n  )\n})\n\nexport interface LinkBoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * `LinkBox` is used to wrap content areas within a link while ensuring semantic html\n *\n * @see Docs https://chakra-ui.com/docs/navigation/link-overlay\n * @see Resources https://www.sarasoueidan.com/blog/nested-links\n */\nexport const LinkBox = forwardRef<LinkBoxProps, \"div\">((props, ref) => {\n  const { className, ...rest } = props\n\n  return (\n    <chakra.div\n      ref={ref}\n      position=\"relative\"\n      {...rest}\n      className={cx(\"chakra-linkbox\", className)}\n      __css={{\n        /* Elevate the links and abbreviations up */\n        \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n          position: \"relative\",\n          zIndex: 1,\n        },\n      }}\n    />\n  )\n})\n"],"file":"link-box.js"}