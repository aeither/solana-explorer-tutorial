{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/lin/Documents/Projects/solana-explorer-tutorial/src/SearchResult/AccountDetailsCard.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { PublicKey } from \"@solana/web3.js\";\nimport { Connection, clusterApiUrl } from \"@solana/web3.js\";\nimport { useEffect, useState } from \"react\";\nimport { useAtom } from \"jotai\";\nimport { queryAtom } from \"../state/searchValue\";\nimport HistoryCard from \"./HistoryCard\";\nimport { Table, Tbody, Tr, Th, Td, Heading, VStack } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function AccountHeader(_ref) {\n  _s();\n\n  var data = _ref.data;\n\n  // const detatailsData = data?.details?.data;\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      detailsData = _useState2[0],\n      setDetailsData = _useState2[1];\n\n  useEffect(function () {\n    var _data$details;\n\n    setDetailsData(data === null || data === void 0 ? void 0 : (_data$details = data.details) === null || _data$details === void 0 ? void 0 : _data$details.data);\n    console.log(\"detatailsData\", detailsData);\n  }, [data, detailsData]);\n  var isToken = (detailsData === null || detailsData === void 0 ? void 0 : detailsData.program) === \"spl-token\" && (detailsData === null || detailsData === void 0 ? void 0 : detailsData.parsed.type) === \"mint\";\n\n  if (isToken) {\n    return /*#__PURE__*/_jsxDEV(VStack, {\n      my: \"2\",\n      w: \"100%\",\n      align: \"start\",\n      background: \"white\",\n      rounded: \"lg\",\n      p: \"4\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: \"Token Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        variant: \"simple\",\n        children: /*#__PURE__*/_jsxDEV(Tbody, {\n          children: [/*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              isNumeric: true,\n              children: data === null || data === void 0 ? void 0 : data.pubkey.toBase58()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Current Supply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              isNumeric: true,\n              children: detailsData === null || detailsData === void 0 ? void 0 : detailsData.parsed.info.supply\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Mint Authority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              isNumeric: true,\n              children: detailsData === null || detailsData === void 0 ? void 0 : detailsData.parsed.info.mintAuthority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Decimals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              isNumeric: true,\n              children: detailsData === null || detailsData === void 0 ? void 0 : detailsData.parsed.info.decimals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"header-pretitle\",\n      children: \"Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header-title\",\n      children: \"Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-lg-right\",\n        children: data === null || data === void 0 ? void 0 : data.pubkey.toBase58()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-lg-right\",\n        children: detailsData === null || detailsData === void 0 ? void 0 : detailsData.parsed.info.mint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Owner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-lg-right\",\n        children: detailsData === null || detailsData === void 0 ? void 0 : detailsData.parsed.info.owner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-lg-right\",\n        children: detailsData === null || detailsData === void 0 ? void 0 : detailsData.parsed.info.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AccountHeader, \"NJzRyu8Yr3Xd8gHO2OCLcK4hV7o=\");\n\n_c = AccountHeader;\nexport default function AccountDetailsCard() {\n  _s2();\n\n  var _useAtom = useAtom(queryAtom),\n      _useAtom2 = _slicedToArray(_useAtom, 1),\n      query = _useAtom2[0];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1]; // const fetchAccount = useFetchAccountInfo();\n  // const { status } = useCluster();\n  // const info = useAccountInfo(address);\n\n\n  var pubkey; // Fetch account on load\n\n  useEffect(function () {\n    getData();\n  }, [query.searchValue]); // let data;\n\n  function getData() {\n    return _getData.apply(this, arguments);\n  }\n\n  function _getData() {\n    _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, connection, result, lamports, details, space, _data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = clusterApiUrl(\"devnet\").replace(\"api\", \"explorer-api\");\n              connection = new Connection(url, \"finalized\");\n              _context.prev = 2;\n\n              if (!(query.searchValue !== undefined)) {\n                _context.next = 11;\n                break;\n              }\n\n              pubkey = new PublicKey(query.searchValue);\n              _context.next = 7;\n              return connection.getParsedAccountInfo(pubkey);\n\n            case 7:\n              result = _context.sent.value;\n\n              if (result === null) {\n                lamports = 0;\n              } else {\n                lamports = result.lamports; // Only save data in memory if we can decode it\n\n                if (!(\"parsed\" in result.data)) {\n                  space = result.data.length;\n                } else {\n                  space = result.data.space;\n                }\n\n                if (\"parsed\" in result.data) {\n                  _data = {\n                    program: result.data.program,\n                    parsed: result.data.parsed\n                  };\n                  details = {\n                    space: space,\n                    executable: result.executable,\n                    owner: result.owner,\n                    data: _data\n                  };\n                } else {\n                  details = {\n                    space: space,\n                    executable: result.executable,\n                    owner: result.owner\n                  };\n                }\n              }\n\n              setData({\n                pubkey: pubkey,\n                lamports: lamports,\n                details: details\n              });\n              console.log(\"address\", query.searchValue);\n\n            case 11:\n              _context.next = 15;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](2);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 13]]);\n    }));\n    return _getData.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !(data === null || data === void 0 ? void 0 : data.pubkey) ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Not valid pubkey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AccountHeader, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HistoryCard, {\n        pubkey: data.pubkey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s2(AccountDetailsCard, \"gr39W44dKVxNgapbp3j+4ouA8JQ=\", false, function () {\n  return [useAtom];\n});\n\n_c2 = AccountDetailsCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AccountHeader\");\n$RefreshReg$(_c2, \"AccountDetailsCard\");","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/src/SearchResult/AccountDetailsCard.tsx"],"names":["PublicKey","Connection","clusterApiUrl","useEffect","useState","useAtom","queryAtom","HistoryCard","Table","Tbody","Tr","Th","Td","Heading","VStack","AccountHeader","data","detailsData","setDetailsData","details","console","log","isToken","program","parsed","type","pubkey","toBase58","info","supply","mintAuthority","decimals","mint","owner","state","AccountDetailsCard","query","setData","getData","searchValue","url","replace","connection","undefined","getParsedAccountInfo","result","value","lamports","space","length","executable"],"mappings":"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","sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\nimport { Connection, clusterApiUrl } from \"@solana/web3.js\";\nimport { useEffect, useState } from \"react\";\n\nimport { useAtom } from \"jotai\";\nimport { queryAtom } from \"../state/searchValue\";\nimport HistoryCard from \"./HistoryCard\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  Heading,\n  VStack,\n} from \"@chakra-ui/react\";\nexport type DataDetails = {\n  program: string;\n  parsed: {\n    info: {\n      decimals?: number;\n      freezeAuthority?: string;\n      isInitialized?: boolean;\n      mintAuthority?: string;\n      supply?: string;\n      isNative?: false;\n      mint?: string;\n      owner?: string;\n      state?: string;\n      tokenAmount?: {\n        amount: string;\n        decimals: number;\n        uiAmount: number;\n        uiAmountString: string;\n      };\n    };\n    type: string;\n  };\n};\n\nexport type Data = {\n  pubkey: PublicKey;\n  lamports: number;\n  details?: {\n    space: number;\n    executable: boolean;\n    owner: PublicKey;\n    data?: DataDetails;\n  };\n};\n\nexport function AccountHeader({ data }: { data?: Data }) {\n  // const detatailsData = data?.details?.data;\n  const [detailsData, setDetailsData] = useState<DataDetails>();\n\n  useEffect(() => {\n    setDetailsData(data?.details?.data);\n    console.log(\"detatailsData\", detailsData);\n  }, [data, detailsData]);\n  const isToken =\n    detailsData?.program === \"spl-token\" && detailsData?.parsed.type === \"mint\";\n\n  if (isToken) {\n    return (\n      <VStack\n        my=\"2\"\n        w=\"100%\"\n        align=\"start\"\n        background=\"white\"\n        rounded=\"lg\"\n        p=\"4\"\n      >\n        <Heading size=\"md\">Token Account</Heading>\n        <Table variant=\"simple\">\n          <Tbody>\n            <Tr>\n              <Td>Address</Td>\n              <Td isNumeric>{data?.pubkey.toBase58()}</Td>\n            </Tr>\n            <Tr>\n              <Th>Current Supply</Th>\n              <Th isNumeric>{detailsData?.parsed.info.supply}</Th>\n            </Tr>\n            <Tr>\n              <Th>Mint Authority</Th>\n              <Th isNumeric>{detailsData?.parsed.info.mintAuthority}</Th>\n            </Tr>\n            <Tr>\n              <Th>Decimals</Th>\n              <Th isNumeric>{detailsData?.parsed.info.decimals}</Th>\n            </Tr>\n          </Tbody>\n        </Table>\n      </VStack>\n    );\n  }\n\n  return (\n    <>\n      <h6 className=\"header-pretitle\">Details</h6>\n      <h2 className=\"header-title\">Account</h2>\n      <tr>\n        <td>Address</td>\n        <td className=\"text-lg-right\">{data?.pubkey.toBase58()}</td>\n      </tr>\n      <tr>\n        <td>Mint</td>\n        <td className=\"text-lg-right\">{detailsData?.parsed.info.mint}</td>\n      </tr>\n      <tr>\n        <td>Owner</td>\n        <td className=\"text-lg-right\">{detailsData?.parsed.info.owner}</td>\n      </tr>\n      <tr>\n        <td>State</td>\n        <td className=\"text-lg-right\">{detailsData?.parsed.info.state}</td>\n      </tr>\n    </>\n  );\n}\n\nexport default function AccountDetailsCard() {\n  const [query] = useAtom(queryAtom);\n  const [data, setData] = useState<Data>();\n\n  // const fetchAccount = useFetchAccountInfo();\n  // const { status } = useCluster();\n  // const info = useAccountInfo(address);\n  let pubkey: PublicKey | undefined;\n\n  // Fetch account on load\n  useEffect(() => {\n    getData();\n  }, [query.searchValue]);\n\n  // let data;\n  async function getData() {\n    const url = clusterApiUrl(\"devnet\").replace(\"api\", \"explorer-api\");\n    const connection = new Connection(url, \"finalized\");\n\n    try {\n      if (query.searchValue !== undefined) {\n        pubkey = new PublicKey(query.searchValue);\n        const result = (await connection.getParsedAccountInfo(pubkey)).value;\n\n        let lamports, details;\n        if (result === null) {\n          lamports = 0;\n        } else {\n          lamports = result.lamports;\n\n          // Only save data in memory if we can decode it\n          let space: number;\n          if (!(\"parsed\" in result.data)) {\n            space = result.data.length;\n          } else {\n            space = result.data.space;\n          }\n\n          let data: DataDetails | undefined;\n          if (\"parsed\" in result.data) {\n            data = {\n              program: result.data.program,\n              parsed: result.data.parsed,\n            };\n            details = {\n              space,\n              executable: result.executable,\n              owner: result.owner,\n              data,\n            };\n          } else {\n            details = {\n              space,\n              executable: result.executable,\n              owner: result.owner,\n            };\n          }\n        }\n        setData({ pubkey, lamports, details });\n        console.log(\"address\", query.searchValue);\n      }\n    } catch (err) {}\n  }\n\n  return (\n    <>\n      {!data?.pubkey ? (\n        <p>Not valid pubkey</p>\n      ) : (\n        <>\n          <AccountHeader data={data} />\n          <HistoryCard pubkey={data.pubkey} />\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}