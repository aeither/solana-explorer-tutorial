{"version":3,"sources":["../../src/use-tabs.ts"],"names":["TabsDescendantsProvider","useTabsDescendantsContext","useTabsDescendants","useTabsDescendant","useTabs","props","defaultIndex","onChange","index","isManual","isLazy","lazyBehavior","orientation","direction","htmlProps","React","useState","focusedIndex","setFocusedIndex","defaultValue","value","selectedIndex","setSelectedIndex","useEffect","descendants","id","name","errorMessage","TabsProvider","useTabsContext","useTabList","onKeyDown","useCallback","event","nextTab","next","nextEnabled","node","prevTab","prev","prevEnabled","firstTab","first","firstEnabled","lastTab","last","lastEnabled","isHorizontal","isVertical","eventKey","ArrowStart","ArrowEnd","keyMap","ArrowDown","ArrowUp","Home","End","action","preventDefault","role","useTab","isDisabled","isFocusable","disabled","register","isSelected","onClick","onFocus","isDisabledButFocusable","shouldSelect","clickableProps","ref","type","makeTabId","tabIndex","makeTabPanelId","undefined","useTabPanels","context","validChildren","children","map","child","cloneElement","useTabPanel","hasBeenSelected","useRef","current","shouldRenderChildren","hidden","useTabIndicator","left","width","top","height","rect","setRect","hasMeasured","setHasMeasured","tab","item","offsetLeft","offsetWidth","offsetTop","offsetHeight","requestAnimationFrame","cancelAnimationFrame","position","transitionProperty","transitionDuration","transitionTimingFunction"],"mappings":"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","sourcesContent":["import { useClickable, UseClickableProps } from \"@chakra-ui/clickable\"\nimport { createDescendantContext } from \"@chakra-ui/descendant\"\nimport {\n  useControllableState,\n  useId,\n  useSafeLayoutEffect,\n} from \"@chakra-ui/hooks\"\nimport {\n  createContext,\n  EventKeyMap,\n  getValidChildren,\n  mergeRefs,\n} from \"@chakra-ui/react-utils\"\nimport {\n  callAllHandlers,\n  determineLazyBehavior,\n  Dict,\n  focus,\n  isUndefined,\n  LazyBehavior,\n  normalizeEventKey,\n} from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [\n  TabsDescendantsProvider,\n  useTabsDescendantsContext,\n  useTabsDescendants,\n  useTabsDescendant,\n] = createDescendantContext<HTMLButtonElement>()\n\n/* -------------------------------------------------------------------------------------------------\n * useTabs - The root react hook that manages all tab items\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseTabsProps {\n  /**\n   * The orientation of the tab list.\n   */\n  orientation?: \"vertical\" | \"horizontal\"\n  /**\n   * If `true`, the tabs will be manually activated and\n   * display its panel by pressing Space or Enter.\n   *\n   * If `false`, the tabs will be automatically activated\n   * and their panel is displayed when they receive focus.\n   */\n  isManual?: boolean\n  /**\n   * Callback when the index (controlled or un-controlled) changes.\n   */\n  onChange?: (index: number) => void\n  /**\n   * The index of the selected tab (in controlled mode)\n   */\n  index?: number\n  /**\n   * The initial index of the selected tab (in uncontrolled mode)\n   */\n  defaultIndex?: number\n  /**\n   * The id of the tab\n   */\n  id?: string\n  /**\n   * Performance 🚀:\n   * If `true`, rendering of the tab panel's will be deferred until it is selected.\n   */\n  isLazy?: boolean\n  /**\n   * Performance 🚀:\n   * The lazy behavior of tab panels' content when not active.\n   * Only works when `isLazy={true}`\n   *\n   * - \"unmount\": The content of inactive tab panels are always unmounted.\n   * - \"keepMounted\": The content of inactive tab panels is initially unmounted,\n   * but stays mounted when selected.\n   *\n   * @default \"unmount\"\n   */\n  lazyBehavior?: LazyBehavior\n  /**\n   * The writing mode direction.\n   *\n   * - When in RTL, the left and right navigation is flipped\n   */\n  direction?: \"rtl\" | \"ltr\"\n}\n\n/**\n * Tabs hooks that provides all the states, and accessibility\n * helpers to keep all things working properly.\n *\n * Its returned object will be passed unto a Context Provider\n * so all child components can read from it.\n * There is no document link yet\n * @see Docs https://chakra-ui.com/docs/components/useTabs\n */\nexport function useTabs(props: UseTabsProps) {\n  const {\n    defaultIndex,\n    onChange,\n    index,\n    isManual,\n    isLazy,\n    lazyBehavior = \"unmount\",\n    orientation = \"horizontal\",\n    direction = \"ltr\",\n    ...htmlProps\n  } = props\n\n  /**\n   * We use this to keep track of the index of the focused tab.\n   *\n   * Tabs can be automatically activated, this means selection follows focus.\n   * When we navigate with the arrow keys, we move focus and selection to next/prev tab\n   *\n   * Tabs can also be manually activated, this means selection does not follow focus.\n   * When we navigate with the arrow keys, we only move focus NOT selection. The user\n   * will need not manually activate the tab using `Enter` or `Space`.\n   *\n   * This is why we need to keep track of the `focusedIndex` and `selectedIndex`\n   */\n  const [focusedIndex, setFocusedIndex] = React.useState(defaultIndex ?? 0)\n\n  const [selectedIndex, setSelectedIndex] = useControllableState({\n    defaultValue: defaultIndex ?? 0,\n    value: index,\n    onChange,\n  })\n\n  /**\n   * Sync focused `index` with controlled `selectedIndex` (which is the `props.index`)\n   */\n  React.useEffect(() => {\n    if (index != null) {\n      setFocusedIndex(index)\n    }\n  }, [index])\n\n  /**\n   * Think of `useDescendants` as a register for the tab nodes.\n   */\n  const descendants = useTabsDescendants()\n\n  /**\n   * Generate a unique id or use user-provided id for the tabs widget\n   */\n  const id = useId(props.id, `tabs`)\n\n  return {\n    id,\n    selectedIndex,\n    focusedIndex,\n    setSelectedIndex,\n    setFocusedIndex,\n    isManual,\n    isLazy,\n    lazyBehavior,\n    orientation,\n    descendants,\n    direction,\n    htmlProps,\n  }\n}\n\nexport type UseTabsReturn = Omit<\n  ReturnType<typeof useTabs>,\n  \"htmlProps\" | \"descendants\"\n>\n\nexport const [TabsProvider, useTabsContext] = createContext<UseTabsReturn>({\n  name: \"TabsContext\",\n  errorMessage:\n    \"useTabsContext: `context` is undefined. Seems you forgot to wrap all tabs components within <Tabs />\",\n})\n\ntype Child = React.ReactElement<any>\n\nexport interface UseTabListProps {\n  children?: React.ReactNode\n  onKeyDown?: React.KeyboardEventHandler\n  ref?: React.Ref<any>\n}\n\n/**\n * Tabs hook to manage multiple tab buttons,\n * and ensures only one tab is selected per time.\n *\n * @param props props object for the tablist\n */\nexport function useTabList<P extends UseTabListProps>(props: P) {\n  const { focusedIndex, orientation, direction } = useTabsContext()\n\n  const descendants = useTabsDescendantsContext()\n\n  const onKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      const nextTab = () => {\n        const next = descendants.nextEnabled(focusedIndex)\n        if (next) focus(next.node)\n      }\n      const prevTab = () => {\n        const prev = descendants.prevEnabled(focusedIndex)\n        if (prev) focus(prev.node)\n      }\n      const firstTab = () => {\n        const first = descendants.firstEnabled()\n        if (first) focus(first.node)\n      }\n      const lastTab = () => {\n        const last = descendants.lastEnabled()\n        if (last) focus(last.node)\n      }\n\n      const isHorizontal = orientation === \"horizontal\"\n      const isVertical = orientation === \"vertical\"\n\n      const eventKey = normalizeEventKey(event)\n\n      const ArrowStart = direction === \"ltr\" ? \"ArrowLeft\" : \"ArrowRight\"\n      const ArrowEnd = direction === \"ltr\" ? \"ArrowRight\" : \"ArrowLeft\"\n\n      const keyMap: EventKeyMap = {\n        [ArrowStart]: () => isHorizontal && prevTab(),\n        [ArrowEnd]: () => isHorizontal && nextTab(),\n        ArrowDown: () => isVertical && nextTab(),\n        ArrowUp: () => isVertical && prevTab(),\n        Home: firstTab,\n        End: lastTab,\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        action(event)\n      }\n    },\n    [descendants, focusedIndex, orientation, direction],\n  )\n\n  return {\n    ...props,\n    role: \"tablist\",\n    \"aria-orientation\": orientation,\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\nexport type UseTabListReturn = ReturnType<typeof useTabList>\n\nexport interface UseTabOptions {\n  id?: string\n  isSelected?: boolean\n  panelId?: string\n  /**\n   * If `true`, the `Tab` won't be toggleable\n   */\n  isDisabled?: boolean\n}\n\nexport interface UseTabProps\n  extends Omit<UseClickableProps, \"color\">,\n    UseTabOptions {}\n\n/**\n * Tabs hook to manage each tab button.\n *\n * A tab can be disabled and focusable, or both,\n * hence the use of `useClickable` to handle this scenario\n */\nexport function useTab<P extends UseTabProps>(props: P) {\n  const { isDisabled, isFocusable, ...htmlProps } = props\n\n  const {\n    setSelectedIndex,\n    isManual,\n    id,\n    setFocusedIndex,\n    selectedIndex,\n  } = useTabsContext()\n\n  const { index, register } = useTabsDescendant({\n    disabled: isDisabled && !isFocusable,\n  })\n\n  const isSelected = index === selectedIndex\n\n  const onClick = () => {\n    setSelectedIndex(index)\n  }\n\n  const onFocus = () => {\n    setFocusedIndex(index)\n    const isDisabledButFocusable = isDisabled && isFocusable\n    const shouldSelect = !isManual && !isDisabledButFocusable\n    if (shouldSelect) {\n      setSelectedIndex(index)\n    }\n  }\n\n  const clickableProps = useClickable({\n    ...htmlProps,\n    ref: mergeRefs(register, props.ref),\n    isDisabled,\n    isFocusable,\n    onClick: callAllHandlers(props.onClick, onClick),\n  })\n\n  const type: \"button\" | \"submit\" | \"reset\" = \"button\"\n\n  return {\n    ...clickableProps,\n    id: makeTabId(id, index),\n    role: \"tab\",\n    tabIndex: isSelected ? 0 : -1,\n    type,\n    \"aria-selected\": isSelected,\n    \"aria-controls\": makeTabPanelId(id, index),\n    onFocus: isDisabled ? undefined : callAllHandlers(props.onFocus, onFocus),\n  }\n}\n\nexport interface UseTabPanelsProps {\n  children?: React.ReactNode\n}\n\n/**\n * Tabs hook for managing the visibility of multiple tab panels.\n *\n * Since only one panel can be show at a time, we use `cloneElement`\n * to inject `selected` panel to each TabPanel.\n *\n * It returns a cloned version of its children with\n * all functionality included.\n */\nexport function useTabPanels<P extends UseTabPanelsProps>(props: P) {\n  const context = useTabsContext()\n\n  const { id, selectedIndex } = context\n\n  const validChildren = getValidChildren(props.children)\n\n  const children = validChildren.map((child, index) =>\n    React.cloneElement(child as Child, {\n      isSelected: index === selectedIndex,\n      id: makeTabPanelId(id, index),\n      // Refers to the associated tab element, and also provides an accessible name to the tab panel.\n      \"aria-labelledby\": makeTabId(id, index),\n    }),\n  )\n\n  return { ...props, children }\n}\n\n/**\n * Tabs hook for managing the visible/hidden states\n * of the tab panel.\n *\n * @param props props object for the tab panel\n */\nexport function useTabPanel(props: Dict) {\n  const { isSelected, id, children, ...htmlProps } = props\n  const { isLazy, lazyBehavior } = useTabsContext()\n\n  const hasBeenSelected = React.useRef(false)\n  if (isSelected) {\n    hasBeenSelected.current = true\n  }\n\n  const shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenSelected.current,\n    isSelected,\n    isLazy,\n    lazyBehavior,\n  })\n\n  return {\n    // Puts the tabpanel in the page `Tab` sequence.\n    tabIndex: 0,\n    ...htmlProps,\n    children: shouldRenderChildren ? children : null,\n    role: \"tabpanel\",\n    hidden: !isSelected,\n    id,\n  }\n}\n\n/**\n * Tabs hook to show an animated indicators that\n * follows the active tab.\n *\n * The way we do it is by measuring the DOM Rect (or dimensions)\n * of the active tab, and return that as CSS style for\n * the indicator.\n */\nexport function useTabIndicator(): React.CSSProperties {\n  const context = useTabsContext()\n  const descendants = useTabsDescendantsContext()\n\n  const { selectedIndex, orientation } = context\n\n  const isHorizontal = orientation === \"horizontal\"\n  const isVertical = orientation === \"vertical\"\n\n  // Get the clientRect of the selected tab\n  const [rect, setRect] = React.useState(() => {\n    if (isHorizontal) return { left: 0, width: 0 }\n    if (isVertical) return { top: 0, height: 0 }\n    return undefined\n  })\n\n  const [hasMeasured, setHasMeasured] = React.useState(false)\n\n  // Update the selected tab rect when the selectedIndex changes\n  useSafeLayoutEffect(() => {\n    if (isUndefined(selectedIndex)) return undefined\n\n    const tab = descendants.item(selectedIndex)\n    if (isUndefined(tab)) return undefined\n\n    // Horizontal Tab: Calculate width and left distance\n    if (isHorizontal) {\n      setRect({ left: tab.node.offsetLeft, width: tab.node.offsetWidth })\n    }\n\n    // Vertical Tab: Calculate height and top distance\n    if (isVertical) {\n      setRect({ top: tab.node.offsetTop, height: tab.node.offsetHeight })\n    }\n\n    // Prevent unwanted transition from 0 to measured rect\n    // by setting the measured state in the next tick\n    const id = requestAnimationFrame(() => {\n      setHasMeasured(true)\n    })\n\n    return () => {\n      if (id) {\n        cancelAnimationFrame(id)\n      }\n    }\n  }, [selectedIndex, isHorizontal, isVertical, descendants])\n\n  return {\n    position: \"absolute\",\n    transitionProperty: \"left, right, top, bottom\",\n    transitionDuration: hasMeasured ? \"200ms\" : \"0ms\",\n    transitionTimingFunction: \"cubic-bezier(0, 0, 0.2, 1)\",\n    ...rect,\n  }\n}\n\nfunction makeTabId(id: string, index: number) {\n  return `${id}--tab-${index}`\n}\n\nfunction makeTabPanelId(id: string, index: number) {\n  return `${id}--tabpanel-${index}`\n}\n"],"file":"use-tabs.js"}