{"version":3,"sources":["../../src/live-region.ts"],"names":["LiveRegion","options","getOptions","region","getRegion","parentNode","appendChild","speak","message","clear","innerText","destroy","removeChild","defaultOptions","role","id","isBrowser","document","body","undefined","Object","assign","getElementById","createElement","setup","className","setAttribute","String","style","border","clip","height","width","margin","padding","overflow","whiteSpace","position"],"mappings":"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","sourcesContent":["import { isBrowser } from \"@chakra-ui/utils\"\n\nexport interface LiveRegionOptions {\n  /**\n   * A unique id for the created live region element\n   */\n  id?: string\n  /**\n   * Used to mark a part of the page as \"live\" so that updates will\n   * be communicated to users by screen readers.\n   *\n   * - If set to `polite`: tells assistive technology to alert the user\n   * to this change when it has finished whatever it is currently doing\n   *\n   * - If set to `assertive`: tells assistive technology to interrupt whatever\n   * it is doing and alert the user to this change immediately\n   *\n   * @default \"polite\".\n   */\n  \"aria-live\"?: \"polite\" | \"assertive\"\n  /**\n   * The desired value of the role attribute\n   * @default \"status\"\n   */\n  role?: \"status\" | \"alert\" | \"log\"\n  /**\n   * Indicates what types of changes should be presented to the user.\n   * @default \"all\"\n   */\n  \"aria-relevant\"?: React.AriaAttributes[\"aria-relevant\"]\n  /**\n   * Indicates whether the entire region should be\n   * considered as a whole when communicating updates\n   *\n   * @default true\n   */\n  \"aria-atomic\"?: React.AriaAttributes[\"aria-atomic\"]\n  /**\n   * The node to append the live region node to\n   */\n  parentNode?: HTMLElement\n}\n\nexport class LiveRegion {\n  region: HTMLElement | null\n  options: Required<LiveRegionOptions>\n  parentNode: HTMLElement\n\n  constructor(options?: LiveRegionOptions) {\n    this.options = getOptions(options) as any\n    this.region = getRegion(this.options)\n    this.parentNode = this.options.parentNode\n    if (this.region) {\n      this.parentNode.appendChild(this.region)\n    }\n  }\n\n  public speak(message: string) {\n    this.clear()\n    if (this.region) {\n      this.region.innerText = message\n    }\n  }\n\n  public destroy() {\n    if (this.region) {\n      this.region.parentNode?.removeChild(this.region)\n    }\n  }\n\n  public clear() {\n    if (this.region) {\n      this.region.innerText = \"\"\n    }\n  }\n}\n\nfunction getOptions(options?: LiveRegionOptions) {\n  const defaultOptions: LiveRegionOptions = {\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\",\n    \"aria-relevant\": \"all\",\n    role: \"status\",\n    id: \"chakra-a11y-live-region\",\n    parentNode: isBrowser ? document.body : undefined,\n  }\n  if (options) {\n    return Object.assign(defaultOptions, options)\n  }\n  return defaultOptions\n}\n\nfunction getRegion(options: Required<LiveRegionOptions>) {\n  let region = isBrowser ? document.getElementById(options.id) : null\n\n  if (region) return region\n\n  if (isBrowser) {\n    region = document.createElement(\"div\")\n    setup(region, options)\n  }\n\n  return region\n}\n\nfunction setup(region: HTMLElement, options: Required<LiveRegionOptions>) {\n  region.id = options.id || \"chakra-live-region\"\n  region.className = \"__chakra-live-region\"\n  region.setAttribute(\"aria-live\", options[\"aria-live\"])\n  region.setAttribute(\"role\", options.role)\n  region.setAttribute(\"aria-relevant\", options[\"aria-relevant\"])\n  region.setAttribute(\"aria-atomic\", String(options[\"aria-atomic\"]))\n  Object.assign(region.style, {\n    border: \"0px\",\n    clip: \"rect(0px, 0px, 0px, 0px)\",\n    height: \"1px\",\n    width: \"1px\",\n    margin: \"-1px\",\n    padding: \"0px\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    position: \"absolute\",\n  })\n}\n"],"file":"live-region.js"}