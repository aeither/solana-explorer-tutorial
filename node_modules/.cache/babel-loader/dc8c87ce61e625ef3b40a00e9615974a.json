{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx, mapResponsive, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to cropping media (videos, images and maps)\n * to a desired aspect ratio.\n *\n * @see Docs https://chakra-ui.com/aspectratiobox\n */\n\nexport var AspectRatio = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$ratio = props.ratio,\n      ratio = _props$ratio === void 0 ? 4 / 3 : _props$ratio,\n      children = props.children,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, [\"ratio\", \"children\", \"className\"]); // enforce single child\n\n\n  var child = React.Children.only(children);\n\n  var _className = cx(\"chakra-aspect-ratio\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    position: \"relative\",\n    className: _className,\n    _before: {\n      height: 0,\n      content: \"\\\"\\\"\",\n      display: \"block\",\n      paddingBottom: mapResponsive(ratio, function (r) {\n        return 1 / r * 100 + \"%\";\n      })\n    },\n    __css: {\n      \"& > *:not(style)\": {\n        overflow: \"hidden\",\n        position: \"absolute\",\n        top: \"0\",\n        right: \"0\",\n        bottom: \"0\",\n        left: \"0\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n      \"& > img, & > video\": {\n        objectFit: \"cover\"\n      }\n    }\n  }, rest), child);\n});\n\nif (__DEV__) {\n  AspectRatio.displayName = \"AspectRatio\";\n}","map":{"version":3,"sources":["../../src/aspect-ratio.tsx"],"names":["AspectRatio","forwardRef","ratio","className","child","React","_className","cx","height","content","display","paddingBottom","mapResponsive","r","overflow","position","top","right","bottom","left","justifyContent","alignItems","width","objectFit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,MAAA,EAAA,UAAA,QAAA,mBAAA;AAMA,SAAA,EAAA,EAAA,aAAA,EAAA,OAAA,QAAA,kBAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AAeA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMA,WAAW,GAAA,aAAGC,UAAU,CAA0B,UAAA,KAAA,EAAA,GAAA,EAAgB;AAC7E,qBAAA,KAAA,CAAQC,KAAR;AAAA,MAAQA,KAAR,6BAAgB,IAAV,CAAN;AAAA,MAAM,QAAN,GAAA,KAAA,CAAM,QAAN;AAAA,MAAiCC,SAAjC,GAAA,KAAA,CAAiCA,SAAjC;AAAA,MAAA,IAAA,GAAA,6BAAA,CAAA,KAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAD6E,WAC7E,CAAA,CAAA,CAD6E,CAG7E;;;AACA,MAAMC,KAAK,GAAGC,KAAK,CAALA,QAAAA,CAAAA,IAAAA,CAAd,QAAcA,CAAd;;AAEA,MAAMC,UAAU,GAAGC,EAAE,CAAA,qBAAA,EAArB,SAAqB,CAArB;;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAC,MAAD,CAAA,GAAA,EAAA,QAAA,CAAA;AACE,IAAA,GAAG,EADL,GAAA;AAEE,IAAA,QAAQ,EAFV,UAAA;AAGE,IAAA,SAAS,EAHX,UAAA;AAIE,IAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EADC,CAAA;AAEPC,MAAAA,OAAO,EAFA,MAAA;AAGPC,MAAAA,OAAO,EAHA,OAAA;AAIPC,MAAAA,aAAa,EAAEC,aAAa,CAAA,KAAA,EAASC,UAAAA,CAAD;AAAA,eAAW,IAAD,CAAC,GAAX,GAAW,GAAnB,GAAQ;AAAA,OAAR;AAJrB,KAJX;AAUE,IAAA,KAAK,EAAE;AACL,0BAAoB;AAClBC,QAAAA,QAAQ,EADU,QAAA;AAElBC,QAAAA,QAAQ,EAFU,UAAA;AAGlBC,QAAAA,GAAG,EAHe,GAAA;AAIlBC,QAAAA,KAAK,EAJa,GAAA;AAKlBC,QAAAA,MAAM,EALY,GAAA;AAMlBC,QAAAA,IAAI,EANc,GAAA;AAOlBT,QAAAA,OAAO,EAPW,MAAA;AAQlBU,QAAAA,cAAc,EARI,QAAA;AASlBC,QAAAA,UAAU,EATQ,QAAA;AAUlBC,QAAAA,KAAK,EAVa,MAAA;AAWlBd,QAAAA,MAAM,EAAE;AAXU,OADf;AAcL,4BAAsB;AACpBe,QAAAA,SAAS,EAAE;AADS;AAdjB;AAVT,GAAA,EAAA,IAAA,CAAA,EADF,KACE,CADF;AARK,CAA8B,CAA9B;;AA4CP,IAAA,OAAA,EAAa;AACXvB,EAAAA,WAAW,CAAXA,WAAAA,GAAAA,aAAAA;AACD","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  ResponsiveValue,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, mapResponsive, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\ninterface AspectRatioOptions {\n  /**\n   * The aspect ratio of the Box. Common values are:\n   *\n   * `21/9`, `16/9`, `9/16`, `4/3`, `1.85/1`\n   */\n  ratio?: ResponsiveValue<number>\n}\n\nexport interface AspectRatioProps\n  extends HTMLChakraProps<\"div\">,\n    AspectRatioOptions {}\n\n/**\n * React component used to cropping media (videos, images and maps)\n * to a desired aspect ratio.\n *\n * @see Docs https://chakra-ui.com/aspectratiobox\n */\nexport const AspectRatio = forwardRef<AspectRatioProps, \"div\">((props, ref) => {\n  const { ratio = 4 / 3, children, className, ...rest } = props\n\n  // enforce single child\n  const child = React.Children.only(children)\n\n  const _className = cx(\"chakra-aspect-ratio\", className)\n\n  return (\n    <chakra.div\n      ref={ref}\n      position=\"relative\"\n      className={_className}\n      _before={{\n        height: 0,\n        content: `\"\"`,\n        display: \"block\",\n        paddingBottom: mapResponsive(ratio, (r) => `${(1 / r) * 100}%`),\n      }}\n      __css={{\n        \"& > *:not(style)\": {\n          overflow: \"hidden\",\n          position: \"absolute\",\n          top: \"0\",\n          right: \"0\",\n          bottom: \"0\",\n          left: \"0\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"100%\",\n          height: \"100%\",\n        },\n        \"& > img, & > video\": {\n          objectFit: \"cover\",\n        }\n      }}\n      {...rest}\n    >\n      {child}\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  AspectRatio.displayName = \"AspectRatio\"\n}\n"]},"metadata":{},"sourceType":"module"}