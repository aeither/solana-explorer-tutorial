{"ast":null,"code":"import { calcRelativeOffset } from '../../../motion/features/layout/utils.js';\nimport { eachAxis } from '../../../utils/each-axis.js';\n\nfunction setCurrentViewportBox(visualElement) {\n  var projectionParent = visualElement.getProjectionParent();\n\n  if (!projectionParent) {\n    visualElement.rebaseProjectionTarget();\n    return;\n  }\n\n  var relativeOffset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement.getLayoutState().layout);\n  eachAxis(function (axis) {\n    visualElement.setProjectionTargetAxis(axis, relativeOffset[axis].min, relativeOffset[axis].max, true);\n  });\n}\n\nexport { setCurrentViewportBox };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/framer-motion/dist/es/render/dom/projection/relative-set.js"],"names":["calcRelativeOffset","eachAxis","setCurrentViewportBox","visualElement","projectionParent","getProjectionParent","rebaseProjectionTarget","relativeOffset","getLayoutState","layout","axis","setProjectionTargetAxis","min","max"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,0CAAnC;AACA,SAASC,QAAT,QAAyB,6BAAzB;;AAEA,SAASC,qBAAT,CAA+BC,aAA/B,EAA8C;AAC1C,MAAIC,gBAAgB,GAAGD,aAAa,CAACE,mBAAd,EAAvB;;AACA,MAAI,CAACD,gBAAL,EAAuB;AACnBD,IAAAA,aAAa,CAACG,sBAAd;AACA;AACH;;AACD,MAAIC,cAAc,GAAGP,kBAAkB,CAACI,gBAAgB,CAACI,cAAjB,GAAkCC,MAAnC,EAA2CN,aAAa,CAACK,cAAd,GAA+BC,MAA1E,CAAvC;AACAR,EAAAA,QAAQ,CAAC,UAAUS,IAAV,EAAgB;AACrBP,IAAAA,aAAa,CAACQ,uBAAd,CAAsCD,IAAtC,EAA4CH,cAAc,CAACG,IAAD,CAAd,CAAqBE,GAAjE,EAAsEL,cAAc,CAACG,IAAD,CAAd,CAAqBG,GAA3F,EAAgG,IAAhG;AACH,GAFO,CAAR;AAGH;;AAED,SAASX,qBAAT","sourcesContent":["import { calcRelativeOffset } from '../../../motion/features/layout/utils.js';\nimport { eachAxis } from '../../../utils/each-axis.js';\n\nfunction setCurrentViewportBox(visualElement) {\n    var projectionParent = visualElement.getProjectionParent();\n    if (!projectionParent) {\n        visualElement.rebaseProjectionTarget();\n        return;\n    }\n    var relativeOffset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement.getLayoutState().layout);\n    eachAxis(function (axis) {\n        visualElement.setProjectionTargetAxis(axis, relativeOffset[axis].min, relativeOffset[axis].max, true);\n    });\n}\n\nexport { setCurrentViewportBox };\n"]},"metadata":{},"sourceType":"module"}