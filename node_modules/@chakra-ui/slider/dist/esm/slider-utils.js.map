{"version":3,"sources":["../../src/slider-utils.ts"],"names":["orient","options","orientation","vertical","horizontal","getPartsStyle","trackPercent","thumbRect","isReversed","thumbStyle","position","userSelect","WebkitUserSelect","MozUserSelect","msUserSelect","touchAction","bottom","height","left","width","rootStyle","WebkitTapHighlightColor","outline","paddingLeft","paddingRight","paddingTop","paddingBottom","trackStyle","transform","top","innerTrackStyle","right"],"mappings":"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","sourcesContent":["import { CSSProperties } from \"react\"\n\ntype Orientation = \"vertical\" | \"horizontal\"\n\nfunction orient(options: {\n  orientation: Orientation\n  vertical: CSSProperties\n  horizontal: CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\nexport function getPartsStyle(options: {\n  orientation: Orientation\n  trackPercent: number\n  thumbRect: { height: number; width: number }\n  isReversed?: boolean\n}) {\n  const { orientation, trackPercent, thumbRect, isReversed } = options\n\n  const thumbStyle: CSSProperties = {\n    position: \"absolute\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    MozUserSelect: \"none\",\n    msUserSelect: \"none\",\n    touchAction: \"none\",\n    ...orient({\n      orientation,\n      vertical: {\n        bottom: `calc(${trackPercent}% - ${thumbRect.height / 2}px)`,\n      },\n      horizontal: {\n        left: `calc(${trackPercent}% - ${thumbRect.width / 2}px)`,\n      },\n    }),\n  }\n\n  const rootStyle: CSSProperties = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: {\n        paddingLeft: thumbRect.width / 2,\n        paddingRight: thumbRect.width / 2,\n      },\n      horizontal: {\n        paddingTop: thumbRect.height / 2,\n        paddingBottom: thumbRect.height / 2,\n      },\n    }),\n  }\n\n  const trackStyle: React.CSSProperties = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\",\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\",\n      },\n    }),\n  }\n\n  const innerTrackStyle: React.CSSProperties = {\n    ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed\n        ? { height: `${100 - trackPercent}%`, top: 0 }\n        : { height: `${trackPercent}%`, bottom: 0 },\n      horizontal: isReversed\n        ? { width: `${100 - trackPercent}%`, right: 0 }\n        : { width: `${trackPercent}%`, left: 0 },\n    }),\n  }\n\n  return { trackStyle, innerTrackStyle, rootStyle, thumbStyle }\n}\n"],"file":"slider-utils.js"}