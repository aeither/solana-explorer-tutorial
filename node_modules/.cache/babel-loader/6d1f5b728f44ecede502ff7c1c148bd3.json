{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/lin/Documents/Projects/solana-explorer-tutorial/src/SearchResult/TxDetailsCard.tsx\",\n    _s = $RefreshSig$();\n\nimport { Connection, clusterApiUrl } from \"@solana/web3.js\";\nimport { useEffect, useState } from \"react\";\nimport { useAtom } from \"jotai\";\nimport { queryAtom } from \"../state/searchValue\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TxDetailsCard() {\n  _s();\n\n  var _query$searchValue, _txData$info, _txData$info2, _txData$info3, _txData$info4, _txData$info5, _txData$info6;\n\n  var _useAtom = useAtom(queryAtom),\n      _useAtom2 = _slicedToArray(_useAtom, 1),\n      query = _useAtom2[0];\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      txData = _useState2[0],\n      setTxData = _useState2[1];\n\n  useEffect(function () {\n    getData();\n  }, []); // let data;\n\n  function getData() {\n    return _getData.apply(this, arguments);\n  }\n\n  function _getData() {\n    _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, connection, data, _yield$connection$get, value, info, confirmations, blockTime, timestamp;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"Hello\");\n              url = clusterApiUrl(\"devnet\").replace(\"api\", \"explorer-api\");\n              connection = new Connection(url, \"finalized\");\n              _context.prev = 3;\n\n              if (!(query.searchValue !== undefined)) {\n                _context.next = 27;\n                break;\n              }\n\n              _context.next = 7;\n              return connection.getSignatureStatus(query.searchValue, {\n                searchTransactionHistory: true\n              });\n\n            case 7:\n              _yield$connection$get = _context.sent;\n              value = _yield$connection$get.value;\n              info = null;\n\n              if (!(value !== null)) {\n                _context.next = 24;\n                break;\n              }\n\n              if (typeof value.confirmations === \"number\") {\n                confirmations = value.confirmations;\n              } else {\n                confirmations = \"max\";\n              }\n\n              blockTime = null;\n              _context.prev = 13;\n              _context.next = 16;\n              return connection.getBlockTime(value.slot);\n\n            case 16:\n              blockTime = _context.sent;\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](13);\n              console.log(_context.t0);\n\n            case 22:\n              timestamp = blockTime !== null ? blockTime : \"unavailable\";\n              info = {\n                slot: value.slot,\n                timestamp: timestamp,\n                confirmations: confirmations,\n                confirmationStatus: value.confirmationStatus,\n                result: {\n                  err: value.err\n                }\n              };\n\n            case 24:\n              console.log('info', info);\n              data = {\n                signature: query.searchValue,\n                info: info\n              };\n              setTxData(data);\n\n            case 27:\n              _context.next = 32;\n              break;\n\n            case 29:\n              _context.prev = 29;\n              _context.t1 = _context[\"catch\"](3);\n              console.log(_context.t1);\n\n            case 32:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 29], [13, 19]]);\n    }));\n    return _getData.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-n3\",\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Signature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-lg-right\",\n        children: [(_query$searchValue = query.searchValue) === null || _query$searchValue === void 0 ? void 0 : _query$searchValue.substr(0, 20), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-lg-right\",\n        children: (txData === null || txData === void 0 ? void 0 : (_txData$info = txData.info) === null || _txData$info === void 0 ? void 0 : _txData$info.result.err) ? \"Failed\" : \"Success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Timestamp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-lg-right\",\n        children: (txData === null || txData === void 0 ? void 0 : (_txData$info2 = txData.info) === null || _txData$info2 === void 0 ? void 0 : _txData$info2.timestamp) !== \"unavailable\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: txData === null || txData === void 0 ? void 0 : (_txData$info3 = txData.info) === null || _txData$info3 === void 0 ? void 0 : _txData$info3.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Unavailable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Confirmation Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-lg-right text-uppercase\",\n        children: (txData === null || txData === void 0 ? void 0 : (_txData$info4 = txData.info) === null || _txData$info4 === void 0 ? void 0 : _txData$info4.confirmationStatus) || \"Unknown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Confirmations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-lg-right text-uppercase\",\n        children: txData === null || txData === void 0 ? void 0 : (_txData$info5 = txData.info) === null || _txData$info5 === void 0 ? void 0 : _txData$info5.confirmations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-lg-right\",\n        children: txData === null || txData === void 0 ? void 0 : (_txData$info6 = txData.info) === null || _txData$info6 === void 0 ? void 0 : _txData$info6.slot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TxDetailsCard, \"1LdhvK2uO9/UBHWdkAs8/jPeQIk=\", false, function () {\n  return [useAtom];\n});\n\n_c = TxDetailsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TxDetailsCard\");","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/src/SearchResult/TxDetailsCard.tsx"],"names":["Connection","clusterApiUrl","useEffect","useState","useAtom","queryAtom","TxDetailsCard","query","txData","setTxData","getData","console","log","url","replace","connection","searchValue","undefined","getSignatureStatus","searchTransactionHistory","value","info","confirmations","blockTime","getBlockTime","slot","timestamp","confirmationStatus","result","err","data","signature","substr"],"mappings":";;;;;;;AACA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,iBAA1C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAkBA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AAAA;;AACtC,iBAAgBF,OAAO,CAACC,SAAD,CAAvB;AAAA;AAAA,MAAOE,KAAP;;AACA,kBAA4BJ,QAAQ,EAApC;AAAA;AAAA,MAAOK,MAAP;AAAA,MAAeC,SAAf;;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT,CAJsC,CAQtC;;AARsC,WASvBA,OATuB;AAAA;AAAA;;AAAA;AAAA,wEAStC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACEC,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACMC,cAAAA,GAFR,GAEcZ,aAAa,CAAC,QAAD,CAAb,CAAwBa,OAAxB,CAAgC,KAAhC,EAAuC,cAAvC,CAFd;AAGQC,cAAAA,UAHR,GAGqB,IAAIf,UAAJ,CAAea,GAAf,EAAoB,WAApB,CAHrB;AAAA;;AAAA,oBAOQN,KAAK,CAACS,WAAN,KAAsBC,SAP9B;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQ8BF,UAAU,CAACG,kBAAX,CACtBX,KAAK,CAACS,WADgB,EAEtB;AACEG,gBAAAA,wBAAwB,EAAE;AAD5B,eAFsB,CAR9B;;AAAA;AAAA;AAQcC,cAAAA,KARd,yBAQcA,KARd;AAeUC,cAAAA,IAfV,GAeiB,IAfjB;;AAAA,oBAgBUD,KAAK,KAAK,IAhBpB;AAAA;AAAA;AAAA;;AAkBQ,kBAAI,OAAOA,KAAK,CAACE,aAAb,KAA+B,QAAnC,EAA6C;AAC3CA,gBAAAA,aAAa,GAAGF,KAAK,CAACE,aAAtB;AACD,eAFD,MAEO;AACLA,gBAAAA,aAAa,GAAG,KAAhB;AACD;;AAEGC,cAAAA,SAxBZ,GAwBwB,IAxBxB;AAAA;AAAA;AAAA,qBA0B4BR,UAAU,CAACS,YAAX,CAAwBJ,KAAK,CAACK,IAA9B,CA1B5B;;AAAA;AA0BUF,cAAAA,SA1BV;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4BUZ,cAAAA,OAAO,CAACC,GAAR;;AA5BV;AA8BYc,cAAAA,SA9BZ,GA+BUH,SAAS,KAAK,IAAd,GAAqBA,SAArB,GAAiC,aA/B3C;AAiCQF,cAAAA,IAAI,GAAG;AACLI,gBAAAA,IAAI,EAAEL,KAAK,CAACK,IADP;AAELC,gBAAAA,SAAS,EAATA,SAFK;AAGLJ,gBAAAA,aAAa,EAAbA,aAHK;AAILK,gBAAAA,kBAAkB,EAAEP,KAAK,CAACO,kBAJrB;AAKLC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,GAAG,EAAET,KAAK,CAACS;AAAb;AALH,eAAP;;AAjCR;AAyCMlB,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBS,IAApB;AACAS,cAAAA,IAAI,GAAG;AAAEC,gBAAAA,SAAS,EAAExB,KAAK,CAACS,WAAnB;AAAgCK,gBAAAA,IAAI,EAAJA;AAAhC,eAAP;AACAZ,cAAAA,SAAS,CAACqB,IAAD,CAAT;;AA3CN;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8CInB,cAAAA,OAAO,CAACC,GAAR;;AA9CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATsC;AAAA;AAAA;;AA2DtC,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,yCAA+BL,KAAK,CAACS,WAArC,uDAA+B,mBAAmBgB,MAAnB,CAA0B,CAA1B,EAA6B,EAA7B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBACG,CAAAxB,MAAM,SAAN,IAAAA,MAAM,WAAN,4BAAAA,MAAM,CAAEa,IAAR,8DAAcO,MAAd,CAAqBC,GAArB,IAA2B,QAA3B,GAAsC;AADzC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAaE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBACG,CAAArB,MAAM,SAAN,IAAAA,MAAM,WAAN,6BAAAA,MAAM,CAAEa,IAAR,gEAAcK,SAAd,MAA4B,aAA5B,gBACC;AAAA,oBAAIlB,MAAJ,aAAIA,MAAJ,wCAAIA,MAAM,CAAEa,IAAZ,kDAAI,cAAcK;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAwBE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,8BAAd;AAAA,kBACG,CAAAlB,MAAM,SAAN,IAAAA,MAAM,WAAN,6BAAAA,MAAM,CAAEa,IAAR,gEAAcM,kBAAd,KAAoC;AADvC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF,eA+BE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,8BAAd;AAAA,kBACGnB,MADH,aACGA,MADH,wCACGA,MAAM,CAAEa,IADX,kDACG,cAAcC;AADjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BF,eAsCE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBAA+Bd,MAA/B,aAA+BA,MAA/B,wCAA+BA,MAAM,CAAEa,IAAvC,kDAA+B,cAAcI;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;;GAxGuBnB,a;UACNF,O;;;KADME,a","sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\nimport { Connection, clusterApiUrl } from \"@solana/web3.js\";\nimport { useEffect, useState } from \"react\";\n\nimport { useAtom } from \"jotai\";\nimport { queryAtom } from \"../state/searchValue\";\n\nexport type Confirmations = number | \"max\";\nexport type Timestamp = number | \"unavailable\";\n\nexport type Data = {\n  signature: string;\n  info: {\n    slot: number;\n    timestamp: Timestamp;\n    confirmations: Confirmations;\n    confirmationStatus: \"processed\" | \"confirmed\" | \"finalized\" | undefined;\n    result: {\n      err: string | {} | null;\n    };\n  } | null;\n};\n\nexport default function TxDetailsCard() {\n  const [query] = useAtom(queryAtom);\n  const [txData, setTxData] = useState<Data>();\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // let data;\n  async function getData() {\n    console.log(\"Hello\");\n    const url = clusterApiUrl(\"devnet\").replace(\"api\", \"explorer-api\");\n    const connection = new Connection(url, \"finalized\");\n\n    let data;\n    try {\n      if (query.searchValue !== undefined) {\n        const { value } = await connection.getSignatureStatus(\n          query.searchValue,\n          {\n            searchTransactionHistory: true,\n          }\n        );\n\n        let info = null;\n        if (value !== null) {\n          let confirmations: Confirmations;\n          if (typeof value.confirmations === \"number\") {\n            confirmations = value.confirmations;\n          } else {\n            confirmations = \"max\";\n          }\n\n          let blockTime = null;\n          try {\n            blockTime = await connection.getBlockTime(value.slot);\n          } catch (error) {\n            console.log(error);\n          }\n          let timestamp: Timestamp =\n            blockTime !== null ? blockTime : \"unavailable\";\n\n          info = {\n            slot: value.slot,\n            timestamp,\n            confirmations,\n            confirmationStatus: value.confirmationStatus,\n            result: { err: value.err },\n          };\n        }\n        console.log('info', info)\n        data = { signature: query.searchValue, info };\n        setTxData(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"container mt-n3\">\n      <tr>\n        <td>Signature</td>\n        <td className=\"text-lg-right\">{query.searchValue?.substr(0, 20) }...</td>\n      </tr>\n\n      <tr>\n        <td>Result</td>\n        <td className=\"text-lg-right\">\n          {txData?.info?.result.err ? \"Failed\" : \"Success\"}\n        </td>\n      </tr>\n\n      <tr>\n        <td>Timestamp</td>\n        <td className=\"text-lg-right\">\n          {txData?.info?.timestamp !== \"unavailable\" ? (\n            <p>{txData?.info?.timestamp}</p>\n          ) : (\n            <p>Unavailable</p>\n          )}\n        </td>\n      </tr>\n\n      <tr>\n        <td>Confirmation Status</td>\n        <td className=\"text-lg-right text-uppercase\">\n          {txData?.info?.confirmationStatus || \"Unknown\"}\n        </td>\n      </tr>\n\n      <tr>\n        <td>Confirmations</td>\n        <td className=\"text-lg-right text-uppercase\">\n          {txData?.info?.confirmations}\n        </td>\n      </tr>\n\n      <tr>\n        <td>Block</td>\n        <td className=\"text-lg-right\">{txData?.info?.slot}</td>\n      </tr>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}