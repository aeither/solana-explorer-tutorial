{"version":3,"sources":["../../../src/components/switch.ts"],"names":["switchAnatomy","parts","calc","cssVar","mode","$width","$height","$diff","diffValue","subtract","$translateX","baseStyleTrack","props","colorScheme","c","borderRadius","p","width","reference","height","transitionProperty","transitionDuration","bg","_focus","boxShadow","_disabled","opacity","cursor","_checked","baseStyleThumb","transform","baseStyle","container","variable","_rtl","negate","toString","track","thumb","sizes","sm","md","lg","defaultProps","size","keys"],"mappings":"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","sourcesContent":["import { switchAnatomy as parts } from \"@chakra-ui/anatomy\"\nimport type {\n  PartsStyleFunction,\n  PartsStyleObject,\n  SystemStyleFunction,\n  SystemStyleObject,\n} from \"@chakra-ui/theme-tools\"\nimport { calc, cssVar, mode } from \"@chakra-ui/theme-tools\"\n\nconst $width = cssVar(\"switch-track-width\")\nconst $height = cssVar(\"switch-track-height\")\n\nconst $diff = cssVar(\"switch-track-diff\")\nconst diffValue = calc.subtract($width, $height)\n\nconst $translateX = cssVar(\"switch-thumb-x\")\n\nconst baseStyleTrack: SystemStyleFunction = (props) => {\n  const { colorScheme: c } = props\n\n  return {\n    borderRadius: \"full\",\n    p: \"2px\",\n    width: [$width.reference],\n    height: [$height.reference],\n    transitionProperty: \"common\",\n    transitionDuration: \"fast\",\n    bg: mode(\"gray.300\", \"whiteAlpha.400\")(props),\n    _focus: {\n      boxShadow: \"outline\",\n    },\n    _disabled: {\n      opacity: 0.4,\n      cursor: \"not-allowed\",\n    },\n    _checked: {\n      bg: mode(`${c}.500`, `${c}.200`)(props),\n    },\n  }\n}\n\nconst baseStyleThumb: SystemStyleObject = {\n  bg: \"white\",\n  transitionProperty: \"transform\",\n  transitionDuration: \"normal\",\n  borderRadius: \"inherit\",\n  width: [$height.reference],\n  height: [$height.reference],\n  _checked: {\n    transform: `translateX(${$translateX.reference})`,\n  },\n}\n\nconst baseStyle: PartsStyleFunction<typeof parts> = (props) => ({\n  container: {\n    [$diff.variable]: diffValue,\n    [$translateX.variable]: $diff.reference,\n    _rtl: {\n      [$translateX.variable]: calc($diff).negate().toString(),\n    },\n  },\n  track: baseStyleTrack(props),\n  thumb: baseStyleThumb,\n})\n\nconst sizes: Record<string, PartsStyleObject<typeof parts>> = {\n  sm: {\n    container: {\n      [$width.variable]: \"1.375rem\",\n      [$height.variable]: \"0.75rem\",\n    },\n  },\n  md: {\n    container: {\n      [$width.variable]: \"1.875rem\",\n      [$height.variable]: \"1rem\",\n    },\n  },\n  lg: {\n    container: {\n      [$width.variable]: \"2.875rem\",\n      [$height.variable]: \"1.5rem\",\n    },\n  },\n}\n\nconst defaultProps = {\n  size: \"md\",\n  colorScheme: \"blue\",\n}\n\nexport default {\n  parts: parts.keys,\n  baseStyle,\n  sizes,\n  defaultProps,\n}\n"],"file":"switch.js"}