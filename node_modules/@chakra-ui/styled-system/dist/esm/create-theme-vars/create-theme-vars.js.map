{"version":3,"sources":["../../../src/create-theme-vars/create-theme-vars.ts"],"names":["walkObject","calc","cssVar","createThemeVars","target","options","context","cssMap","cssVars","value","path","firstKey","handler","tokenHandlerMap","defaultHandler","Object","assign","space","keys","properties","referenceKeys","negativeLookupKey","join","negativeVarKey","variable","reference","undefined","cssVarPrefix","negativeValue","negate","varRef","var","lookupKey","varKey"],"mappings":";;AAAA,SAAeA,UAAf,QAAiC,kBAAjC;AAEA,SAASC,IAAT,QAA8B,QAA9B;AACA,SAASC,MAAT,QAAuB,WAAvB;AAWA,OAAO,SAASC,eAAT,CAAyBC,MAAzB,EAAuCC,OAAvC,EAAwE;AAC7E,MAAMC,OAAkB,GAAG;AACzBC,IAAAA,MAAM,EAAE,EADiB;AAEzBC,IAAAA,OAAO,EAAE;AAFgB,GAA3B;AAKAR,EAAAA,UAAU,CAACI,MAAD,EAAS,CAACK,KAAD,EAAQC,IAAR,KAAiB;AAAA;;AAClC;AACA,QAAM,CAACC,QAAD,IAAaD,IAAnB;AAEA,QAAME,OAAO,4BAAGC,eAAe,CAACF,QAAD,CAAlB,oCAAgCE,eAAe,CAACC,cAA7D;AAEA,QAAM;AAAEN,MAAAA,OAAF;AAAWD,MAAAA;AAAX,QAAsBK,OAAO,CAACF,IAAD,EAAOD,KAAP,EAAcJ,OAAd,CAAnC;AACAU,IAAAA,MAAM,CAACC,MAAP,CAAcV,OAAO,CAACE,OAAtB,EAA+BA,OAA/B;AACAO,IAAAA,MAAM,CAACC,MAAP,CAAcV,OAAO,CAACC,MAAtB,EAA8BA,MAA9B;AACD,GATS,CAAV;AAWA,SAAOD,OAAP;AACD;;AAQD;AACA;AACA;AACA,IAAMO,eAEL,GAAG;AACFI,EAAAA,KAAK,EAAE,CAACC,IAAD,EAAOT,KAAP,EAAcJ,OAAd,KAA0B;AAC/B,QAAMc,UAAU,GAAGN,eAAe,CAACC,cAAhB,CAA+BI,IAA/B,EAAqCT,KAArC,EAA4CJ,OAA5C,CAAnB;AACA,QAAM,CAACM,QAAD,EAAW,GAAGS,aAAd,IAA+BF,IAArC;AAEA,QAAMG,iBAAiB,GAAMV,QAAN,UAAmBS,aAAa,CAACE,IAAd,CAAmB,GAAnB,CAA1C;AACA,QAAMC,cAAc,GAAGL,IAAI,CAACI,IAAL,CAAU,GAAV,CAAvB;AACA,QAAM;AAAEE,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA0BvB,MAAM,CACpCqB,cADoC,EAEpCG,SAFoC,EAGpCrB,OAAO,CAACsB,YAH4B,CAAtC;AAMA,QAAMC,aAAa,GAAG3B,IAAI,CAAC4B,MAAL,CAAYpB,KAAZ,CAAtB;AACA,QAAMqB,MAAM,GAAG7B,IAAI,CAAC4B,MAAL,CAAYJ,SAAZ,CAAf;AAEA,WAAO;AACLjB,MAAAA,OAAO,EAAEW,UAAU,CAACX,OADf;AAELD,MAAAA,MAAM,eACDY,UAAU,CAACZ,MADV;AAEJ,SAACc,iBAAD,GAAqB;AACnBZ,UAAAA,KAAK,OAAKmB,aADS;AAEnBG,UAAAA,GAAG,OAAKP,QAFW;AAGnBM,UAAAA;AAHmB;AAFjB;AAFD,KAAP;AAWD,GA3BC;AA4BFhB,EAAAA,cAAc,EAAE,CAACI,IAAD,EAAOT,KAAP,EAAcJ,OAAd,KAA0B;AACxC,QAAM2B,SAAS,GAAGd,IAAI,CAACI,IAAL,CAAU,GAAV,CAAlB;AACA,QAAMW,MAAM,GAAGf,IAAI,CAACI,IAAL,CAAU,GAAV,CAAf;AAEA,QAAM;AAAEE,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA0BvB,MAAM,CACpC+B,MADoC,EAEpCP,SAFoC,EAGpCrB,OAAO,CAACsB,YAH4B,CAAtC;AAMA,WAAO;AACLnB,MAAAA,OAAO,EAAE;AACP,SAACgB,QAAD,GAAYf;AADL,OADJ;AAILF,MAAAA,MAAM,EAAE;AACN,SAACyB,SAAD,GAAa;AACXvB,UAAAA,KADW;AAEXsB,UAAAA,GAAG,EAAEP,QAFM;AAGXM,UAAAA,MAAM,EAAEL;AAHG;AADP;AAJH,KAAP;AAYD;AAlDC,CAFJ","sourcesContent":["import { Dict, walkObject } from \"@chakra-ui/utils\"\nimport { ThemeScale } from \"./theme-tokens\"\nimport { calc, Operand } from \"./calc\"\nimport { cssVar } from \"./css-var\"\n\nexport interface CreateThemeVarsOptions {\n  cssVarPrefix?: string\n}\n\nexport interface ThemeVars {\n  cssVars: Dict\n  cssMap: Dict\n}\n\nexport function createThemeVars(target: Dict, options: CreateThemeVarsOptions) {\n  const context: ThemeVars = {\n    cssMap: {},\n    cssVars: {},\n  }\n\n  walkObject(target, (value, path) => {\n    // firstKey will be e.g. \"space\"\n    const [firstKey] = path\n\n    const handler = tokenHandlerMap[firstKey] ?? tokenHandlerMap.defaultHandler\n\n    const { cssVars, cssMap } = handler(path, value, options)\n    Object.assign(context.cssVars, cssVars)\n    Object.assign(context.cssMap, cssMap)\n  })\n\n  return context\n}\n\ntype TokenHandler = (\n  keys: string[],\n  value: unknown | { reference: string },\n  options: CreateThemeVarsOptions,\n) => ThemeVars\n\n/**\n * Define transformation handlers for ThemeScale\n */\nconst tokenHandlerMap: Partial<Record<ThemeScale, TokenHandler>> & {\n  defaultHandler: TokenHandler\n} = {\n  space: (keys, value, options) => {\n    const properties = tokenHandlerMap.defaultHandler(keys, value, options)\n    const [firstKey, ...referenceKeys] = keys\n\n    const negativeLookupKey = `${firstKey}.-${referenceKeys.join(\".\")}`\n    const negativeVarKey = keys.join(\"-\")\n    const { variable, reference } = cssVar(\n      negativeVarKey,\n      undefined,\n      options.cssVarPrefix,\n    )\n\n    const negativeValue = calc.negate(value as Operand)\n    const varRef = calc.negate(reference)\n\n    return {\n      cssVars: properties.cssVars,\n      cssMap: {\n        ...properties.cssMap,\n        [negativeLookupKey]: {\n          value: `${negativeValue}`,\n          var: `${variable}`,\n          varRef,\n        },\n      },\n    }\n  },\n  defaultHandler: (keys, value, options) => {\n    const lookupKey = keys.join(\".\")\n    const varKey = keys.join(\"-\")\n\n    const { variable, reference } = cssVar(\n      varKey,\n      undefined,\n      options.cssVarPrefix,\n    )\n\n    return {\n      cssVars: {\n        [variable]: value,\n      },\n      cssMap: {\n        [lookupKey]: {\n          value,\n          var: variable,\n          varRef: reference,\n        },\n      },\n    }\n  },\n}\n"],"file":"create-theme-vars.js"}