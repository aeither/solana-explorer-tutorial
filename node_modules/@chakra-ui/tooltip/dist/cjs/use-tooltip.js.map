{"version":3,"sources":["../../src/use-tooltip.ts"],"names":["useTooltip","props","openDelay","closeDelay","closeOnClick","closeOnMouseDown","onOpenProp","onOpen","onCloseProp","onClose","placement","id","isOpenProp","isOpen","defaultIsOpen","arrowSize","arrowShadowColor","arrowPadding","modifiers","isDisabled","gutter","offset","htmlProps","enabled","referenceRef","getPopperProps","getArrowInnerProps","getArrowProps","tooltipId","ref","React","useRef","enterTimeout","exitTimeout","openWithDelay","useCallback","current","window","setTimeout","closeWithDelay","clearTimeout","onClick","onMouseDown","onKeyDown","event","key","useEffect","getTriggerProps","_ref","triggerProps","onMouseEnter","onFocus","onBlur","undefined","getTooltipPositionerProps","forwardedRef","style","popperCSSVars","getTooltipProps","tooltipProps","role","position","transformOrigin","varRef","show","hide"],"mappings":"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","sourcesContent":["import { useDisclosure, useEventListener, useId } from \"@chakra-ui/hooks\"\nimport {\n  Placement,\n  usePopper,\n  UsePopperProps,\n  popperCSSVars,\n} from \"@chakra-ui/popper\"\nimport { callAllHandlers, px } from \"@chakra-ui/utils\"\nimport { mergeRefs, PropGetter } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\n\nexport interface UseTooltipProps\n  extends Pick<\n    UsePopperProps,\n    \"modifiers\" | \"gutter\" | \"offset\" | \"arrowPadding\"\n  > {\n  /**\n   * Delay (in ms) before showing the tooltip\n   * @default 0ms\n   */\n  openDelay?: number\n  /**\n   * Delay (in ms) before hiding the tooltip\n   * @default 0ms\n   */\n  closeDelay?: number\n  /**\n   * If `true`, the tooltip will hide on click\n   */\n  closeOnClick?: boolean\n  /**\n   * If `true`, the tooltip will hide while the mouse\n   * is down\n   */\n  closeOnMouseDown?: boolean\n  /**\n   * Callback to run when the tooltip shows\n   */\n  onOpen?(): void\n  /**\n   * Callback to run when the tooltip hides\n   */\n  onClose?(): void\n  /**\n   * The Popper.js placement of the tooltip\n   */\n  placement?: Placement\n  /**\n   * Custom `id` to use in place of `uuid`\n   */\n  id?: string\n  /**\n   * If `true`, the tooltip will be shown (in controlled mode)\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the tooltip will be initially shown\n   */\n  defaultIsOpen?: boolean\n  isDisabled?: boolean\n  arrowSize?: number\n  arrowShadowColor?: string\n}\n\nexport function useTooltip(props: UseTooltipProps = {}) {\n  const {\n    openDelay = 0,\n    closeDelay = 0,\n    closeOnClick = true,\n    closeOnMouseDown,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    placement,\n    id,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    arrowSize = 10,\n    arrowShadowColor,\n    arrowPadding,\n    modifiers,\n    isDisabled,\n    gutter,\n    offset,\n    ...htmlProps\n  } = props\n\n  const { isOpen, onOpen, onClose } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n  })\n\n  const {\n    referenceRef,\n    getPopperProps,\n    getArrowInnerProps,\n    getArrowProps,\n  } = usePopper({\n    enabled: isOpen,\n    placement,\n    arrowPadding,\n    modifiers,\n    gutter,\n    offset,\n  })\n\n  const tooltipId = useId(id, \"tooltip\")\n\n  const ref = React.useRef<any>(null)\n\n  const enterTimeout = React.useRef<number>()\n  const exitTimeout = React.useRef<number>()\n\n  const openWithDelay = React.useCallback(() => {\n    if (!isDisabled) {\n      enterTimeout.current = window.setTimeout(onOpen, openDelay)\n    }\n  }, [isDisabled, onOpen, openDelay])\n\n  const closeWithDelay = React.useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current)\n    }\n    exitTimeout.current = window.setTimeout(onClose, closeDelay)\n  }, [closeDelay, onClose])\n\n  const onClick = React.useCallback(() => {\n    if (closeOnClick) {\n      closeWithDelay()\n    }\n  }, [closeOnClick, closeWithDelay])\n\n  const onMouseDown = React.useCallback(() => {\n    if (closeOnMouseDown) {\n      closeWithDelay()\n    }\n  }, [closeOnMouseDown, closeWithDelay])\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    if (isOpen && event.key === \"Escape\") {\n      closeWithDelay()\n    }\n  }\n\n  useEventListener(\"keydown\", onKeyDown)\n\n  React.useEffect(\n    () => () => {\n      clearTimeout(enterTimeout.current)\n      clearTimeout(exitTimeout.current)\n    },\n    [],\n  )\n\n  /**\n   * This allows for catching mouseleave events when the tooltip\n   * trigger is disabled. There's currently a known issue in\n   * React regarding the onMouseLeave polyfill.\n   * @see https://github.com/facebook/react/issues/11972\n   */\n  useEventListener(\"mouseleave\", closeWithDelay, () => ref.current)\n\n  const getTriggerProps: PropGetter = React.useCallback(\n    (props = {}, _ref = null) => {\n      const triggerProps = {\n        ...props,\n        ref: mergeRefs(ref, _ref, referenceRef),\n        onMouseEnter: callAllHandlers(props.onMouseEnter, openWithDelay),\n        onClick: callAllHandlers(props.onClick, onClick),\n        onMouseDown: callAllHandlers(props.onMouseDown, onMouseDown),\n        onFocus: callAllHandlers(props.onFocus, openWithDelay),\n        onBlur: callAllHandlers(props.onBlur, closeWithDelay),\n        \"aria-describedby\": isOpen ? tooltipId : undefined,\n      }\n\n      return triggerProps\n    },\n    [\n      openWithDelay,\n      closeWithDelay,\n      onMouseDown,\n      isOpen,\n      tooltipId,\n      onClick,\n      referenceRef,\n    ],\n  )\n\n  const getTooltipPositionerProps: PropGetter = React.useCallback(\n    (props = {}, forwardedRef = null) =>\n      getPopperProps(\n        {\n          ...props,\n          style: {\n            ...props.style,\n            [popperCSSVars.arrowSize.var]: arrowSize\n              ? px(arrowSize)\n              : undefined,\n            [popperCSSVars.arrowShadowColor.var]: arrowShadowColor,\n          },\n        },\n        forwardedRef,\n      ),\n    [getPopperProps, arrowSize, arrowShadowColor],\n  )\n\n  const getTooltipProps = React.useCallback(\n    (props = {}, _ref = null) => {\n      const tooltipProps = {\n        ref: _ref,\n        ...htmlProps,\n        ...props,\n        id: tooltipId,\n        role: \"tooltip\",\n        style: {\n          ...props.style,\n          position: \"relative\",\n          transformOrigin: popperCSSVars.transformOrigin.varRef,\n        },\n      }\n\n      return tooltipProps\n    },\n    [htmlProps, tooltipId],\n  )\n\n  return {\n    isOpen,\n    show: openWithDelay,\n    hide: closeWithDelay,\n    getTriggerProps,\n    getTooltipProps,\n    getTooltipPositionerProps,\n    getArrowProps,\n    getArrowInnerProps,\n  }\n}\n\nexport type UseTooltipReturn = ReturnType<typeof useTooltip>\n"],"file":"use-tooltip.js"}