{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/lin/Documents/Projects/solana-explorer-tutorial/src/SearchResult/HistoryCard.tsx\",\n    _s = $RefreshSig$();\n\nimport { Connection, clusterApiUrl } from \"@solana/web3.js\";\nimport { useEffect, useState } from \"react\";\nimport Moment from \"react-moment\";\nimport { Table, Tbody, Tr, Td, Heading, VStack } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HistoryCard(_ref) {\n  _s();\n\n  var _this = this;\n\n  var pubkey = _ref.pubkey;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      history = _useState2[0],\n      setHistory = _useState2[1];\n\n  useEffect(function () {\n    getHistory();\n  }, [pubkey]);\n\n  function getHistory() {\n    return _getHistory.apply(this, arguments);\n  }\n\n  function _getHistory() {\n    _getHistory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, connection, options, fetched;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"Hello\");\n              url = clusterApiUrl(\"devnet\").replace(\"api\", \"explorer-api\");\n              connection = new Connection(url);\n              options = {\n                limit: 25\n              };\n              _context.next = 6;\n              return connection.getConfirmedSignaturesForAddress2(pubkey, options);\n\n            case 6:\n              fetched = _context.sent;\n              setHistory({\n                fetched: fetched\n              });\n              console.log(fetched);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getHistory.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    my: \"2\",\n    w: \"100%\",\n    align: \"start\",\n    background: \"white\",\n    rounded: \"lg\",\n    p: \"4\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      size: \"md\",\n      children: \"History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), (history === null || history === void 0 ? void 0 : history.fetched) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        variant: \"simple\",\n        children: /*#__PURE__*/_jsxDEV(Tbody, {\n          children: history.fetched.map(function (item, i) {\n            return /*#__PURE__*/_jsxDEV(Tr, {\n              children: [/*#__PURE__*/_jsxDEV(Td, {\n                fontSize: \"sm\",\n                isTruncated: true,\n                children: [item.signature.substr(0, 20), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Td, {\n                children: item.slot\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Td, {\n                isNumeric: true,\n                children: (item === null || item === void 0 ? void 0 : item.blockTime) ? /*#__PURE__*/_jsxDEV(Moment, {\n                  date: item.blockTime * 1000,\n                  fromNow: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 23\n                }, _this) : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Td, {\n                children: (item === null || item === void 0 ? void 0 : item.err) ? \"Failed\" : \"Success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Td, {\n                children: (item === null || item === void 0 ? void 0 : item.memo) ? item.memo : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, _this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" No History \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HistoryCard, \"m2zlKD6z2d5JHwcHk/9BlD37tsE=\");\n\n_c = HistoryCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoryCard\");","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/src/SearchResult/HistoryCard.tsx"],"names":["Connection","clusterApiUrl","useEffect","useState","Moment","Table","Tbody","Tr","Td","Heading","VStack","HistoryCard","pubkey","history","setHistory","getHistory","console","log","url","replace","connection","options","limit","getConfirmedSignaturesForAddress2","fetched","map","item","i","signature","substr","slot","blockTime","err","memo"],"mappings":"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","sourcesContent":["import {\n  Connection,\n  clusterApiUrl,\n  PublicKey,\n  ConfirmedSignatureInfo,\n} from \"@solana/web3.js\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport Moment from \"react-moment\";\nimport { Table, Tbody, Tr, Td, Heading, VStack } from \"@chakra-ui/react\";\n\nexport type History = {\n  fetched: ConfirmedSignatureInfo[];\n};\n\nexport default function HistoryCard({ pubkey }: { pubkey: PublicKey }) {\n  const [history, setHistory] = useState<History>();\n  useEffect(() => {\n    getHistory();\n  }, [pubkey]);\n\n  async function getHistory() {\n    console.log(\"Hello\");\n    const url = clusterApiUrl(\"devnet\").replace(\"api\", \"explorer-api\");\n    const connection = new Connection(url);\n    const options = {\n      limit: 25,\n    };\n    const fetched = await connection.getConfirmedSignaturesForAddress2(\n      pubkey,\n      options\n    );\n\n    setHistory({ fetched });\n    console.log(fetched);\n  }\n\n  return (\n    <VStack my=\"2\" w=\"100%\" align=\"start\" background=\"white\" rounded=\"lg\" p=\"4\">\n      <Heading size=\"md\">History</Heading>\n      {history?.fetched ? (\n        <>\n          <Table variant=\"simple\">\n            <Tbody>\n              {history.fetched.map((item, i) => (\n                <Tr key={i}>\n                  <Td fontSize=\"sm\" isTruncated>\n                    {item.signature.substr(0, 20)}...\n                  </Td>\n                  <Td>{item.slot}</Td>\n\n                  <Td isNumeric>\n                    {item?.blockTime ? (\n                      <Moment date={item.blockTime * 1000} fromNow />\n                    ) : (\n                      \"\"\n                    )}\n                  </Td>\n                  <Td>{item?.err ? \"Failed\" : \"Success\"}</Td>\n                  <Td>{item?.memo ? item.memo : \"\"}</Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </Table>\n        </>\n      ) : (\n        <p> No History </p>\n      )}\n    </VStack>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}