{"ast":null,"code":"import { __rest, __assign } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\n\nfunction MotionConfig(_a) {\n  var children = _a.children,\n      config = __rest(_a, [\"children\"]);\n  /**\n   * Inherit props from any parent MotionConfig components\n   */\n\n\n  config = __assign(__assign({}, useContext(MotionConfigContext)), config);\n  /**\n   * Don't allow isStatic to change between renders as it affects how many hooks\n   * motion components fire.\n   */\n\n  config.isStatic = useConstant(function () {\n    return config.isStatic;\n  });\n  /**\n   * Creating a new config context object will re-render every `motion` component\n   * every time it renders. So we only want to create a new one sparingly.\n   */\n\n  var transitionDependency = typeof config.transition === \"object\" ? config.transition.toString() : \"\";\n  var context = useMemo(function () {\n    return config;\n  }, [transitionDependency, config.transformPagePoint]);\n  return React.createElement(MotionConfigContext.Provider, {\n    value: context\n  }, children);\n}\n\nexport { MotionConfig };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/framer-motion/dist/es/components/MotionConfig/index.js"],"names":["__rest","__assign","React","useContext","useMemo","MotionConfigContext","useConstant","MotionConfig","_a","children","config","isStatic","transitionDependency","transition","toString","context","transformPagePoint","createElement","Provider","value"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,OAApC;AACA,SAASC,mBAAT,QAAoC,sCAApC;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,EAAtB,EAA0B;AACtB,MAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAlB;AAAA,MAA4BC,MAAM,GAAGV,MAAM,CAACQ,EAAD,EAAK,CAAC,UAAD,CAAL,CAA3C;AACA;AACJ;AACA;;;AACIE,EAAAA,MAAM,GAAGT,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKE,UAAU,CAACE,mBAAD,CAAf,CAAT,EAAgDK,MAAhD,CAAjB;AACA;AACJ;AACA;AACA;;AACIA,EAAAA,MAAM,CAACC,QAAP,GAAkBL,WAAW,CAAC,YAAY;AAAE,WAAOI,MAAM,CAACC,QAAd;AAAyB,GAAxC,CAA7B;AACA;AACJ;AACA;AACA;;AACI,MAAIC,oBAAoB,GAAG,OAAOF,MAAM,CAACG,UAAd,KAA6B,QAA7B,GACrBH,MAAM,CAACG,UAAP,CAAkBC,QAAlB,EADqB,GAErB,EAFN;AAGA,MAAIC,OAAO,GAAGX,OAAO,CAAC,YAAY;AAAE,WAAOM,MAAP;AAAgB,GAA/B,EAAiC,CAClDE,oBADkD,EAElDF,MAAM,CAACM,kBAF2C,CAAjC,CAArB;AAIA,SAAQd,KAAK,CAACe,aAAN,CAAoBZ,mBAAmB,CAACa,QAAxC,EAAkD;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAlD,EAAsEN,QAAtE,CAAR;AACH;;AAED,SAASF,YAAT","sourcesContent":["import { __rest, __assign } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig(_a) {\n    var children = _a.children, config = __rest(_a, [\"children\"]);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = __assign(__assign({}, useContext(MotionConfigContext)), config);\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(function () { return config.isStatic; });\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    var transitionDependency = typeof config.transition === \"object\"\n        ? config.transition.toString()\n        : \"\";\n    var context = useMemo(function () { return config; }, [\n        transitionDependency,\n        config.transformPagePoint,\n    ]);\n    return (React.createElement(MotionConfigContext.Provider, { value: context }, children));\n}\n\nexport { MotionConfig };\n"]},"metadata":{},"sourceType":"module"}