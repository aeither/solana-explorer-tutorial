{"version":3,"sources":["../../src/modifiers.ts"],"names":["matchWidth","name","enabled","phase","requires","fn","state","styles","popper","width","rects","reference","effect","elements","style","offsetWidth","transformOrigin","setTransformOrigin","setProperty","cssVars","placement","positionArrow","setArrowStyles","overrides","getArrowStyle","arrow","Object","assign","property","value","arrowSize","varRef","height","zIndex","vars","arrowSizeHalf","arrowOffset","startsWith","innerArrow","setInnerArrowStyles","inner","querySelector","transform","background","arrowBg","top","left","position","boxShadow"],"mappings":"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","sourcesContent":["import { Placement, Modifier, State } from \"@popperjs/core\"\nimport { getBoxShadow, toTransformOrigin, cssVars } from \"./utils\"\n\n/* -------------------------------------------------------------------------------------------------\n The match width modifier sets the popper width to match the reference.\n It us useful for custom selects, autocomplete, etc.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const matchWidth: Modifier<\"matchWidth\", any> = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: ({ state }) => {\n    state.styles.popper.width = `${state.rects.reference.width}px`\n  },\n  effect: ({ state }) => () => {\n    const reference = state.elements.reference as HTMLElement\n    state.elements.popper.style.width = `${reference.offsetWidth}px`\n  },\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The transform origin modifier sets the css `transformOrigin` value of the popper\n  based on the dynamic placement state of the popper.\n  \n  Useful when we need to animate/transition the popper.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const transformOrigin: Modifier<\"transformOrigin\", any> = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: ({ state }) => {\n    setTransformOrigin(state)\n  },\n  effect: ({ state }) => () => {\n    setTransformOrigin(state)\n  },\n}\n\nconst setTransformOrigin = (state: State) => {\n  state.elements.popper.style.setProperty(\n    cssVars.transformOrigin.var,\n    toTransformOrigin(state.placement),\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The position arrow modifier adds width, height and overrides the `top/left/right/bottom`\n  styles generated by popper.js to properly position the arrow\n* -----------------------------------------------------------------------------------------------*/\n\nexport const positionArrow: Modifier<\"positionArrow\", any> = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: ({ state }) => {\n    setArrowStyles(state)\n  },\n}\n\nconst setArrowStyles = (state: Partial<State>) => {\n  if (!state.placement) return\n  const overrides = getArrowStyle(state.placement)\n\n  if (state.elements?.arrow && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1,\n    })\n\n    const vars = {\n      [cssVars.arrowSizeHalf.var]: `calc(${cssVars.arrowSize.varRef} / 2)`,\n      [cssVars.arrowOffset.var]: `calc(${cssVars.arrowSizeHalf.varRef} * -1)`,\n    }\n\n    for (const property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property])\n    }\n  }\n}\n\nconst getArrowStyle = (placement: Placement) => {\n  if (placement.startsWith(\"top\")) {\n    return { property: \"bottom\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"bottom\")) {\n    return { property: \"top\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"left\")) {\n    return { property: \"right\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"right\")) {\n    return { property: \"left\", value: cssVars.arrowOffset.varRef }\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The inner arrow modifier, sets the placement styles for the inner arrow that forms\n  the popper arrow tip.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const innerArrow: Modifier<\"innerArrow\", any> = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: ({ state }) => {\n    setInnerArrowStyles(state)\n  },\n  effect: ({ state }) => () => {\n    setInnerArrowStyles(state)\n  },\n}\n\nconst setInnerArrowStyles = (state: State) => {\n  if (!state.elements.arrow) return\n\n  const inner = state.elements.arrow.querySelector(\n    \"[data-popper-arrow-inner]\",\n  ) as HTMLElement | null\n\n  if (!inner) return\n\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: getBoxShadow(state.placement),\n  })\n}\n"],"file":"modifiers.js"}