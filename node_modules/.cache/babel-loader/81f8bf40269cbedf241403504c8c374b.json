{"ast":null,"code":"import { useEffect, useLayoutEffect } from \"react\";\n/**\n * Sort an array of DOM nodes according to the HTML tree order\n * @see http://www.w3.org/TR/html5/infrastructure.html#tree-order\n */\n\nexport function sortNodes(nodes) {\n  return nodes.sort(function (a, b) {\n    var compare = a.compareDocumentPosition(b);\n\n    if (compare & Node.DOCUMENT_POSITION_FOLLOWING || compare & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n      // a < b\n      return -1;\n    }\n\n    if (compare & Node.DOCUMENT_POSITION_PRECEDING || compare & Node.DOCUMENT_POSITION_CONTAINS) {\n      // a > b\n      return 1;\n    }\n\n    if (compare & Node.DOCUMENT_POSITION_DISCONNECTED || compare & Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC) {\n      throw Error(\"Cannot sort the given nodes.\");\n    } else {\n      return 0;\n    }\n  });\n}\nexport var isElement = function isElement(el) {\n  return typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n};\nexport function getNextIndex(current, max, loop) {\n  var next = current + 1;\n  if (loop && next >= max) next = 0;\n  return next;\n}\nexport function getPrevIndex(current, max, loop) {\n  var next = current - 1;\n  if (loop && next < 0) next = max;\n  return next;\n}\nexport var useSafeLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\nexport var cast = function cast(value) {\n  return value;\n};","map":{"version":3,"sources":["../../src/utils.ts"],"names":["compare","a","Node","Error","isElement","el","next","current","loop","useSafeLayoutEffect","cast","value"],"mappings":"AAAA,SAAA,SAAA,EAAA,eAAA,QAAA,OAAA;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAAA,SAAA,CAAA,KAAA,EAAkC;AACvC,SAAO,KAAK,CAAL,IAAA,CAAW,UAAA,CAAA,EAAA,CAAA,EAAU;AAC1B,QAAMA,OAAO,GAAGC,CAAC,CAADA,uBAAAA,CAAhB,CAAgBA,CAAhB;;AAEA,QACED,OAAO,GAAGE,IAAI,CAAdF,2BAAAA,IACAA,OAAO,GAAGE,IAAI,CAFhB,8BAAA,EAGE;AACA;AACA,aAAO,CAAP,CAAA;AACD;;AAED,QACEF,OAAO,GAAGE,IAAI,CAAdF,2BAAAA,IACAA,OAAO,GAAGE,IAAI,CAFhB,0BAAA,EAGE;AACA;AACA,aAAA,CAAA;AACD;;AAED,QACEF,OAAO,GAAGE,IAAI,CAAdF,8BAAAA,IACAA,OAAO,GAAGE,IAAI,CAFhB,yCAAA,EAGE;AACA,YAAMC,KAAK,CAAX,8BAAW,CAAX;AAJF,KAAA,MAKO;AACL,aAAA,CAAA;AACD;AA1BH,GAAO,CAAP;AA4BD;AAED,OAAO,IAAMC,SAAS,GAAIC,SAAbD,SAAaC,CAAAA,EAAD;AAAA,SACvB,OAAA,EAAA,IAAA,QAAA,IAAyB,cAAzB,EAAA,IAA6CA,EAAE,CAAFA,QAAAA,KAAgBH,IAAI,CAD5D,YAAkB;AAAA,CAAlB;AAGP,OAAO,SAAA,YAAA,CAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAmE;AACxE,MAAII,IAAI,GAAGC,OAAO,GAAlB,CAAA;AACA,MAAIC,IAAI,IAAIF,IAAI,IAAhB,GAAA,EAAyBA,IAAI,GAAJA,CAAAA;AACzB,SAAA,IAAA;AACD;AAED,OAAO,SAAA,YAAA,CAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAmE;AACxE,MAAIA,IAAI,GAAGC,OAAO,GAAlB,CAAA;AACA,MAAIC,IAAI,IAAIF,IAAI,GAAhB,CAAA,EAAsBA,IAAI,GAAJA,GAAAA;AACtB,SAAA,IAAA;AACD;AAED,OAAO,IAAMG,mBAAmB,GAC9B,OAAA,MAAA,KAAA,WAAA,GAAA,eAAA,GADK,SAAA;AAGP,OAAO,IAAMC,IAAI,GAAOC,SAAXD,IAAWC,CAAAA,KAAJ;AAAA,SAAb,KAAa;AAAA,CAAb","sourcesContent":["import { useEffect, useLayoutEffect } from \"react\"\n\n/**\n * Sort an array of DOM nodes according to the HTML tree order\n * @see http://www.w3.org/TR/html5/infrastructure.html#tree-order\n */\nexport function sortNodes(nodes: Node[]) {\n  return nodes.sort((a, b) => {\n    const compare = a.compareDocumentPosition(b)\n\n    if (\n      compare & Node.DOCUMENT_POSITION_FOLLOWING ||\n      compare & Node.DOCUMENT_POSITION_CONTAINED_BY\n    ) {\n      // a < b\n      return -1\n    }\n\n    if (\n      compare & Node.DOCUMENT_POSITION_PRECEDING ||\n      compare & Node.DOCUMENT_POSITION_CONTAINS\n    ) {\n      // a > b\n      return 1\n    }\n\n    if (\n      compare & Node.DOCUMENT_POSITION_DISCONNECTED ||\n      compare & Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\n    ) {\n      throw Error(\"Cannot sort the given nodes.\")\n    } else {\n      return 0\n    }\n  })\n}\n\nexport const isElement = (el: any): el is HTMLElement =>\n  typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE\n\nexport function getNextIndex(current: number, max: number, loop: boolean) {\n  let next = current + 1\n  if (loop && next >= max) next = 0\n  return next\n}\n\nexport function getPrevIndex(current: number, max: number, loop: boolean) {\n  let next = current - 1\n  if (loop && next < 0) next = max\n  return next\n}\n\nexport const useSafeLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect\n\nexport const cast = <T>(value: any) => value as T\n"]},"metadata":{},"sourceType":"module"}