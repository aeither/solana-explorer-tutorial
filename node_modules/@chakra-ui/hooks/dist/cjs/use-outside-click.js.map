{"version":3,"sources":["../../src/use-outside-click.ts"],"names":["useOutsideClick","props","ref","handler","enabled","savedHandler","stateRef","isPointerDown","ignoreEmulatedMouseEvents","state","current","onPointerDown","e","isValidEvent","onMouseUp","event","onTouchEnd","doc","addEventListener","removeEventListener","target","button","body","contains"],"mappings":"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","sourcesContent":["import { getOwnerDocument } from \"@chakra-ui/utils\"\nimport { RefObject, useEffect, useRef } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\nexport interface UseOutsideClickProps {\n  /**\n   * Whether the hook is enabled\n   */\n  enabled?: boolean\n  /**\n   * The reference to a DOM element.\n   */\n  ref: RefObject<HTMLElement>\n  /**\n   * Function invoked when a click is triggered outside the referenced element.\n   */\n  handler?: (e: Event) => void\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useOutsideClick(props: UseOutsideClickProps) {\n  const { ref, handler, enabled = true } = props\n  const savedHandler = useCallbackRef(handler)\n\n  const stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n  })\n\n  const state = stateRef.current\n\n  useEffect(() => {\n    if (!enabled) return\n    const onPointerDown: any = (e: PointerEvent) => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true\n      }\n    }\n\n    const onMouseUp: any = (event: MouseEvent) => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false\n        return\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const onTouchEnd = (event: TouchEvent) => {\n      state.ignoreEmulatedMouseEvents = true\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const doc = getOwnerDocument(ref.current)\n    doc.addEventListener(\"mousedown\", onPointerDown, true)\n    doc.addEventListener(\"mouseup\", onMouseUp, true)\n    doc.addEventListener(\"touchstart\", onPointerDown, true)\n    doc.addEventListener(\"touchend\", onTouchEnd, true)\n\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true)\n      doc.removeEventListener(\"mouseup\", onMouseUp, true)\n      doc.removeEventListener(\"touchstart\", onPointerDown, true)\n      doc.removeEventListener(\"touchend\", onTouchEnd, true)\n    }\n  }, [handler, ref, savedHandler, state, enabled])\n}\n\nfunction isValidEvent(event: any, ref: React.RefObject<HTMLElement>) {\n  const target = event.target as HTMLElement\n  if (event.button > 0) return false\n  // if the event target is no longer in the document\n  if (target) {\n    const doc = getOwnerDocument(target)\n    if (!doc.body.contains(target)) return false\n  }\n\n  return !ref.current?.contains(target)\n}\n"],"file":"use-outside-click.js"}