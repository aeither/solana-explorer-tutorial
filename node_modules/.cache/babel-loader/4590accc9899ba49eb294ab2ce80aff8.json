{"ast":null,"code":"import { __assign } from 'tslib';\nimport { noop } from '../noop.js';\n/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\n\nfunction convertBoundingBoxToAxisBox(_a) {\n  var top = _a.top,\n      left = _a.left,\n      right = _a.right,\n      bottom = _a.bottom;\n  return {\n    x: {\n      min: left,\n      max: right\n    },\n    y: {\n      min: top,\n      max: bottom\n    }\n  };\n}\n\nfunction convertAxisBoxToBoundingBox(_a) {\n  var x = _a.x,\n      y = _a.y;\n  return {\n    top: y.min,\n    bottom: y.max,\n    left: x.min,\n    right: x.max\n  };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\n\n\nfunction transformBoundingBox(_a, transformPoint) {\n  var top = _a.top,\n      left = _a.left,\n      bottom = _a.bottom,\n      right = _a.right;\n\n  if (transformPoint === void 0) {\n    transformPoint = noop;\n  }\n\n  var topLeft = transformPoint({\n    x: left,\n    y: top\n  });\n  var bottomRight = transformPoint({\n    x: right,\n    y: bottom\n  });\n  return {\n    top: topLeft.y,\n    left: topLeft.x,\n    bottom: bottomRight.y,\n    right: bottomRight.x\n  };\n}\n/**\n * Create an empty axis box of zero size\n */\n\n\nfunction axisBox() {\n  return {\n    x: {\n      min: 0,\n      max: 1\n    },\n    y: {\n      min: 0,\n      max: 1\n    }\n  };\n}\n\nfunction copyAxisBox(box) {\n  return {\n    x: __assign({}, box.x),\n    y: __assign({}, box.y)\n  };\n}\n/**\n * Create an empty box delta\n */\n\n\nvar zeroDelta = {\n  translate: 0,\n  scale: 1,\n  origin: 0,\n  originPoint: 0\n};\n\nfunction delta() {\n  return {\n    x: __assign({}, zeroDelta),\n    y: __assign({}, zeroDelta)\n  };\n}\n\nexport { axisBox, convertAxisBoxToBoundingBox, convertBoundingBoxToAxisBox, copyAxisBox, delta, transformBoundingBox };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/framer-motion/dist/es/utils/geometry/index.js"],"names":["__assign","noop","convertBoundingBoxToAxisBox","_a","top","left","right","bottom","x","min","max","y","convertAxisBoxToBoundingBox","transformBoundingBox","transformPoint","topLeft","bottomRight","axisBox","copyAxisBox","box","zeroDelta","translate","scale","origin","originPoint","delta"],"mappings":"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","sourcesContent":["import { __assign } from 'tslib';\nimport { noop } from '../noop.js';\n\n/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToAxisBox(_a) {\n    var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertAxisBoxToBoundingBox(_a) {\n    var x = _a.x, y = _a.y;\n    return {\n        top: y.min,\n        bottom: y.max,\n        left: x.min,\n        right: x.max,\n    };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoundingBox(_a, transformPoint) {\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n    if (transformPoint === void 0) { transformPoint = noop; }\n    var topLeft = transformPoint({ x: left, y: top });\n    var bottomRight = transformPoint({ x: right, y: bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n/**\n * Create an empty axis box of zero size\n */\nfunction axisBox() {\n    return { x: { min: 0, max: 1 }, y: { min: 0, max: 1 } };\n}\nfunction copyAxisBox(box) {\n    return {\n        x: __assign({}, box.x),\n        y: __assign({}, box.y),\n    };\n}\n/**\n * Create an empty box delta\n */\nvar zeroDelta = {\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n};\nfunction delta() {\n    return {\n        x: __assign({}, zeroDelta),\n        y: __assign({}, zeroDelta),\n    };\n}\n\nexport { axisBox, convertAxisBoxToBoundingBox, convertBoundingBoxToAxisBox, copyAxisBox, delta, transformBoundingBox };\n"]},"metadata":{},"sourceType":"module"}