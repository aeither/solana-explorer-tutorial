{"version":3,"sources":["../../src/progress.tsx"],"names":["ProgressLabel","props","styles","labelStyles","top","left","width","textAlign","position","transform","label","__DEV__","displayName","ProgressFilledTrack","min","max","value","isIndeterminate","rest","progress","trackStyles","height","filledTrack","percent","style","bind","Progress","hasStripe","isAnimated","children","propBorderRadius","borderRadius","ariaLabel","ariaLabelledBy","track","stripAnimation","animation","stripe","shouldAddStripe","shouldAnimateStripe","css","willChange","minWidth","overflow"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  Interpolation,\n  omitThemingProps,\n  StylesProvider,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport {\n  getProgressProps,\n  GetProgressPropsOptions,\n  progress,\n  stripe,\n} from \"./progress.utils\"\n\nexport interface ProgressLabelProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * ProgressLabel is used to show the numeric value of the progress.\n * @see Docs https://chakra-ui.com/progress\n */\nexport const ProgressLabel: React.FC<ProgressLabelProps> = (props) => {\n  const styles = useStyles()\n  const labelStyles: SystemStyleObject = {\n    top: \"50%\",\n    left: \"50%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\",\n    ...styles.label,\n  }\n  return <chakra.div {...props} __css={labelStyles} />\n}\n\nif (__DEV__) {\n  ProgressLabel.displayName = \"ProgressLabel\"\n}\n\nexport interface ProgressFilledTrackProps\n  extends HTMLChakraProps<\"div\">,\n    GetProgressPropsOptions {}\n\n/**\n * ProgressFilledTrack (Linear)\n *\n * The progress component that visually indicates the current level of the progress bar.\n * It applies `background-color` and changes its width.\n *\n * @see Docs https://chakra-ui.com/progress\n */\nconst ProgressFilledTrack: React.FC<ProgressFilledTrackProps> = (props) => {\n  const { min, max, value, isIndeterminate, ...rest } = props\n  const progress = getProgressProps({ value, min, max, isIndeterminate })\n\n  const styles = useStyles()\n  const trackStyles = {\n    height: \"100%\",\n    ...styles.filledTrack,\n  }\n\n  return (\n    <chakra.div\n      style={{\n        width: `${progress.percent}%`,\n        ...rest.style,\n      }}\n      {...progress.bind}\n      {...rest}\n      __css={trackStyles}\n    />\n  )\n}\n\nexport interface ProgressTrackProps extends HTMLChakraProps<\"div\"> {}\n\ninterface ProgressOptions {\n  /**\n   * The `value` of the progress indicator.\n   * If `undefined` the progress bar will be in `indeterminate` state\n   */\n  value?: number\n  /**\n   * The minimum value of the progress\n   */\n  min?: number\n  /**\n   * The maximum value of the progress\n   */\n  max?: number\n  /**\n   * If `true`, the progress bar will show stripe\n   */\n  hasStripe?: boolean\n  /**\n   * If `true`, and hasStripe is `true`, the stripes will be animated\n   */\n  isAnimated?: boolean\n  /**\n   * If `true`, the progress will be indeterminate and the `value`\n   * prop will be ignored\n   */\n  isIndeterminate?: boolean\n}\n\nexport interface ProgressProps\n  extends ProgressOptions,\n    ThemingProps<\"Progress\">,\n    HTMLChakraProps<\"div\"> {}\n\n/**\n * Progress (Linear)\n *\n * Progress is used to display the progress status for a task that takes a long\n * time or consists of several steps.\n *\n * It includes accessible attributes to help assistive technologies understand\n * and speak the progress values.\n *\n * @see Docs https://chakra-ui.com/progress\n */\nexport const Progress: React.FC<ProgressProps> = (props) => {\n  const {\n    value,\n    min = 0,\n    max = 100,\n    hasStripe,\n    isAnimated,\n    children,\n    borderRadius: propBorderRadius,\n    isIndeterminate,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    ...rest\n  } = omitThemingProps(props)\n\n  const styles = useMultiStyleConfig(\"Progress\", props)\n\n  const borderRadius =\n    propBorderRadius ??\n    (styles.track?.borderRadius as string | number | undefined)\n\n  const stripAnimation = { animation: `${stripe} 1s linear infinite` }\n\n  /**\n   * We should not use stripe if it is `indeterminate`\n   */\n  const shouldAddStripe = !isIndeterminate && hasStripe\n\n  const shouldAnimateStripe = shouldAddStripe && isAnimated\n\n  /**\n   * Generate styles for stripe and stripe animation\n   */\n  const css: Interpolation<any> = {\n    ...(shouldAnimateStripe && stripAnimation),\n    ...(isIndeterminate && {\n      position: \"absolute\",\n      willChange: \"left\",\n      minWidth: \"50%\",\n      animation: `${progress} 1s ease infinite normal none running`,\n    }),\n  }\n\n  const trackStyles: SystemStyleObject = {\n    overflow: \"hidden\",\n    position: \"relative\",\n    ...styles.track,\n  }\n\n  return (\n    <chakra.div borderRadius={borderRadius} __css={trackStyles} {...rest}>\n      <StylesProvider value={styles}>\n        <ProgressFilledTrack\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n          min={min}\n          max={max}\n          value={value}\n          isIndeterminate={isIndeterminate}\n          css={css}\n          borderRadius={borderRadius}\n        />\n        {children}\n      </StylesProvider>\n    </chakra.div>\n  )\n}\n\nif (__DEV__) {\n  Progress.displayName = \"Progress\"\n}\n"],"file":"progress.js"}