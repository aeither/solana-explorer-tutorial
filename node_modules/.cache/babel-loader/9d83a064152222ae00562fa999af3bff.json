{"ast":null,"code":"import { t } from \"../utils\";\nexport var border = {\n  border: t.borders(\"border\"),\n  borderWidth: t.borderWidths(\"borderWidth\"),\n  borderStyle: t.borderStyles(\"borderStyle\"),\n  borderColor: t.colors(\"borderColor\"),\n  borderRadius: t.radii(\"borderRadius\"),\n  borderTop: t.borders(\"borderTop\"),\n  borderBlockStart: t.borders(\"borderBlockStart\"),\n  borderTopLeftRadius: t.radii(\"borderTopLeftRadius\"),\n  borderStartStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopLeftRadius\",\n      rtl: \"borderTopRightRadius\"\n    }\n  }),\n  borderEndStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomLeftRadius\",\n      rtl: \"borderBottomRightRadius\"\n    }\n  }),\n  borderTopRightRadius: t.radii(\"borderTopRightRadius\"),\n  borderStartEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopRightRadius\",\n      rtl: \"borderTopLeftRadius\"\n    }\n  }),\n  borderEndEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomRightRadius\",\n      rtl: \"borderBottomLeftRadius\"\n    }\n  }),\n  borderRight: t.borders(\"borderRight\"),\n  borderInlineEnd: t.borders(\"borderInlineEnd\"),\n  borderBottom: t.borders(\"borderBottom\"),\n  borderBlockEnd: t.borders(\"borderBlockEnd\"),\n  borderBottomLeftRadius: t.radii(\"borderBottomLeftRadius\"),\n  borderBottomRightRadius: t.radii(\"borderBottomRightRadius\"),\n  borderLeft: t.borders(\"borderLeft\"),\n  borderInlineStart: {\n    property: \"borderInlineStart\",\n    scale: \"borders\"\n  },\n  borderInlineStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n      rtl: [\"borderTopRightRadius\", \"borderBottomRightRadius\"]\n    }\n  }),\n  borderInlineEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n      rtl: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]\n    }\n  }),\n  borderX: t.borders([\"borderLeft\", \"borderRight\"]),\n  borderInline: t.borders(\"borderInline\"),\n  borderY: t.borders([\"borderTop\", \"borderBottom\"]),\n  borderBlock: t.borders(\"borderBlock\"),\n  borderTopWidth: t.borderWidths(\"borderTopWidth\"),\n  borderBlockStartWidth: t.borderWidths(\"borderBlockStartWidth\"),\n  borderTopColor: t.colors(\"borderTopColor\"),\n  borderBlockStartColor: t.colors(\"borderBlockStartColor\"),\n  borderTopStyle: t.borderStyles(\"borderTopStyle\"),\n  borderBlockStartStyle: t.borderStyles(\"borderBlockStartStyle\"),\n  borderBottomWidth: t.borderWidths(\"borderBottomWidth\"),\n  borderBlockEndWidth: t.borderWidths(\"borderBlockEndWidth\"),\n  borderBottomColor: t.colors(\"borderBottomColor\"),\n  borderBlockEndColor: t.colors(\"borderBlockEndColor\"),\n  borderBottomStyle: t.borderStyles(\"borderBottomStyle\"),\n  borderBlockEndStyle: t.borderStyles(\"borderBlockEndStyle\"),\n  borderLeftWidth: t.borderWidths(\"borderLeftWidth\"),\n  borderInlineStartWidth: t.borderWidths(\"borderInlineStartWidth\"),\n  borderLeftColor: t.colors(\"borderLeftColor\"),\n  borderInlineStartColor: t.colors(\"borderInlineStartColor\"),\n  borderLeftStyle: t.borderStyles(\"borderLeftStyle\"),\n  borderInlineStartStyle: t.borderStyles(\"borderInlineStartStyle\"),\n  borderRightWidth: t.borderWidths(\"borderRightWidth\"),\n  borderInlineEndWidth: t.borderWidths(\"borderInlineEndWidth\"),\n  borderRightColor: t.colors(\"borderRightColor\"),\n  borderInlineEndColor: t.colors(\"borderInlineEndColor\"),\n  borderRightStyle: t.borderStyles(\"borderRightStyle\"),\n  borderInlineEndStyle: t.borderStyles(\"borderInlineEndStyle\"),\n  borderTopRadius: t.radii([\"borderTopLeftRadius\", \"borderTopRightRadius\"]),\n  borderBottomRadius: t.radii([\"borderBottomLeftRadius\", \"borderBottomRightRadius\"]),\n  borderLeftRadius: t.radii([\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]),\n  borderRightRadius: t.radii([\"borderTopRightRadius\", \"borderBottomRightRadius\"])\n};\nObject.assign(border, {\n  rounded: border.borderRadius,\n  roundedTop: border.borderTopRadius,\n  roundedTopLeft: border.borderTopLeftRadius,\n  roundedTopRight: border.borderTopRightRadius,\n  roundedTopStart: border.borderStartStartRadius,\n  roundedTopEnd: border.borderStartEndRadius,\n  roundedBottom: border.borderBottomRadius,\n  roundedBottomLeft: border.borderBottomLeftRadius,\n  roundedBottomRight: border.borderBottomRightRadius,\n  roundedBottomStart: border.borderEndStartRadius,\n  roundedBottomEnd: border.borderEndEndRadius,\n  roundedLeft: border.borderLeftRadius,\n  roundedRight: border.borderRightRadius,\n  roundedStart: border.borderInlineStartRadius,\n  roundedEnd: border.borderInlineEndRadius,\n  borderStart: border.borderInlineStart,\n  borderEnd: border.borderInlineEnd,\n  borderTopStartRadius: border.borderStartStartRadius,\n  borderTopEndRadius: border.borderStartEndRadius,\n  borderBottomStartRadius: border.borderEndStartRadius,\n  borderBottomEndRadius: border.borderEndEndRadius,\n  borderStartRadius: border.borderInlineStartRadius,\n  borderEndRadius: border.borderInlineEndRadius,\n  borderStartWidth: border.borderInlineStartWidth,\n  borderEndWidth: border.borderInlineEndWidth,\n  borderStartColor: border.borderInlineStartColor,\n  borderEndColor: border.borderInlineEndColor,\n  borderStartStyle: border.borderInlineStartStyle,\n  borderEndStyle: border.borderInlineEndStyle\n});\n/**\n * The prop types for border properties listed above\n */","map":{"version":3,"sources":["../../../src/config/border.ts"],"names":["border","t","borderWidth","borderStyle","borderColor","borderRadius","borderTop","borderBlockStart","borderTopLeftRadius","borderStartStartRadius","scale","property","ltr","rtl","borderEndStartRadius","borderTopRightRadius","borderStartEndRadius","borderEndEndRadius","borderRight","borderInlineEnd","borderBottom","borderBlockEnd","borderBottomLeftRadius","borderBottomRightRadius","borderLeft","borderInlineStart","borderInlineStartRadius","borderInlineEndRadius","borderX","borderInline","borderY","borderBlock","borderTopWidth","borderBlockStartWidth","borderTopColor","borderBlockStartColor","borderTopStyle","borderBlockStartStyle","borderBottomWidth","borderBlockEndWidth","borderBottomColor","borderBlockEndColor","borderBottomStyle","borderBlockEndStyle","borderLeftWidth","borderInlineStartWidth","borderLeftColor","borderInlineStartColor","borderLeftStyle","borderInlineStartStyle","borderRightWidth","borderInlineEndWidth","borderRightColor","borderInlineEndColor","borderRightStyle","borderInlineEndStyle","borderTopRadius","borderBottomRadius","borderLeftRadius","borderRightRadius","Object","rounded","roundedTop","roundedTopLeft","roundedTopRight","roundedTopStart","roundedTopEnd","roundedBottom","roundedBottomLeft","roundedBottomRight","roundedBottomStart","roundedBottomEnd","roundedLeft","roundedRight","roundedStart","roundedEnd","borderStart","borderEnd","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","borderStartRadius","borderEndRadius","borderStartWidth","borderEndWidth","borderStartColor","borderEndColor","borderStartStyle","borderEndStyle"],"mappings":"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","sourcesContent":["import * as CSS from \"csstype\"\nimport { Config } from \"../utils/prop-config\"\nimport { t, Token } from \"../utils\"\n\nexport const border: Config = {\n  border: t.borders(\"border\"),\n  borderWidth: t.borderWidths(\"borderWidth\"),\n  borderStyle: t.borderStyles(\"borderStyle\"),\n  borderColor: t.colors(\"borderColor\"),\n  borderRadius: t.radii(\"borderRadius\"),\n  borderTop: t.borders(\"borderTop\"),\n  borderBlockStart: t.borders(\"borderBlockStart\"),\n  borderTopLeftRadius: t.radii(\"borderTopLeftRadius\"),\n  borderStartStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopLeftRadius\",\n      rtl: \"borderTopRightRadius\",\n    },\n  }),\n  borderEndStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomLeftRadius\",\n      rtl: \"borderBottomRightRadius\",\n    },\n  }),\n  borderTopRightRadius: t.radii(\"borderTopRightRadius\"),\n  borderStartEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopRightRadius\",\n      rtl: \"borderTopLeftRadius\",\n    },\n  }),\n  borderEndEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomRightRadius\",\n      rtl: \"borderBottomLeftRadius\",\n    },\n  }),\n  borderRight: t.borders(\"borderRight\"),\n  borderInlineEnd: t.borders(\"borderInlineEnd\"),\n  borderBottom: t.borders(\"borderBottom\"),\n  borderBlockEnd: t.borders(\"borderBlockEnd\"),\n  borderBottomLeftRadius: t.radii(\"borderBottomLeftRadius\"),\n  borderBottomRightRadius: t.radii(\"borderBottomRightRadius\"),\n  borderLeft: t.borders(\"borderLeft\"),\n  borderInlineStart: {\n    property: \"borderInlineStart\",\n    scale: \"borders\",\n  },\n  borderInlineStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n      rtl: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n    },\n  }),\n  borderInlineEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n      rtl: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n    },\n  }),\n  borderX: t.borders([\"borderLeft\", \"borderRight\"]),\n  borderInline: t.borders(\"borderInline\"),\n  borderY: t.borders([\"borderTop\", \"borderBottom\"]),\n  borderBlock: t.borders(\"borderBlock\"),\n  borderTopWidth: t.borderWidths(\"borderTopWidth\"),\n  borderBlockStartWidth: t.borderWidths(\"borderBlockStartWidth\"),\n  borderTopColor: t.colors(\"borderTopColor\"),\n  borderBlockStartColor: t.colors(\"borderBlockStartColor\"),\n  borderTopStyle: t.borderStyles(\"borderTopStyle\"),\n  borderBlockStartStyle: t.borderStyles(\"borderBlockStartStyle\"),\n  borderBottomWidth: t.borderWidths(\"borderBottomWidth\"),\n  borderBlockEndWidth: t.borderWidths(\"borderBlockEndWidth\"),\n  borderBottomColor: t.colors(\"borderBottomColor\"),\n  borderBlockEndColor: t.colors(\"borderBlockEndColor\"),\n  borderBottomStyle: t.borderStyles(\"borderBottomStyle\"),\n  borderBlockEndStyle: t.borderStyles(\"borderBlockEndStyle\"),\n  borderLeftWidth: t.borderWidths(\"borderLeftWidth\"),\n  borderInlineStartWidth: t.borderWidths(\"borderInlineStartWidth\"),\n  borderLeftColor: t.colors(\"borderLeftColor\"),\n  borderInlineStartColor: t.colors(\"borderInlineStartColor\"),\n  borderLeftStyle: t.borderStyles(\"borderLeftStyle\"),\n  borderInlineStartStyle: t.borderStyles(\"borderInlineStartStyle\"),\n  borderRightWidth: t.borderWidths(\"borderRightWidth\"),\n  borderInlineEndWidth: t.borderWidths(\"borderInlineEndWidth\"),\n  borderRightColor: t.colors(\"borderRightColor\"),\n  borderInlineEndColor: t.colors(\"borderInlineEndColor\"),\n  borderRightStyle: t.borderStyles(\"borderRightStyle\"),\n  borderInlineEndStyle: t.borderStyles(\"borderInlineEndStyle\"),\n  borderTopRadius: t.radii([\"borderTopLeftRadius\", \"borderTopRightRadius\"]),\n  borderBottomRadius: t.radii([\n    \"borderBottomLeftRadius\",\n    \"borderBottomRightRadius\",\n  ]),\n  borderLeftRadius: t.radii([\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]),\n  borderRightRadius: t.radii([\n    \"borderTopRightRadius\",\n    \"borderBottomRightRadius\",\n  ]),\n}\n\nObject.assign(border, {\n  rounded: border.borderRadius,\n  roundedTop: border.borderTopRadius,\n  roundedTopLeft: border.borderTopLeftRadius,\n  roundedTopRight: border.borderTopRightRadius,\n  roundedTopStart: border.borderStartStartRadius,\n  roundedTopEnd: border.borderStartEndRadius,\n  roundedBottom: border.borderBottomRadius,\n  roundedBottomLeft: border.borderBottomLeftRadius,\n  roundedBottomRight: border.borderBottomRightRadius,\n  roundedBottomStart: border.borderEndStartRadius,\n  roundedBottomEnd: border.borderEndEndRadius,\n  roundedLeft: border.borderLeftRadius,\n  roundedRight: border.borderRightRadius,\n  roundedStart: border.borderInlineStartRadius,\n  roundedEnd: border.borderInlineEndRadius,\n  borderStart: border.borderInlineStart,\n  borderEnd: border.borderInlineEnd,\n  borderTopStartRadius: border.borderStartStartRadius,\n  borderTopEndRadius: border.borderStartEndRadius,\n  borderBottomStartRadius: border.borderEndStartRadius,\n  borderBottomEndRadius: border.borderEndEndRadius,\n  borderStartRadius: border.borderInlineStartRadius,\n  borderEndRadius: border.borderInlineEndRadius,\n  borderStartWidth: border.borderInlineStartWidth,\n  borderEndWidth: border.borderInlineEndWidth,\n  borderStartColor: border.borderInlineStartColor,\n  borderEndColor: border.borderInlineEndColor,\n  borderStartStyle: border.borderInlineStartStyle,\n  borderEndStyle: border.borderInlineEndStyle,\n})\n\n/**\n * The prop types for border properties listed above\n */\nexport interface BorderProps {\n  /**\n   * The CSS `border` property\n   */\n  border?: Token<CSS.Property.Border | number, \"borders\">\n  /**\n   * The CSS `border-width` property\n   */\n  borderWidth?: Token<CSS.Property.BorderWidth | number>\n  /**\n   * The CSS `border-style` property\n   */\n  borderStyle?: Token<CSS.Property.BorderStyle>\n  /**\n   * The CSS `border-color` property\n   */\n  borderColor?: Token<CSS.Property.BorderTopColor, \"colors\">\n  /**\n   * The CSS `border-radius` property\n   */\n  borderRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-radius` property\n   */\n  rounded?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top` property\n   */\n  borderTop?: Token<CSS.Property.BorderTop | number, \"borders\">\n  borderBlockStart?: Token<CSS.Property.BorderBlockStart | number>\n  /**\n   * The CSS `border-top-width` property\n   */\n  borderTopWidth?: Token<CSS.Property.BorderWidth | number>\n  borderBlockStartWidth?: Token<CSS.Property.BorderBlockStartWidth | number>\n  /**\n   * The CSS `border-bottom-width` property\n   */\n  borderBottomWidth?: Token<CSS.Property.BorderWidth | number>\n  borderBlockEndWidth?: Token<CSS.Property.BorderBlockEndWidth | number>\n  /**\n   * The CSS `border-left-width` property\n   */\n  borderLeftWidth?: Token<CSS.Property.BorderWidth | number>\n  borderStartWidth?: Token<CSS.Property.BorderWidth | number>\n  borderInlineStartWidth?: Token<CSS.Property.BorderInlineStartWidth | number>\n  /**\n   * The CSS `border-right-width` property\n   */\n  borderRightWidth?: Token<CSS.Property.BorderWidth | number>\n  borderEndWidth?: Token<CSS.Property.BorderWidth | number>\n  borderInlineEndWidth?: Token<CSS.Property.BorderInlineEndWidth | number>\n  /**\n   * The CSS `border-top-style` property\n   */\n  borderTopStyle?: Token<CSS.Property.BorderTopStyle>\n  borderBlockStartStyle?: Token<CSS.Property.BorderBlockStartStyle>\n  /**\n   * The CSS `border-bottom-style` property\n   */\n  borderBottomStyle?: Token<CSS.Property.BorderBottomStyle>\n  borderBlockEndStyle?: Token<CSS.Property.BorderBlockEndStyle>\n  /**\n   * The CSS `border-left-style` property\n   */\n  borderLeftStyle?: Token<CSS.Property.BorderLeftStyle>\n  borderStartStyle?: Token<CSS.Property.BorderInlineStartStyle>\n  borderInlineStartStyle?: Token<CSS.Property.BorderInlineStartStyle>\n  /**\n   * The CSS `border-right-styles` property\n   */\n  borderRightStyle?: Token<CSS.Property.BorderRightStyle>\n  borderEndStyle?: Token<CSS.Property.BorderInlineEndStyle>\n  borderInlineEndStyle?: Token<CSS.Property.BorderInlineEndStyle>\n  /**\n   * The CSS `border-top-color` property\n   */\n  borderTopColor?: Token<CSS.Property.BorderTopColor, \"colors\">\n  borderBlockStartColor?: Token<CSS.Property.BorderBlockStartColor, \"colors\">\n  /**\n   * The CSS `border-bottom-color` property\n   */\n  borderBottomColor?: Token<CSS.Property.BorderBottomColor, \"colors\">\n  borderBlockEndColor?: Token<CSS.Property.BorderBlockEndColor, \"colors\">\n  /**\n   * The CSS `border-left-color` property\n   */\n  borderLeftColor?: Token<CSS.Property.BorderLeftColor, \"colors\">\n  borderStartColor?: Token<CSS.Property.BorderInlineStartColor>\n  borderInlineStartColor?: Token<CSS.Property.BorderInlineStartColor, \"colors\">\n  /**\n   * The CSS `border-right-color` property\n   */\n  borderRightColor?: Token<CSS.Property.BorderRightColor, \"colors\">\n  borderEndColor?: Token<CSS.Property.BorderInlineEndColor>\n  borderInlineEndColor?: Token<CSS.Property.BorderInlineEndColor, \"colors\">\n  /**\n   * The CSS `border-right` property\n   */\n  borderRight?: Token<CSS.Property.BorderRight | number, \"borders\">\n\n  borderEnd?: Token<CSS.Property.BorderInlineStart | number>\n  borderInlineEnd?: Token<CSS.Property.BorderInlineEnd | number>\n  /**\n   * The CSS `border-bottom` property\n   */\n  borderBottom?: Token<CSS.Property.BorderBottom | number, \"borders\">\n\n  borderBlockEnd?: Token<CSS.Property.BorderBlockEnd | number>\n  /**\n   * The CSS `border-left` property\n   */\n  borderLeft?: Token<CSS.Property.BorderLeft | number, \"borders\">\n  borderStart?: Token<CSS.Property.BorderInlineStart | number>\n  borderInlineStart?: Token<CSS.Property.BorderInlineStart | number>\n  /**\n   * The CSS `border-top-radius` property\n   */\n  borderTopRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top-radius` property\n   */\n  roundedTop?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-right-radius` property\n   */\n  borderRightRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-right-radius` property\n   */\n  roundedRight?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `roundedEnd` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `roundedEnd` is equivalent to `borderLeftRadius`.\n   */\n  roundedEnd?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderInlineEndRadius` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `borderInlineEndRadius` is equivalent to `borderLeftRadius`.\n   */\n  borderInlineEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderEndRadius` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `borderEndRadius` is equivalent to `borderLeftRadius`.\n   */\n  borderEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-radius` property\n   */\n  borderBottomRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-radius` property\n   */\n  roundedBottom?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-left-radius` property\n   */\n  borderLeftRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-left-radius` property\n   */\n  roundedLeft?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `roundedEnd` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `roundedEnd` is equivalent to `borderLeftRadius`.\n   */\n  roundedStart?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderInlineStartRadius` is equivalent to `borderLeftRadius`.\n   * When direction is `rtl`, `borderInlineStartRadius` is equivalent to `borderRightRadius`.\n   */\n  borderInlineStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderStartRadius` is equivalent to `borderLeftRadius`.\n   * When direction is `rtl`, `borderStartRadius` is equivalent to `borderRightRadius`.\n   */\n  borderStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top-left-radius` property\n   */\n  borderTopLeftRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderTopStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderStartStartRadius?: Token<\n    CSS.Property.BorderStartStartRadius | number,\n    \"radii\"\n  >\n  /**\n   * The CSS `border-top-left-radius` property\n   */\n  roundedTopLeft?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedTopStart?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top-right-radius` property\n   */\n  borderTopRightRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderTopEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderStartEndRadius?: Token<\n    CSS.Property.BorderStartEndRadius | number,\n    \"radii\"\n  >\n  /**\n   * The CSS `border-top-right-radius` property\n   */\n  roundedTopRight?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedTopEnd?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-left-radius` property\n   */\n  borderBottomLeftRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderBottomStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderEndStartRadius?: Token<\n    CSS.Property.BorderEndStartRadius | number,\n    \"radii\"\n  >\n  /**\n   * The CSS `border-bottom-left-radius` property\n   */\n  roundedBottomLeft?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedBottomStart?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-right-radius` property\n   */\n  borderBottomRightRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderBottomEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderEndEndRadius?: Token<CSS.Property.BorderEndEndRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-right-radius` property\n   */\n  roundedBottomRight?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedBottomEnd?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-right` and `border-left` property\n   */\n  borderX?: Token<CSS.Property.Border | number, \"borders\">\n  borderInline?: Token<CSS.Property.BorderInline | number>\n  /**\n   * The CSS `border-top` and `border-bottom` property\n   */\n  borderY?: Token<CSS.Property.Border | number, \"borders\">\n  borderBlock?: Token<CSS.Property.BorderBlock | number>\n}\n"]},"metadata":{},"sourceType":"module"}