{"version":3,"sources":["../../src/transition-utils.ts"],"names":["isNumber","TransitionEasings","ease","easeIn","easeOut","easeInOut","TransitionVariants","scale","enter","exit","fade","opacity","pushLeft","x","pushRight","pushUp","y","pushDown","slideLeft","position","left","top","bottom","width","slideRight","right","slideUp","maxWidth","slideDown","slideTransition","options","side","direction","TransitionDefaults","duration","withDelay","transition","delay"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,kBAAzB;AA2BA,OAAO,IAAMC,iBAAiB,GAAG;AAC/BC,EAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,IAAZ,EAAkB,CAAlB,CADyB;AAE/BC,EAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAY,CAAZ,CAFuB;AAG/BC,EAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,EAAY,CAAZ,CAHsB;AAI/BC,EAAAA,SAAS,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,GAAT,EAAc,CAAd;AAJoB,CAA1B;AAOP,OAAO,IAAMC,kBAAkB,GAAG;AAChCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KADF;AAELE,IAAAA,IAAI,EAAE;AAAEF,MAAAA,KAAK,EAAE;AAAT;AAFD,GADyB;AAKhCG,EAAAA,IAAI,EAAE;AACJF,IAAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAE;AAAX,KADH;AAEJF,IAAAA,IAAI,EAAE;AAAEE,MAAAA,OAAO,EAAE;AAAX;AAFF,GAL0B;AAShCC,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,KAAK,EAAE;AAAEK,MAAAA,CAAC,EAAE;AAAL,KADC;AAERJ,IAAAA,IAAI,EAAE;AAAEI,MAAAA,CAAC,EAAE;AAAL;AAFE,GATsB;AAahCC,EAAAA,SAAS,EAAE;AACTN,IAAAA,KAAK,EAAE;AAAEK,MAAAA,CAAC,EAAE;AAAL,KADE;AAETJ,IAAAA,IAAI,EAAE;AAAEI,MAAAA,CAAC,EAAE;AAAL;AAFG,GAbqB;AAiBhCE,EAAAA,MAAM,EAAE;AACNP,IAAAA,KAAK,EAAE;AAAEQ,MAAAA,CAAC,EAAE;AAAL,KADD;AAENP,IAAAA,IAAI,EAAE;AAAEO,MAAAA,CAAC,EAAE;AAAL;AAFA,GAjBwB;AAqBhCC,EAAAA,QAAQ,EAAE;AACRT,IAAAA,KAAK,EAAE;AAAEQ,MAAAA,CAAC,EAAE;AAAL,KADC;AAERP,IAAAA,IAAI,EAAE;AAAEO,MAAAA,CAAC,EAAE;AAAL;AAFE,GArBsB;AAyBhCE,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,GAAG,EAAE,CAAhB;AAAmBC,MAAAA,MAAM,EAAE,CAA3B;AAA8BC,MAAAA,KAAK,EAAE;AAArC,KADD;AAETf,IAAAA,KAAK,EAAE;AAAEK,MAAAA,CAAC,EAAE;AAAL,KAFE;AAGTJ,IAAAA,IAAI,EAAE;AAAEI,MAAAA,CAAC,EAAE;AAAL;AAHG,GAzBqB;AA8BhCW,EAAAA,UAAU,EAAE;AACVL,IAAAA,QAAQ,EAAE;AAAEM,MAAAA,KAAK,EAAE,CAAT;AAAYJ,MAAAA,GAAG,EAAE,CAAjB;AAAoBC,MAAAA,MAAM,EAAE,CAA5B;AAA+BC,MAAAA,KAAK,EAAE;AAAtC,KADA;AAEVf,IAAAA,KAAK,EAAE;AAAEK,MAAAA,CAAC,EAAE;AAAL,KAFG;AAGVJ,IAAAA,IAAI,EAAE;AAAEI,MAAAA,CAAC,EAAE;AAAL;AAHI,GA9BoB;AAmChCa,EAAAA,OAAO,EAAE;AACPP,IAAAA,QAAQ,EAAE;AAAEE,MAAAA,GAAG,EAAE,CAAP;AAAUD,MAAAA,IAAI,EAAE,CAAhB;AAAmBK,MAAAA,KAAK,EAAE,CAA1B;AAA6BE,MAAAA,QAAQ,EAAE;AAAvC,KADH;AAEPnB,IAAAA,KAAK,EAAE;AAAEQ,MAAAA,CAAC,EAAE;AAAL,KAFA;AAGPP,IAAAA,IAAI,EAAE;AAAEO,MAAAA,CAAC,EAAE;AAAL;AAHC,GAnCuB;AAwChCY,EAAAA,SAAS,EAAE;AACTT,IAAAA,QAAQ,EAAE;AAAEG,MAAAA,MAAM,EAAE,CAAV;AAAaF,MAAAA,IAAI,EAAE,CAAnB;AAAsBK,MAAAA,KAAK,EAAE,CAA7B;AAAgCE,MAAAA,QAAQ,EAAE;AAA1C,KADD;AAETnB,IAAAA,KAAK,EAAE;AAAEQ,MAAAA,CAAC,EAAE;AAAL,KAFE;AAGTP,IAAAA,IAAI,EAAE;AAAEO,MAAAA,CAAC,EAAE;AAAL;AAHG;AAxCqB,CAA3B;AAiDP,OAAO,SAASa,eAAT,CAAyBC,OAAzB,EAAmE;AAAA;;AACxE,MAAMC,IAAI,yBAAGD,OAAH,oBAAGA,OAAO,CAAEE,SAAZ,iCAAyB,OAAnC;;AACA,UAAQD,IAAR;AACE,SAAK,OAAL;AACE,aAAOzB,kBAAkB,CAACkB,UAA1B;;AACF,SAAK,MAAL;AACE,aAAOlB,kBAAkB,CAACY,SAA1B;;AACF,SAAK,QAAL;AACE,aAAOZ,kBAAkB,CAACsB,SAA1B;;AACF,SAAK,KAAL;AACE,aAAOtB,kBAAkB,CAACoB,OAA1B;;AACF;AACE,aAAOpB,kBAAkB,CAACkB,UAA1B;AAVJ;AAYD;AAED,OAAO,IAAMS,kBAAkB,GAAG;AAChCzB,EAAAA,KAAK,EAAE;AACL0B,IAAAA,QAAQ,EAAE,GADL;AAELhC,IAAAA,IAAI,EAAED,iBAAiB,CAACG;AAFnB,GADyB;AAKhCK,EAAAA,IAAI,EAAE;AACJyB,IAAAA,QAAQ,EAAE,GADN;AAEJhC,IAAAA,IAAI,EAAED,iBAAiB,CAACE;AAFpB;AAL0B,CAA3B;AAkCP,OAAO,IAAMgC,SAAS,GAAG;AACvB3B,EAAAA,KAAK,EAAE,CAAC4B,UAAD,EAAyBC,KAAzB,kBACFD,UADE;AAELC,IAAAA,KAAK,EAAErC,QAAQ,CAACqC,KAAD,CAAR,GAAkBA,KAAlB,GAA0BA,KAA1B,oBAA0BA,KAAK,CAAG,OAAH;AAFjC,IADgB;AAKvB5B,EAAAA,IAAI,EAAE,CAAC2B,UAAD,EAAyBC,KAAzB,kBACDD,UADC;AAEJC,IAAAA,KAAK,EAAErC,QAAQ,CAACqC,KAAD,CAAR,GAAkBA,KAAlB,GAA0BA,KAA1B,oBAA0BA,KAAK,CAAG,MAAH;AAFlC;AALiB,CAAlB","sourcesContent":["import { isNumber } from \"@chakra-ui/utils\"\nimport { Target, TargetAndTransition, Transition } from \"framer-motion\"\n\ntype TargetResolver<P = {}> = (\n  props: P & {\n    transition?: TransitionConfig\n    transitionEnd?: TransitionEndConfig\n    delay?: number | DelayConfig\n  },\n) => TargetAndTransition\n\ntype Variant<P = {}> = TargetAndTransition | TargetResolver<P>\n\nexport type Variants<P = {}> = {\n  enter: Variant<P>\n  exit: Variant<P>\n  initial?: Variant<P>\n}\n\ntype WithMotionState<P> = Partial<Record<\"enter\" | \"exit\", P>>\n\nexport type TransitionConfig = WithMotionState<Transition>\n\nexport type TransitionEndConfig = WithMotionState<Target>\n\nexport type DelayConfig = WithMotionState<number>\n\nexport const TransitionEasings = {\n  ease: [0.25, 0.1, 0.25, 1],\n  easeIn: [0.4, 0, 1, 1],\n  easeOut: [0, 0, 0.2, 1],\n  easeInOut: [0.4, 0, 0.2, 1],\n} as const\n\nexport const TransitionVariants = {\n  scale: {\n    enter: { scale: 1 },\n    exit: { scale: 0.95 },\n  },\n  fade: {\n    enter: { opacity: 1 },\n    exit: { opacity: 0 },\n  },\n  pushLeft: {\n    enter: { x: \"100%\" },\n    exit: { x: \"-30%\" },\n  },\n  pushRight: {\n    enter: { x: \"-100%\" },\n    exit: { x: \"30%\" },\n  },\n  pushUp: {\n    enter: { y: \"100%\" },\n    exit: { y: \"-30%\" },\n  },\n  pushDown: {\n    enter: { y: \"-100%\" },\n    exit: { y: \"30%\" },\n  },\n  slideLeft: {\n    position: { left: 0, top: 0, bottom: 0, width: \"100%\" },\n    enter: { x: 0 },\n    exit: { x: \"-100%\" },\n  },\n  slideRight: {\n    position: { right: 0, top: 0, bottom: 0, width: \"100%\" },\n    enter: { x: 0 },\n    exit: { x: \"100%\" },\n  },\n  slideUp: {\n    position: { top: 0, left: 0, right: 0, maxWidth: \"100vw\" },\n    enter: { y: 0 },\n    exit: { y: \"-100%\" },\n  },\n  slideDown: {\n    position: { bottom: 0, left: 0, right: 0, maxWidth: \"100vw\" },\n    enter: { y: 0 },\n    exit: { y: \"100%\" },\n  },\n}\n\nexport type SlideDirection = \"top\" | \"left\" | \"bottom\" | \"right\"\n\nexport function slideTransition(options?: { direction?: SlideDirection }) {\n  const side = options?.direction ?? \"right\"\n  switch (side) {\n    case \"right\":\n      return TransitionVariants.slideRight\n    case \"left\":\n      return TransitionVariants.slideLeft\n    case \"bottom\":\n      return TransitionVariants.slideDown\n    case \"top\":\n      return TransitionVariants.slideUp\n    default:\n      return TransitionVariants.slideRight\n  }\n}\n\nexport const TransitionDefaults = {\n  enter: {\n    duration: 0.2,\n    ease: TransitionEasings.easeOut,\n  },\n  exit: {\n    duration: 0.1,\n    ease: TransitionEasings.easeIn,\n  },\n} as const\n\nexport type WithTransitionConfig<P extends object> = Omit<P, \"transition\"> & {\n  /**\n   * If `true`, the element will unmount when `in={false}` and animation is done\n   */\n  unmountOnExit?: boolean\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in?: boolean\n  /**\n   * Custom `transition` definition for `enter` and `exit`\n   */\n  transition?: TransitionConfig\n  /**\n   * Custom `transitionEnd` definition for `enter` and `exit`\n   */\n  transitionEnd?: TransitionEndConfig\n  /**\n   * Custom `delay` definition for `enter` and `exit`\n   */\n  delay?: number | DelayConfig\n}\n\nexport const withDelay = {\n  enter: (transition: Transition, delay?: number | DelayConfig) => ({\n    ...transition,\n    delay: isNumber(delay) ? delay : delay?.[\"enter\"],\n  }),\n  exit: (transition: Transition, delay?: number | DelayConfig) => ({\n    ...transition,\n    delay: isNumber(delay) ? delay : delay?.[\"exit\"],\n  }),\n}\n"],"file":"transition-utils.js"}