{"version":3,"sources":["../../src/color-mode.utils.ts"],"names":["classNames","light","dark","mockBody","classList","add","noop","remove","getBody","isBrowser","document","body","syncBodyClassName","isDark","getMediaQuery","query","mediaQueryList","window","matchMedia","undefined","media","matches","queries","lightQuery","darkQuery","getColorScheme","fallback","addListener","fn","listener","removeListener","root","get","documentElement","style","getPropertyValue","set","mode","setProperty"],"mappings":";;;;;;;;AAAA;;AAEA,IAAMA,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE,iBADU;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAAnB;;AAOA;AACA;AACA;AACA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,GAAG,EAAEC,WAAP;AAAaC,IAAAA,MAAM,EAAED;AAArB;AADI,CAAjB;;AAIA,IAAME,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAOC,mBAAYC,QAAQ,CAACC,IAArB,GAA4BR,QAAnC;AAAA,CAAhB;AAEA;AACA;AACA;;;AACO,SAASS,iBAAT,CAA2BC,MAA3B,EAA4C;AACjD,MAAMF,IAAI,GAAGH,OAAO,EAApB;AACAG,EAAAA,IAAI,CAACP,SAAL,CAAeC,GAAf,CAAmBQ,MAAM,GAAGb,UAAU,CAACE,IAAd,GAAqBF,UAAU,CAACC,KAAzD;AACAU,EAAAA,IAAI,CAACP,SAAL,CAAeG,MAAf,CAAsBM,MAAM,GAAGb,UAAU,CAACC,KAAd,GAAsBD,UAAU,CAACE,IAA7D;AACD;AAED;AACA;AACA;;;AACA,SAASY,aAAT,CAAuBC,KAAvB,EAAsC;AACpC,MAAMC,cAAc,GAAGC,MAAM,CAACC,UAAV,oBAAGD,MAAM,CAACC,UAAP,CAAoBH,KAApB,CAAvB;;AACA,MAAI,CAACC,cAAL,EAAqB;AACnB,WAAOG,SAAP;AACD;;AACD,SAAO,CAAC,CAACH,cAAc,CAACI,KAAjB,KAA2BJ,cAAc,CAACK,OAAjD;AACD;;AAEM,IAAMC,OAAO,GAAG;AACrBrB,EAAAA,KAAK,EAAE,+BADc;AAErBC,EAAAA,IAAI,EAAE;AAFe,CAAhB;;AAKA,IAAMqB,UAAU,GAAGD,OAAO,CAACrB,KAA3B;;AACA,IAAMuB,SAAS,GAAGF,OAAO,CAACpB,IAA1B;;;AAEA,SAASuB,cAAT,CAAwBC,QAAxB,EAA8C;AAAA;;AACnD,MAAMb,MAAM,qBAAGC,aAAa,CAACQ,OAAO,CAACpB,IAAT,CAAhB,6BAAkCwB,QAAQ,KAAK,MAA3D;AACA,SAAOb,MAAM,GAAG,MAAH,GAAY,OAAzB;AACD;AAED;AACA;AACA;AACA;;;AACO,SAASc,WAAT,CAAqBC,EAArB,EAAmC;AACxC,MAAI,EAAE,gBAAgBX,MAAlB,CAAJ,EAA+B;AAC7B,WAAOX,WAAP;AACD;;AAED,MAAMU,cAAc,GAAGC,MAAM,CAACC,UAAP,CAAkBI,OAAO,CAACpB,IAA1B,CAAvB;;AAEA,MAAM2B,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBD,IAAAA,EAAE,CAACZ,cAAc,CAACK,OAAf,GAAyB,MAAzB,GAAkC,OAAnC,CAAF;AACD,GAFD;;AAIAQ,EAAAA,QAAQ;AACRb,EAAAA,cAAc,CAACW,WAAf,CAA2BE,QAA3B;AAEA,SAAO,YAAM;AACXb,IAAAA,cAAc,CAACc,cAAf,CAA8BD,QAA9B;AACD,GAFD;AAGD;;AAEM,IAAME,IAAI,GAAG;AAClBC,EAAAA,GAAG,EAAE;AAAA,WACHtB,QAAQ,CAACuB,eAAT,CAAyBC,KAAzB,CAA+BC,gBAA/B,CACE,wBADF,CADG;AAAA,GADa;AAKlBC,EAAAA,GAAG,EAAE,aAACC,IAAD,EAAqB;AACxB,QAAI5B,gBAAJ,EAAe;AACbC,MAAAA,QAAQ,CAACuB,eAAT,CAAyBC,KAAzB,CAA+BI,WAA/B,CAA2C,wBAA3C,EAAqED,IAArE;AACD;AACF;AATiB,CAAb","sourcesContent":["import { isBrowser, noop } from \"@chakra-ui/utils\"\n\nconst classNames = {\n  light: \"chakra-ui-light\",\n  dark: \"chakra-ui-dark\",\n}\n\nexport type ColorMode = \"light\" | \"dark\"\n\n/**\n * SSR: Graceful fallback for the `body` element\n */\nconst mockBody = {\n  classList: { add: noop, remove: noop },\n}\n\nconst getBody = () => (isBrowser ? document.body : mockBody)\n\n/**\n * Function to add/remove class from `body` based on color mode\n */\nexport function syncBodyClassName(isDark: boolean) {\n  const body = getBody()\n  body.classList.add(isDark ? classNames.dark : classNames.light)\n  body.classList.remove(isDark ? classNames.light : classNames.dark)\n}\n\n/**\n * Check if JS media query matches the query string passed\n */\nfunction getMediaQuery(query: string) {\n  const mediaQueryList = window.matchMedia?.(query)\n  if (!mediaQueryList) {\n    return undefined\n  }\n  return !!mediaQueryList.media === mediaQueryList.matches\n}\n\nexport const queries = {\n  light: \"(prefers-color-scheme: light)\",\n  dark: \"(prefers-color-scheme: dark)\",\n}\n\nexport const lightQuery = queries.light\nexport const darkQuery = queries.dark\n\nexport function getColorScheme(fallback?: ColorMode) {\n  const isDark = getMediaQuery(queries.dark) ?? fallback === \"dark\"\n  return isDark ? \"dark\" : \"light\"\n}\n\n/**\n * Adds system os color mode listener, and run the callback\n * once preference changes\n */\nexport function addListener(fn: Function) {\n  if (!(\"matchMedia\" in window)) {\n    return noop\n  }\n\n  const mediaQueryList = window.matchMedia(queries.dark)\n\n  const listener = () => {\n    fn(mediaQueryList.matches ? \"dark\" : \"light\")\n  }\n\n  listener()\n  mediaQueryList.addListener(listener)\n\n  return () => {\n    mediaQueryList.removeListener(listener)\n  }\n}\n\nexport const root = {\n  get: () =>\n    document.documentElement.style.getPropertyValue(\n      \"--chakra-ui-color-mode\",\n    ) as ColorMode,\n  set: (mode: ColorMode) => {\n    if (isBrowser) {\n      document.documentElement.style.setProperty(\"--chakra-ui-color-mode\", mode)\n    }\n  },\n}\n"],"file":"color-mode.utils.js"}