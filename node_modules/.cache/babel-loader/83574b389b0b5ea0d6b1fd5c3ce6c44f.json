{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { Icon } from \"@chakra-ui/icon\";\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n\nvar CloseIcon = function CloseIcon(props) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    focusable: \"false\",\n    \"aria-hidden\": true\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z\"\n  }));\n};\n/**\n * A button with a close icon.\n *\n * It is used to handle the close functionality in feedback and overlay components\n * like Alerts, Toasts, Drawers and Modals.\n */\n\n\nexport var CloseButton = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"CloseButton\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      children = _omitThemingProps.children,\n      isDisabled = _omitThemingProps.isDisabled,\n      __css = _omitThemingProps.__css,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"children\", \"isDisabled\", \"__css\"]);\n\n  var baseStyle = {\n    outline: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexShrink: 0\n  };\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({\n    type: \"button\",\n    \"aria-label\": \"Close\",\n    ref: ref,\n    disabled: isDisabled,\n    __css: _extends({}, baseStyle, styles, __css)\n  }, rest), children || /*#__PURE__*/React.createElement(CloseIcon, {\n    width: \"1em\",\n    height: \"1em\"\n  }));\n});\n\nif (__DEV__) {\n  CloseButton.displayName = \"CloseButton\";\n}","map":{"version":3,"sources":["../../src/close-button.tsx"],"names":["CloseIcon","props","CloseButton","forwardRef","styles","useStyleConfig","__css","omitThemingProps","baseStyle","outline","display","alignItems","justifyContent","flexShrink","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,IAAA,QAAA,iBAAA;AACA,SAAA,MAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,cAAA,QAAA,mBAAA;AASA,SAAA,OAAA,QAAA,kBAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;;AAEA,IAAMA,SAA8B,GAAIC,SAAlCD,SAAkCC,CAAAA,KAAD;AAAA,SAAA,aACrC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AAAM,IAAA,SAAS,EAAf,OAAA;AAAwB,mBAAA;AAAxB,GAAA,EAAA,KAAA,CAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,IAAA,IAAI,EADN,cAAA;AAEE,IAAA,CAAC,EAAC;AAFJ,GAAA,CADF,CADqC;AAAA,CAAvC;AAkBA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,IAAMC,WAAW,GAAA,aAAGC,UAAU,CACnC,UAAA,KAAA,EAAA,GAAA,EAAgB;AACd,MAAMC,MAAM,GAAGC,cAAc,CAAA,aAAA,EAA7B,KAA6B,CAA7B;;AACA,MAAA,iBAAA,GAAiDE,gBAAgB,CAAjE,KAAiE,CAAjE;AAAA,MAAM,QAAN,GAAA,iBAAA,CAAM,QAAN;AAAA,MAAM,UAAN,GAAA,iBAAA,CAAM,UAAN;AAAA,MAA8BD,KAA9B,GAAA,iBAAA,CAA8BA,KAA9B;AAAA,MAAA,IAAA,GAAA,6BAAA,CAAA,iBAAA,EAAA,CAAA,UAAA,EAAA,YAAA,EAAA,OAAA,CAAA,CAAA;;AAEA,MAAME,SAA4B,GAAG;AACnCC,IAAAA,OAAO,EAD4B,CAAA;AAEnCC,IAAAA,OAAO,EAF4B,MAAA;AAGnCC,IAAAA,UAAU,EAHyB,QAAA;AAInCC,IAAAA,cAAc,EAJqB,QAAA;AAKnCC,IAAAA,UAAU,EAAE;AALuB,GAArC;AAQA,SAAA,aACE,KAAA,CAAA,aAAA,CAAC,MAAD,CAAA,MAAA,EAAA,QAAA,CAAA;AACE,IAAA,IAAI,EADN,QAAA;AAEE,kBAFF,OAAA;AAGE,IAAA,GAAG,EAHL,GAAA;AAIE,IAAA,QAAQ,EAJV,UAAA;AAKE,IAAA,KAAK,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA,MAAA,EAAA,KAAA;AALP,GAAA,EAAA,IAAA,CAAA,EAYGC,QAAQ,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAW,IAAA,KAAK,EAAhB,KAAA;AAAuB,IAAA,MAAM,EAAC;AAA9B,GAAA,CAZf,CADF;AAbG,CAA8B,CAA9B;;AAgCP,IAAA,OAAA,EAAa;AACXZ,EAAAA,WAAW,CAAXA,WAAAA,GAAAA,aAAAA;AACD","sourcesContent":["import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nconst CloseIcon: React.FC<IconProps> = (props) => (\n  <Icon focusable=\"false\" aria-hidden {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z\"\n    />\n  </Icon>\n)\n\nexport interface CloseButtonProps\n  extends HTMLChakraProps<\"button\">,\n    ThemingProps<\"CloseButton\"> {\n  /**\n   * If `true`, the close button will be disabled.\n   */\n  isDisabled?: boolean\n}\n\n/**\n * A button with a close icon.\n *\n * It is used to handle the close functionality in feedback and overlay components\n * like Alerts, Toasts, Drawers and Modals.\n */\nexport const CloseButton = forwardRef<CloseButtonProps, \"button\">(\n  (props, ref) => {\n    const styles = useStyleConfig(\"CloseButton\", props)\n    const { children, isDisabled, __css, ...rest } = omitThemingProps(props)\n\n    const baseStyle: SystemStyleObject = {\n      outline: 0,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flexShrink: 0,\n    }\n\n    return (\n      <chakra.button\n        type=\"button\"\n        aria-label=\"Close\"\n        ref={ref}\n        disabled={isDisabled}\n        __css={{\n          ...baseStyle,\n          ...styles,\n          ...__css,\n        }}\n        {...rest}\n      >\n        {children || <CloseIcon width=\"1em\" height=\"1em\" />}\n      </chakra.button>\n    )\n  },\n)\n\nif (__DEV__) {\n  CloseButton.displayName = \"CloseButton\"\n}\n"]},"metadata":{},"sourceType":"module"}