{"version":3,"sources":["../../src/table.tsx"],"names":["chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","cx","__DEV__","React","TableContainer","props","ref","overflow","overflowX","className","rest","display","whiteSpace","WebkitOverflowScrolling","overflowY","maxWidth","Table","styles","tableProps","table","displayName","TableCaption","placement","caption","captionSide","Thead","thead","Tbody","tbody","Tfoot","tfoot","Th","isNumeric","th","Tr","tr","Td","td"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  StylesProvider,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface TableContainerProps extends HTMLChakraProps<\"div\"> {}\n\nexport const TableContainer = forwardRef<TableContainerProps, \"div\">(\n  (props: HTMLChakraProps<\"div\">, ref) => {\n    const { overflow, overflowX, className, ...rest } = props\n    return (\n      <chakra.div\n        ref={ref}\n        className={cx(\"chakra-table__container\", className)}\n        {...rest}\n        __css={{\n          display: \"block\",\n          whiteSpace: \"nowrap\",\n          WebkitOverflowScrolling: \"touch\",\n          overflowX: overflow ?? overflowX ?? \"auto\",\n          overflowY: \"hidden\",\n          maxWidth: \"100%\",\n        }}\n      />\n    )\n  },\n)\n\nexport interface TableProps\n  extends HTMLChakraProps<\"table\">,\n    ThemingProps<\"Table\"> {}\n\nexport const Table = forwardRef<TableProps, \"table\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props)\n  const { className, ...tableProps } = omitThemingProps(props)\n\n  return (\n    <StylesProvider value={styles}>\n      <chakra.table\n        role=\"table\"\n        ref={ref}\n        __css={styles.table}\n        className={cx(\"chakra-table\", className)}\n        {...tableProps}\n      />\n    </StylesProvider>\n  )\n})\n\nif (__DEV__) {\n  Table.displayName = \"Table\"\n}\n\nexport interface TableCaptionProps extends HTMLChakraProps<\"caption\"> {\n  /**\n   * The placement of the table caption. This sets the `caption-side` CSS attribute.\n   * @default \"bottom\"\n   */\n  placement?: \"top\" | \"bottom\"\n}\n\nexport const TableCaption = forwardRef<TableCaptionProps, \"caption\">(\n  (props, ref) => {\n    const { placement = \"bottom\", ...rest } = props\n    const styles = useStyles()\n    return (\n      <chakra.caption\n        {...rest}\n        ref={ref}\n        __css={{\n          ...styles.caption,\n          captionSide: placement,\n        }}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  TableCaption.displayName = \"TableCaption\"\n}\n\nexport interface TableHeadProps extends HTMLChakraProps<\"thead\"> {}\n\nexport const Thead = forwardRef<TableHeadProps, \"thead\">((props, ref) => {\n  const styles = useStyles()\n  return <chakra.thead {...props} ref={ref} __css={styles.thead} />\n})\n\nexport interface TableBodyProps extends HTMLChakraProps<\"tbody\"> {}\n\nexport const Tbody = forwardRef<TableBodyProps, \"tbody\">((props, ref) => {\n  const styles = useStyles()\n  return <chakra.tbody {...props} ref={ref} __css={styles.tbody} />\n})\n\nexport interface TableFooterProps extends HTMLChakraProps<\"tfoot\"> {}\n\nexport const Tfoot = forwardRef<TableFooterProps, \"tfoot\">((props, ref) => {\n  const styles = useStyles()\n  return <chakra.tfoot {...props} ref={ref} __css={styles.tfoot} />\n})\n\nexport interface TableColumnHeaderProps extends HTMLChakraProps<\"th\"> {\n  /**\n   * Aligns the cell content to the right\n   */\n  isNumeric?: boolean\n}\nexport const Th = forwardRef<TableColumnHeaderProps, \"th\">(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useStyles()\n    return (\n      <chakra.th\n        {...rest}\n        ref={ref}\n        __css={styles.th}\n        data-is-numeric={isNumeric}\n      />\n    )\n  },\n)\n\nexport interface TableRowProps extends HTMLChakraProps<\"tr\"> {}\nexport const Tr = forwardRef<TableRowProps, \"tr\">((props, ref) => {\n  const styles = useStyles()\n\n  return <chakra.tr role=\"row\" {...props} ref={ref} __css={styles.tr} />\n})\n\nexport interface TableCellProps extends HTMLChakraProps<\"td\"> {\n  /**\n   * Aligns the cell content to the right\n   */\n  isNumeric?: boolean\n}\nexport const Td = forwardRef<TableCellProps, \"td\">(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useStyles()\n\n    return (\n      <chakra.td\n        role=\"gridcell\"\n        {...rest}\n        ref={ref}\n        __css={styles.td}\n        data-is-numeric={isNumeric}\n      />\n    )\n  },\n)\n"],"file":"table.js"}