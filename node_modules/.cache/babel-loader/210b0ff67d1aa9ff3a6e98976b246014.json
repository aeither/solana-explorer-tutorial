{"ast":null,"code":"import * as tslib_1 from \"tslib\";\n\nfunction ItoI(a) {\n  return a;\n}\n\nfunction innerCreateMedium(defaults, middleware) {\n  if (middleware === void 0) {\n    middleware = ItoI;\n  }\n\n  var buffer = [];\n  var assigned = false;\n  var medium = {\n    read: function read() {\n      if (assigned) {\n        throw new Error('Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.');\n      }\n\n      if (buffer.length) {\n        return buffer[buffer.length - 1];\n      }\n\n      return defaults;\n    },\n    useMedium: function useMedium(data) {\n      var item = middleware(data, assigned);\n      buffer.push(item);\n      return function () {\n        buffer = buffer.filter(function (x) {\n          return x !== item;\n        });\n      };\n    },\n    assignSyncMedium: function assignSyncMedium(cb) {\n      assigned = true;\n\n      while (buffer.length) {\n        var cbs = buffer;\n        buffer = [];\n        cbs.forEach(cb);\n      }\n\n      buffer = {\n        push: function push(x) {\n          return cb(x);\n        },\n        filter: function filter() {\n          return buffer;\n        }\n      };\n    },\n    assignMedium: function assignMedium(cb) {\n      assigned = true;\n      var pendingQueue = [];\n\n      if (buffer.length) {\n        var cbs = buffer;\n        buffer = [];\n        cbs.forEach(cb);\n        pendingQueue = buffer;\n      }\n\n      var executeQueue = function executeQueue() {\n        var cbs = pendingQueue;\n        pendingQueue = [];\n        cbs.forEach(cb);\n      };\n\n      var cycle = function cycle() {\n        return Promise.resolve().then(executeQueue);\n      };\n\n      cycle();\n      buffer = {\n        push: function push(x) {\n          pendingQueue.push(x);\n          cycle();\n        },\n        filter: function filter(_filter) {\n          pendingQueue = pendingQueue.filter(_filter);\n          return buffer;\n        }\n      };\n    }\n  };\n  return medium;\n}\n\nexport function createMedium(defaults, middleware) {\n  if (middleware === void 0) {\n    middleware = ItoI;\n  }\n\n  return innerCreateMedium(defaults, middleware);\n}\nexport function createSidecarMedium(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var medium = innerCreateMedium(null);\n  medium.options = tslib_1.__assign({\n    async: true,\n    ssr: false\n  }, options);\n  return medium;\n}","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/use-sidecar/dist/es2015/medium.js"],"names":["tslib_1","ItoI","a","innerCreateMedium","defaults","middleware","buffer","assigned","medium","read","Error","length","useMedium","data","item","push","filter","x","assignSyncMedium","cb","cbs","forEach","assignMedium","pendingQueue","executeQueue","cycle","Promise","resolve","then","createMedium","createSidecarMedium","options","__assign","async","ssr"],"mappings":"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","sourcesContent":["import * as tslib_1 from \"tslib\";\nfunction ItoI(a) {\n    return a;\n}\nfunction innerCreateMedium(defaults, middleware) {\n    if (middleware === void 0) { middleware = ItoI; }\n    var buffer = [];\n    var assigned = false;\n    var medium = {\n        read: function () {\n            if (assigned) {\n                throw new Error('Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.');\n            }\n            if (buffer.length) {\n                return buffer[buffer.length - 1];\n            }\n            return defaults;\n        },\n        useMedium: function (data) {\n            var item = middleware(data, assigned);\n            buffer.push(item);\n            return function () {\n                buffer = buffer.filter(function (x) { return x !== item; });\n            };\n        },\n        assignSyncMedium: function (cb) {\n            assigned = true;\n            while (buffer.length) {\n                var cbs = buffer;\n                buffer = [];\n                cbs.forEach(cb);\n            }\n            buffer = {\n                push: function (x) { return cb(x); },\n                filter: function () { return buffer; },\n            };\n        },\n        assignMedium: function (cb) {\n            assigned = true;\n            var pendingQueue = [];\n            if (buffer.length) {\n                var cbs = buffer;\n                buffer = [];\n                cbs.forEach(cb);\n                pendingQueue = buffer;\n            }\n            var executeQueue = function () {\n                var cbs = pendingQueue;\n                pendingQueue = [];\n                cbs.forEach(cb);\n            };\n            var cycle = function () { return Promise.resolve().then(executeQueue); };\n            cycle();\n            buffer = {\n                push: function (x) {\n                    pendingQueue.push(x);\n                    cycle();\n                },\n                filter: function (filter) {\n                    pendingQueue = pendingQueue.filter(filter);\n                    return buffer;\n                },\n            };\n        },\n    };\n    return medium;\n}\nexport function createMedium(defaults, middleware) {\n    if (middleware === void 0) { middleware = ItoI; }\n    return innerCreateMedium(defaults, middleware);\n}\nexport function createSidecarMedium(options) {\n    if (options === void 0) { options = {}; }\n    var medium = innerCreateMedium(null);\n    medium.options = tslib_1.__assign({ async: true, ssr: false }, options);\n    return medium;\n}\n"]},"metadata":{},"sourceType":"module"}