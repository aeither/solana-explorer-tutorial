{"version":3,"sources":["../../../src/utils/transform-functions.ts"],"names":["isCssVar","isNumber","isString","backdropFilterTemplate","filterTemplate","getRingTemplate","getTransformGpuTemplate","getTransformTemplate","flexDirectionTemplate","gradientTransform","globalSet","isCSSFunction","analyzeCSSValue","value","num","parseFloat","toString","unit","replace","String","unitless","wrap","str","transformFunctions","filter","backdropFilter","ring","px","bgClip","color","backgroundClip","transform","fraction","float","theme","map","left","right","direction","degree","endsWith","gradient","blur","opacity","brightness","contrast","dropShadow","grayscale","hueRotate","invert","saturate","sepia","bgImage","prevent","has","outline","isNoneOrZero","outlineOffset","flexDirection","space","divide","result"],"mappings":"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","sourcesContent":["import { Dict, isCssVar, isNumber, isString } from \"@chakra-ui/utils\"\nimport {\n  backdropFilterTemplate,\n  filterTemplate,\n  getRingTemplate,\n  getTransformGpuTemplate,\n  getTransformTemplate,\n  flexDirectionTemplate,\n} from \"./templates\"\nimport { gradientTransform, globalSet, isCSSFunction } from \"./parse-gradient\"\n\nconst analyzeCSSValue = (value: number | string) => {\n  const num = parseFloat(value.toString())\n  const unit = value.toString().replace(String(num), \"\")\n  return { unitless: !unit, value: num, unit }\n}\n\nconst wrap = (str: string) => (value: any) => `${str}(${value})`\n\nexport const transformFunctions = {\n  filter(value: any) {\n    return value !== \"auto\" ? value : filterTemplate\n  },\n  backdropFilter(value: any) {\n    return value !== \"auto\" ? value : backdropFilterTemplate\n  },\n  ring(value: string) {\n    return getRingTemplate(transformFunctions.px(value))\n  },\n  bgClip(value: string) {\n    return value === \"text\"\n      ? { color: \"transparent\", backgroundClip: \"text\" }\n      : { backgroundClip: value }\n  },\n  transform(value: any) {\n    if (value === \"auto\") return getTransformTemplate()\n    if (value === \"auto-gpu\") return getTransformGpuTemplate()\n    return value\n  },\n  px(value: number | string) {\n    if (value == null) return value\n    const { unitless } = analyzeCSSValue(value)\n    return unitless || isNumber(value) ? `${value}px` : value\n  },\n  fraction(value: any) {\n    return !isNumber(value) || value > 1 ? value : `${value * 100}%`\n  },\n  float(value: any, theme: Dict) {\n    const map = { left: \"right\", right: \"left\" }\n    return theme.direction === \"rtl\" ? map[value] : value\n  },\n  degree(value: any) {\n    if (isCssVar(value) || value == null) return value\n    const unitless = isString(value) && !value.endsWith(\"deg\")\n    return isNumber(value) || unitless ? `${value}deg` : value\n  },\n  gradient: gradientTransform,\n  blur: wrap(\"blur\"),\n  opacity: wrap(\"opacity\"),\n  brightness: wrap(\"brightness\"),\n  contrast: wrap(\"contrast\"),\n  dropShadow: wrap(\"drop-shadow\"),\n  grayscale: wrap(\"grayscale\"),\n  hueRotate: wrap(\"hue-rotate\"),\n  invert: wrap(\"invert\"),\n  saturate: wrap(\"saturate\"),\n  sepia: wrap(\"sepia\"),\n  bgImage(value: any) {\n    if (value == null) return value\n    const prevent = isCSSFunction(value) || globalSet.has(value)\n    return !prevent ? `url(${value})` : value\n  },\n  outline(value: any) {\n    const isNoneOrZero = String(value) === \"0\" || String(value) === \"none\"\n    return value !== null && isNoneOrZero\n      ? { outline: \"2px solid transparent\", outlineOffset: \"2px\" }\n      : { outline: value }\n  },\n  flexDirection(value: any) {\n    const { space, divide } = flexDirectionTemplate[value] ?? {}\n    const result = { flexDirection: value }\n    if (space) result[space] = 1\n    if (divide) result[divide] = 1\n    return result\n  },\n}\n"],"file":"transform-functions.js"}