{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { TransitionDefaults, withDelay } from \"./transition-utils\";\nvar variants = {\n  initial: function initial(_ref) {\n    var _transition$exit;\n\n    var offsetX = _ref.offsetX,\n        offsetY = _ref.offsetY,\n        transition = _ref.transition,\n        transitionEnd = _ref.transitionEnd,\n        delay = _ref.delay;\n    return {\n      opacity: 0,\n      x: offsetX,\n      y: offsetY,\n      transition: (_transition$exit = transition == null ? void 0 : transition.exit) != null ? _transition$exit : withDelay.exit(TransitionDefaults.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    };\n  },\n  enter: function enter(_ref2) {\n    var _transition$enter;\n\n    var transition = _ref2.transition,\n        transitionEnd = _ref2.transitionEnd,\n        delay = _ref2.delay;\n    return {\n      opacity: 1,\n      x: 0,\n      y: 0,\n      transition: (_transition$enter = transition == null ? void 0 : transition.enter) != null ? _transition$enter : withDelay.enter(TransitionDefaults.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  },\n  exit: function exit(_ref3) {\n    var _transition$exit2;\n\n    var offsetY = _ref3.offsetY,\n        offsetX = _ref3.offsetX,\n        transition = _ref3.transition,\n        transitionEnd = _ref3.transitionEnd,\n        reverse = _ref3.reverse,\n        delay = _ref3.delay;\n    var offset = {\n      x: offsetX,\n      y: offsetY\n    };\n    return _extends({\n      opacity: 0,\n      transition: (_transition$exit2 = transition == null ? void 0 : transition.exit) != null ? _transition$exit2 : withDelay.exit(TransitionDefaults.exit, delay)\n    }, reverse ? _extends({}, offset, {\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    }) : {\n      transitionEnd: _extends({}, offset, transitionEnd == null ? void 0 : transitionEnd.exit)\n    });\n  }\n};\nexport var slideFadeConfig = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants\n};\nexport var SlideFade = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var unmountOnExit = props.unmountOnExit,\n      isOpen = props.in,\n      _props$reverse = props.reverse,\n      reverse = _props$reverse === void 0 ? true : _props$reverse,\n      className = props.className,\n      _props$offsetX = props.offsetX,\n      offsetX = _props$offsetX === void 0 ? 0 : _props$offsetX,\n      _props$offsetY = props.offsetY,\n      offsetY = _props$offsetY === void 0 ? 8 : _props$offsetY,\n      transition = props.transition,\n      transitionEnd = props.transitionEnd,\n      delay = props.delay,\n      rest = _objectWithoutPropertiesLoose(props, [\"unmountOnExit\", \"in\", \"reverse\", \"className\", \"offsetX\", \"offsetY\", \"transition\", \"transitionEnd\", \"delay\"]);\n\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var custom = {\n    offsetX: offsetX,\n    offsetY: offsetY,\n    reverse: reverse,\n    transition: transition,\n    transitionEnd: transitionEnd,\n    delay: delay\n  };\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    custom: custom\n  }, show && /*#__PURE__*/React.createElement(motion.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-offset-slide\", className),\n    custom: custom\n  }, slideFadeConfig, {\n    animate: animate\n  }, rest)));\n});\n\nif (__DEV__) {\n  SlideFade.displayName = \"SlideFade\";\n}","map":{"version":3,"sources":["../../src/slide-fade.tsx"],"names":["variants","initial","delay","opacity","x","y","transition","withDelay","TransitionDefaults","transitionEnd","exit","enter","offset","offsetY","reverse","slideFadeConfig","animate","SlideFade","in","offsetX","show","unmountOnExit","isOpen","custom","cx"],"mappings":"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","sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  TransitionDefaults,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface SlideFadeOptions {\n  /**\n   * The offset on the horizontal or `x` axis\n   * @default 0\n   */\n  offsetX?: string | number\n  /**\n   * The offset on the vertical or `y` axis\n   * @default 8\n   */\n  offsetY?: string | number\n  /**\n   * If `true`, the element will be transitioned back to the offset when it leaves.\n   * Otherwise, it'll only fade out\n   * @default true\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<SlideFadeOptions> = {\n  initial: ({ offsetX, offsetY, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    x: offsetX,\n    y: offsetY,\n    transition:\n      transition?.exit ?? withDelay.exit(TransitionDefaults.exit, delay),\n    transitionEnd: transitionEnd?.exit,\n  }),\n  enter: ({ transition, transitionEnd, delay }) => ({\n    opacity: 1,\n    x: 0,\n    y: 0,\n    transition:\n      transition?.enter ?? withDelay.enter(TransitionDefaults.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n  exit: ({ offsetY, offsetX, transition, transitionEnd, reverse, delay }) => {\n    const offset = { x: offsetX, y: offsetY }\n    return {\n      opacity: 0,\n      transition:\n        transition?.exit ?? withDelay.exit(TransitionDefaults.exit, delay),\n      ...(reverse\n        ? { ...offset, transitionEnd: transitionEnd?.exit }\n        : { transitionEnd: { ...offset, ...transitionEnd?.exit } }),\n    }\n  },\n}\n\nexport const slideFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface SlideFadeProps\n  extends SlideFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const SlideFade = React.forwardRef<HTMLDivElement, SlideFadeProps>(\n  (props, ref) => {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      className,\n      offsetX = 0,\n      offsetY = 8,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = {\n      offsetX,\n      offsetY,\n      reverse,\n      transition,\n      transitionEnd,\n      delay,\n    }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            custom={custom}\n            {...slideFadeConfig}\n            animate={animate}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  SlideFade.displayName = \"SlideFade\"\n}\n"]},"metadata":{},"sourceType":"module"}