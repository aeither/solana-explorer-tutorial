{"version":3,"sources":["../../src/lazy.ts"],"names":["determineLazyBehavior","options","hasBeenSelected","isLazy","isSelected","lazyBehavior"],"mappings":"AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,qBAAT,CAA+BC,OAA/B,EAAsE;AAC3E,MAAM;AACJC,IAAAA,eADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,YAAY,GAAG;AAJX,MAKFJ,OALJ,CAD2E,CAQ3E;;AACA,MAAI,CAACE,MAAL,EAAa,OAAO,IAAP,CAT8D,CAW3E;;AACA,MAAIC,UAAJ,EAAgB,OAAO,IAAP,CAZ2D,CAc3E;;AACA,MAAIC,YAAY,KAAK,aAAjB,IAAkCH,eAAtC,EAAuD,OAAO,IAAP;AAEvD,SAAO,KAAP;AACD","sourcesContent":["export type LazyBehavior = \"unmount\" | \"keepMounted\"\n\ninterface DetermineLazyBehaviorOptions {\n  hasBeenSelected?: boolean\n  isLazy?: boolean\n  isSelected?: boolean\n  lazyBehavior?: LazyBehavior\n}\n\n/**\n * Determines whether the children of a disclosure widget\n * should be rendered or not, depending on the lazy behavior.\n *\n * Used in accordion, tabs, popover, menu and other disclosure\n * widgets.\n */\nexport function determineLazyBehavior(options: DetermineLazyBehaviorOptions) {\n  const {\n    hasBeenSelected,\n    isLazy,\n    isSelected,\n    lazyBehavior = \"unmount\",\n  } = options\n\n  // if not lazy, always render the disclosure's content\n  if (!isLazy) return true\n\n  // if the diclosure is selected, render the disclosure's content\n  if (isSelected) return true\n\n  // if the disclosure was selected but not active, keep its content active\n  if (lazyBehavior === \"keepMounted\" && hasBeenSelected) return true\n\n  return false\n}\n"],"file":"lazy.js"}