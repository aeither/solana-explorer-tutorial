{"version":3,"sources":["../../src/utils.ts"],"names":["toVar","value","fallback","varRef","cssVars","arrowShadowColor","arrowSize","arrowSizeHalf","arrowBg","transformOrigin","arrowOffset","getBoxShadow","placement","includes","transforms","top","bottom","left","right","toTransformOrigin","defaultEventListeners","scroll","resize","getEventListenerOptions","eventListeners","enabled","options"],"mappings":";;;;;;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAgBC,QAAhB;AAAA,SAAuC;AACnD,WAAKD,KAD8C;AAEnDE,IAAAA,MAAM,EAAED,QAAQ,YAAUD,KAAV,UAAoBC,QAApB,kBAAyCD,KAAzC;AAFmC,GAAvC;AAAA,CAAd;;AAKO,IAAMG,OAAO,GAAG;AACrBC,EAAAA,gBAAgB,EAAEL,KAAK,CAAC,6BAAD,CADF;AAErBM,EAAAA,SAAS,EAAEN,KAAK,CAAC,qBAAD,EAAwB,KAAxB,CAFK;AAGrBO,EAAAA,aAAa,EAAEP,KAAK,CAAC,0BAAD,CAHC;AAIrBQ,EAAAA,OAAO,EAAER,KAAK,CAAC,mBAAD,CAJO;AAKrBS,EAAAA,eAAe,EAAET,KAAK,CAAC,2BAAD,CALD;AAMrBU,EAAAA,WAAW,EAAEV,KAAK,CAAC,uBAAD;AANG,CAAhB;;;AASA,SAASW,YAAT,CAAsBC,SAAtB,EAA4C;AACjD,MAAIA,SAAS,CAACC,QAAV,CAAmB,KAAnB,CAAJ,EACE;AACF,MAAID,SAAS,CAACC,QAAV,CAAmB,QAAnB,CAAJ,EACE;AACF,MAAID,SAAS,CAACC,QAAV,CAAmB,OAAnB,CAAJ,EACE;AACF,MAAID,SAAS,CAACC,QAAV,CAAmB,MAAnB,CAAJ,EACE;AACH;;AAED,IAAMC,UAAU,GAAG;AACjBC,EAAAA,GAAG,EAAE,eADY;AAEjB,eAAa,aAFI;AAGjB,aAAW,cAHM;AAKjBC,EAAAA,MAAM,EAAE,YALS;AAMjB,kBAAgB,UANC;AAOjB,gBAAc,WAPG;AASjBC,EAAAA,IAAI,EAAE,cATW;AAUjB,gBAAc,WAVG;AAWjB,cAAY,cAXK;AAajBC,EAAAA,KAAK,EAAE,aAbU;AAcjB,iBAAe,UAdE;AAejB,eAAa;AAfI,CAAnB;;AAkBO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACP,SAAD;AAAA,SAA0BE,UAAU,CAACF,SAAD,CAApC;AAAA,CAA1B;;;AAEP,IAAMQ,qBAAqB,GAAG;AAC5BC,EAAAA,MAAM,EAAE,IADoB;AAE5BC,EAAAA,MAAM,EAAE;AAFoB,CAA9B;;AAKO,SAASC,uBAAT,CACLtB,KADK,EAEL;AACA,MAAIuB,cAAJ;;AAIA,MAAI,OAAOvB,KAAP,KAAiB,QAArB,EAA+B;AAC7BuB,IAAAA,cAAc,GAAG;AACfC,MAAAA,OAAO,EAAE,IADM;AAEfC,MAAAA,OAAO,eAAON,qBAAP,EAAiCnB,KAAjC;AAFQ,KAAjB;AAID,GALD,MAKO;AACLuB,IAAAA,cAAc,GAAG;AACfC,MAAAA,OAAO,EAAExB,KADM;AAEfyB,MAAAA,OAAO,EAAEN;AAFM,KAAjB;AAID;;AACD,SAAOI,cAAP;AACD","sourcesContent":["import { Placement } from \"@popperjs/core\"\n\nconst toVar = (value: string, fallback?: string) => ({\n  var: value,\n  varRef: fallback ? `var(${value}, ${fallback})` : `var(${value})`,\n})\n\nexport const cssVars = {\n  arrowShadowColor: toVar(\"--popper-arrow-shadow-color\"),\n  arrowSize: toVar(\"--popper-arrow-size\", \"8px\"),\n  arrowSizeHalf: toVar(\"--popper-arrow-size-half\"),\n  arrowBg: toVar(\"--popper-arrow-bg\"),\n  transformOrigin: toVar(\"--popper-transform-origin\"),\n  arrowOffset: toVar(\"--popper-arrow-offset\"),\n} as const\n\nexport function getBoxShadow(placement: Placement) {\n  if (placement.includes(\"top\"))\n    return `1px 1px 1px 0 var(--popper-arrow-shadow-color)`\n  if (placement.includes(\"bottom\"))\n    return `-1px -1px 1px 0 var(--popper-arrow-shadow-color)`\n  if (placement.includes(\"right\"))\n    return `-1px 1px 1px 0 var(--popper-arrow-shadow-color)`\n  if (placement.includes(\"left\"))\n    return `1px -1px 1px 0 var(--popper-arrow-shadow-color)`\n}\n\nconst transforms = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\",\n}\n\nexport const toTransformOrigin = (placement: Placement) => transforms[placement]\n\nconst defaultEventListeners = {\n  scroll: true,\n  resize: true,\n}\n\nexport function getEventListenerOptions(\n  value?: boolean | Partial<typeof defaultEventListeners>,\n) {\n  let eventListeners: {\n    enabled?: boolean\n    options?: typeof defaultEventListeners\n  }\n  if (typeof value === \"object\") {\n    eventListeners = {\n      enabled: true,\n      options: { ...defaultEventListeners, ...value },\n    }\n  } else {\n    eventListeners = {\n      enabled: value,\n      options: defaultEventListeners,\n    }\n  }\n  return eventListeners\n}\n"],"file":"utils.js"}