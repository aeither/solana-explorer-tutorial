{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/lin/Documents/Projects/solana-explorer-tutorial/src/StatsCard.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { Connection, clusterApiUrl } from \"@solana/web3.js\";\nimport { useEffect, useState } from \"react\";\nimport { displayTimestampUtc } from \"../utils/date\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var SAMPLE_HISTORY_HOURS = 6;\nexport default function StatsCard() {\n  _s();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      clusterStats = _useState2[0],\n      setClusterStats = _useState2[1];\n\n  useEffect(function () {});\n\n  function getClusterStats() {\n    return _getClusterStats.apply(this, arguments);\n  }\n\n  function _getClusterStats() {\n    _getClusterStats = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, connection, samples, transactionCount, epochInfo, blockTime, blockHeight, absoluteSlot, currentEpoch, slotIndex, slotsInEpoch, epochProgress, clusterStatsData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"Hello\");\n              url = clusterApiUrl(\"devnet\").replace(\"api\", \"explorer-api\");\n              connection = new Connection(url);\n              _context.next = 5;\n              return connection.getRecentPerformanceSamples(60 * SAMPLE_HISTORY_HOURS);\n\n            case 5:\n              samples = _context.sent;\n              _context.next = 8;\n              return connection.getTransactionCount();\n\n            case 8:\n              transactionCount = _context.sent;\n              _context.next = 11;\n              return connection.getEpochInfo();\n\n            case 11:\n              epochInfo = _context.sent;\n              _context.next = 14;\n              return connection.getBlockTime(epochInfo.absoluteSlot);\n\n            case 14:\n              blockTime = _context.sent;\n              blockHeight = epochInfo.blockHeight, absoluteSlot = epochInfo.absoluteSlot;\n              currentEpoch = epochInfo.epoch.toString();\n              slotIndex = epochInfo.slotIndex, slotsInEpoch = epochInfo.slotsInEpoch;\n              epochProgress = (100 * slotIndex / slotsInEpoch).toFixed(1) + \"%\"; // console.log(samples);\n\n              clusterStatsData = {\n                absoluteSlot: absoluteSlot,\n                blockHeight: blockHeight,\n                blockTime: blockTime * 1000,\n                currentEpoch: currentEpoch,\n                epochProgress: epochProgress\n              };\n              setClusterStats(clusterStatsData);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getClusterStats.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stats Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return getClusterStats();\n      },\n      children: \"Supply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), clusterStats ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"w-100\",\n          children: \"Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"text-lg-right text-monospace\",\n          children: clusterStats.absoluteSlot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), clusterStats.blockHeight !== undefined && /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"w-100\",\n          children: \"Block height\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"text-lg-right text-monospace\",\n          children: clusterStats.blockHeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), clusterStats.blockTime && /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"w-100\",\n          children: \"Cluster time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"text-lg-right text-monospace\",\n          children: displayTimestampUtc(clusterStats.blockTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"w-100\",\n          children: \"Epoch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"text-lg-right text-monospace\",\n          children: clusterStats.currentEpoch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"w-100\",\n          children: \"Epoch progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"text-lg-right text-monospace\",\n          children: clusterStats.epochProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StatsCard, \"0HBpPCYdT544S4Xr9T/DI9bGGPE=\");\n\n_c = StatsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatsCard\");","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/src/StatsCard.tsx"],"names":["Connection","clusterApiUrl","useEffect","useState","displayTimestampUtc","SAMPLE_HISTORY_HOURS","StatsCard","clusterStats","setClusterStats","getClusterStats","console","log","url","replace","connection","getRecentPerformanceSamples","samples","getTransactionCount","transactionCount","getEpochInfo","epochInfo","getBlockTime","absoluteSlot","blockTime","blockHeight","currentEpoch","epoch","toString","slotIndex","slotsInEpoch","epochProgress","toFixed","clusterStatsData","undefined"],"mappings":"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","sourcesContent":["import \"./styles.css\";\nimport { Supply, Connection, clusterApiUrl } from \"@solana/web3.js\";\nimport { useEffect, useState } from \"react\";\nimport { displayTimestampUtc } from \"../utils/date\";\n\nexport const SAMPLE_HISTORY_HOURS = 6;\n\nexport type ClusterStats = {\n  absoluteSlot: number;\n  blockHeight: number | undefined;\n  blockTime: number;\n  currentEpoch: string;\n  epochProgress: string;\n};\n\nexport default function StatsCard() {\n  const [clusterStats, setClusterStats] = useState<ClusterStats>();\n  useEffect(() => {});\n  async function getClusterStats() {\n    console.log(\"Hello\");\n    const url = clusterApiUrl(\"devnet\").replace(\"api\", \"explorer-api\");\n    const connection = new Connection(url);\n    const samples = await connection.getRecentPerformanceSamples(\n      60 * SAMPLE_HISTORY_HOURS\n    );\n    const transactionCount = await connection.getTransactionCount();\n    const epochInfo = await connection.getEpochInfo();\n    const blockTime = await connection.getBlockTime(epochInfo.absoluteSlot);\n    const { blockHeight, absoluteSlot } = epochInfo;\n    const currentEpoch = epochInfo.epoch.toString();\n    const { slotIndex, slotsInEpoch } = epochInfo;\n    const epochProgress = ((100 * slotIndex) / slotsInEpoch).toFixed(1) + \"%\";\n\n    // console.log(samples);\n    const clusterStatsData = {\n      absoluteSlot,\n      blockHeight,\n      blockTime: blockTime! * 1000,\n      currentEpoch,\n      epochProgress\n    };\n    setClusterStats(clusterStatsData);\n  }\n  return (\n    <div className=\"App\">\n      <h1>Stats Card</h1>\n      <button onClick={() => getClusterStats()}>Supply</button>\n      {clusterStats ? (\n        <>\n          <tr>\n            <td className=\"w-100\">Slot</td>\n            <td className=\"text-lg-right text-monospace\">\n              {clusterStats.absoluteSlot}\n            </td>\n          </tr>\n          {clusterStats.blockHeight !== undefined && (\n            <tr>\n              <td className=\"w-100\">Block height</td>\n              <td className=\"text-lg-right text-monospace\">\n                {clusterStats.blockHeight}\n              </td>\n            </tr>\n          )}\n          {clusterStats.blockTime && (\n            <tr>\n              <td className=\"w-100\">Cluster time</td>\n              <td className=\"text-lg-right text-monospace\">\n                {displayTimestampUtc(clusterStats.blockTime)}\n              </td>\n            </tr>\n          )}\n          <tr>\n            <td className=\"w-100\">Epoch</td>\n            <td className=\"text-lg-right text-monospace\">\n              {clusterStats.currentEpoch}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"w-100\">Epoch progress</td>\n            <td className=\"text-lg-right text-monospace\">\n              {clusterStats.epochProgress}\n            </td>\n          </tr>\n        </>\n      ) : (\n        <p>No Data</p>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}