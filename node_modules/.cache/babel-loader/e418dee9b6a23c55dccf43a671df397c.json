{"ast":null,"code":"import * as React from \"react\";\n\nfunction setScript(initialValue) {\n  var mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  var systemPreference = mql.matches ? \"dark\" : \"light\";\n  var persistedPreference;\n\n  try {\n    persistedPreference = localStorage.getItem(\"chakra-ui-color-mode\");\n  } catch (error) {\n    console.log(\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\");\n  }\n\n  var isInStorage = typeof persistedPreference === \"string\";\n  var colorMode;\n\n  if (isInStorage) {\n    colorMode = persistedPreference;\n  } else {\n    colorMode = initialValue === \"system\" ? systemPreference : initialValue;\n  }\n\n  if (colorMode) {\n    var root = document.documentElement;\n    root.style.setProperty(\"--chakra-ui-color-mode\", colorMode);\n  }\n}\n/**\n * Script to add to the root of your application when using localStorage,\n * to help prevent flash of color mode that can happen during page load.\n */\n\n\nexport var ColorModeScript = function ColorModeScript(props) {\n  var _props$initialColorMo = props.initialColorMode,\n      initialColorMode = _props$initialColorMo === void 0 ? \"light\" : _props$initialColorMo;\n  var html = \"(\" + String(setScript) + \")('\" + initialColorMode + \"')\";\n  return /*#__PURE__*/React.createElement(\"script\", {\n    nonce: props.nonce,\n    dangerouslySetInnerHTML: {\n      __html: html\n    }\n  });\n};","map":{"version":3,"sources":["../../src/color-mode-script.tsx"],"names":["mql","window","systemPreference","persistedPreference","localStorage","console","isInStorage","colorMode","initialValue","root","document","ColorModeScript","props","initialColorMode","html","String","__html"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;AAKA,SAAA,SAAA,CAAA,YAAA,EAAuC;AACrC,MAAMA,GAAG,GAAGC,MAAM,CAANA,UAAAA,CAAZ,8BAAYA,CAAZ;AACA,MAAMC,gBAAgB,GAAGF,GAAG,CAAHA,OAAAA,GAAAA,MAAAA,GAAzB,OAAA;AAEA,MAAA,mBAAA;;AAEA,MAAI;AACFG,IAAAA,mBAAmB,GAAGC,YAAY,CAAZA,OAAAA,CAAtBD,sBAAsBC,CAAtBD;AADF,GAAA,CAEE,OAAA,KAAA,EAAc;AACdE,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,6FAAAA;AAGD;;AAED,MAAMC,WAAW,GAAG,OAAA,mBAAA,KAApB,QAAA;AAEA,MAAA,SAAA;;AAEA,MAAA,WAAA,EAAiB;AACfC,IAAAA,SAAS,GAATA,mBAAAA;AADF,GAAA,MAEO;AACLA,IAAAA,SAAS,GAAGC,YAAY,KAAZA,QAAAA,GAAAA,gBAAAA,GAAZD,YAAAA;AACD;;AAED,MAAA,SAAA,EAAe;AACb,QAAME,IAAI,GAAGC,QAAQ,CAArB,eAAA;AACAD,IAAAA,IAAI,CAAJA,KAAAA,CAAAA,WAAAA,CAAAA,wBAAAA,EAAAA,SAAAA;AACD;AACF;AAUD;AACA;AACA;AACA;;;AACA,OAAO,IAAME,eAAe,GAAIC,SAAnBD,eAAmBC,CAAAA,KAAD,EAAiC;AAC9D,8BAAA,KAAA,CAAQC,gBAAR;AAAA,MAAQA,gBAAR,sCAA2B,OAA3B;AACA,MAAMC,IAAI,GAAA,MAAOC,MAAM,CAAb,SAAa,CAAb,GAAA,KAAA,GAAA,gBAAA,GAAV,IAAA;AACA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,KAAK,EAAEH,KAAK,CAApB,KAAA;AAA4B,IAAA,uBAAuB,EAAE;AAAEI,MAAAA,MAAM,EAAEF;AAAV;AAArD,GAAA,CADF;AAHK,CAAA","sourcesContent":["import * as React from \"react\"\nimport { ColorMode } from \"./color-mode-provider\"\n\ntype Mode = ColorMode | \"system\" | undefined\n\nfunction setScript(initialValue: Mode) {\n  const mql = window.matchMedia(\"(prefers-color-scheme: dark)\")\n  const systemPreference = mql.matches ? \"dark\" : \"light\"\n\n  let persistedPreference: Mode\n\n  try {\n    persistedPreference = localStorage.getItem(\"chakra-ui-color-mode\") as Mode\n  } catch (error) {\n    console.log(\n      \"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\",\n    )\n  }\n\n  const isInStorage = typeof persistedPreference === \"string\"\n\n  let colorMode: Mode\n\n  if (isInStorage) {\n    colorMode = persistedPreference\n  } else {\n    colorMode = initialValue === \"system\" ? systemPreference : initialValue\n  }\n\n  if (colorMode) {\n    const root = document.documentElement\n    root.style.setProperty(\"--chakra-ui-color-mode\", colorMode)\n  }\n}\n\ninterface ColorModeScriptProps {\n  initialColorMode?: Mode\n  /**\n   * Optional nonce that will be passed to the created `<script>` tag.\n   */\n  nonce?: string\n}\n\n/**\n * Script to add to the root of your application when using localStorage,\n * to help prevent flash of color mode that can happen during page load.\n */\nexport const ColorModeScript = (props: ColorModeScriptProps) => {\n  const { initialColorMode = \"light\" } = props\n  const html = `(${String(setScript)})('${initialColorMode}')`\n  return (\n    <script nonce={props.nonce} dangerouslySetInnerHTML={{ __html: html }} />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}