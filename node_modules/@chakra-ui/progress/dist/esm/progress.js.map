{"version":3,"sources":["../../src/progress.tsx"],"names":["chakra","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","__DEV__","React","getProgressProps","progress","stripe","ProgressLabel","props","styles","labelStyles","top","left","width","textAlign","position","transform","label","displayName","ProgressFilledTrack","min","max","value","isIndeterminate","rest","trackStyles","height","filledTrack","percent","style","bind","Progress","hasStripe","isAnimated","children","borderRadius","propBorderRadius","ariaLabel","ariaLabelledBy","track","stripAnimation","animation","shouldAddStripe","shouldAnimateStripe","css","willChange","minWidth","overflow"],"mappings":";;;;AAAA,SACEA,MADF,EAGEC,gBAHF,EAIEC,cAJF,EAOEC,mBAPF,EAQEC,SARF,QAUO,mBAVP;AAWA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SACEC,gBADF,EAGEC,QAHF,EAIEC,MAJF,QAKO,kBALP;;AASA;AACA;AACA;AACA;AACA,OAAO,IAAMC,aAA2C,GAAIC,KAAD,IAAW;AACpE,MAAMC,MAAM,GAAGR,SAAS,EAAxB;;AACA,MAAMS,WAA8B;AAClCC,IAAAA,GAAG,EAAE,KAD6B;AAElCC,IAAAA,IAAI,EAAE,KAF4B;AAGlCC,IAAAA,KAAK,EAAE,MAH2B;AAIlCC,IAAAA,SAAS,EAAE,QAJuB;AAKlCC,IAAAA,QAAQ,EAAE,UALwB;AAMlCC,IAAAA,SAAS,EAAE;AANuB,KAO/BP,MAAM,CAACQ,KAPwB,CAApC;;AASA,sBAAO,oBAAC,MAAD,CAAQ,GAAR,eAAgBT,KAAhB;AAAuB,IAAA,KAAK,EAAEE;AAA9B,KAAP;AACD,CAZM;;AAcP,IAAIR,OAAJ,EAAa;AACXK,EAAAA,aAAa,CAACW,WAAd,GAA4B,eAA5B;AACD;;AAMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,mBAAuD,GAAIX,KAAD,IAAW;AACzE,MAAM;AAAEY,IAAAA,GAAF;AAAOC,IAAAA,GAAP;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAgDf,KAAtD;AAAA,MAA6CgB,IAA7C,iCAAsDhB,KAAtD;;AACA,MAAMH,QAAQ,GAAGD,gBAAgB,CAAC;AAAEkB,IAAAA,KAAF;AAASF,IAAAA,GAAT;AAAcC,IAAAA,GAAd;AAAmBE,IAAAA;AAAnB,GAAD,CAAjC;AAEA,MAAMd,MAAM,GAAGR,SAAS,EAAxB;;AACA,MAAMwB,WAAW;AACfC,IAAAA,MAAM,EAAE;AADO,KAEZjB,MAAM,CAACkB,WAFK,CAAjB;;AAKA,sBACE,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,KAAK;AACHd,MAAAA,KAAK,EAAKR,QAAQ,CAACuB,OAAd;AADF,OAEAJ,IAAI,CAACK,KAFL;AADP,KAKMxB,QAAQ,CAACyB,IALf,EAMMN,IANN;AAOE,IAAA,KAAK,EAAEC;AAPT,KADF;AAWD,CArBD;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMM,QAAiC,GAAIvB,KAAD,IAAW;AAAA;;AAC1D,0BAYIV,gBAAgB,CAACU,KAAD,CAZpB;AAAA,MAAM;AACJc,IAAAA,KADI;AAEJF,IAAAA,GAAG,GAAG,CAFF;AAGJC,IAAAA,GAAG,GAAG,GAHF;AAIJW,IAAAA,SAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA,YAAY,EAAEC,gBAPV;AAQJb,IAAAA,eARI;AASJ,kBAAcc,SATV;AAUJ,uBAAmBC;AAVf,GAAN;AAAA,MAWKd,IAXL;;AAcA,MAAMf,MAAM,GAAGT,mBAAmB,CAAC,UAAD,EAAaQ,KAAb,CAAlC;AAEA,MAAM2B,YAAY,GAChBC,gBADgB,WAChBA,gBADgB,oBAEf3B,MAAM,CAAC8B,KAFQ,qBAEf,cAAcJ,YAFjB;AAIA,MAAMK,cAAc,GAAG;AAAEC,IAAAA,SAAS,EAAKnC,MAAL;AAAX,GAAvB;AAEA;AACF;AACA;;AACE,MAAMoC,eAAe,GAAG,CAACnB,eAAD,IAAoBS,SAA5C;AAEA,MAAMW,mBAAmB,GAAGD,eAAe,IAAIT,UAA/C;AAEA;AACF;AACA;;AACE,MAAMW,GAAuB,gBACvBD,mBAAmB,IAAIH,cADA,EAEvBjB,eAAe,IAAI;AACrBR,IAAAA,QAAQ,EAAE,UADW;AAErB8B,IAAAA,UAAU,EAAE,MAFS;AAGrBC,IAAAA,QAAQ,EAAE,KAHW;AAIrBL,IAAAA,SAAS,EAAKpC,QAAL;AAJY,GAFI,CAA7B;;AAUA,MAAMoB,WAA8B;AAClCsB,IAAAA,QAAQ,EAAE,QADwB;AAElChC,IAAAA,QAAQ,EAAE;AAFwB,KAG/BN,MAAM,CAAC8B,KAHwB,CAApC;;AAMA,sBACE,oBAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,YAAY,EAAEJ,YAA1B;AAAwC,IAAA,KAAK,EAAEV;AAA/C,KAAgED,IAAhE,gBACE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEf;AAAvB,kBACE,oBAAC,mBAAD;AACE,kBAAY4B,SADd;AAEE,uBAAiBC,cAFnB;AAGE,IAAA,GAAG,EAAElB,GAHP;AAIE,IAAA,GAAG,EAAEC,GAJP;AAKE,IAAA,KAAK,EAAEC,KALT;AAME,IAAA,eAAe,EAAEC,eANnB;AAOE,IAAA,GAAG,EAAEqB,GAPP;AAQE,IAAA,YAAY,EAAET;AARhB,IADF,EAWGD,QAXH,CADF,CADF;AAiBD,CAlEM;;AAoEP,IAAIhC,OAAJ,EAAa;AACX6B,EAAAA,QAAQ,CAACb,WAAT,GAAuB,UAAvB;AACD","sourcesContent":["import {\n  chakra,\n  Interpolation,\n  omitThemingProps,\n  StylesProvider,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport {\n  getProgressProps,\n  GetProgressPropsOptions,\n  progress,\n  stripe,\n} from \"./progress.utils\"\n\nexport interface ProgressLabelProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * ProgressLabel is used to show the numeric value of the progress.\n * @see Docs https://chakra-ui.com/progress\n */\nexport const ProgressLabel: React.FC<ProgressLabelProps> = (props) => {\n  const styles = useStyles()\n  const labelStyles: SystemStyleObject = {\n    top: \"50%\",\n    left: \"50%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\",\n    ...styles.label,\n  }\n  return <chakra.div {...props} __css={labelStyles} />\n}\n\nif (__DEV__) {\n  ProgressLabel.displayName = \"ProgressLabel\"\n}\n\nexport interface ProgressFilledTrackProps\n  extends HTMLChakraProps<\"div\">,\n    GetProgressPropsOptions {}\n\n/**\n * ProgressFilledTrack (Linear)\n *\n * The progress component that visually indicates the current level of the progress bar.\n * It applies `background-color` and changes its width.\n *\n * @see Docs https://chakra-ui.com/progress\n */\nconst ProgressFilledTrack: React.FC<ProgressFilledTrackProps> = (props) => {\n  const { min, max, value, isIndeterminate, ...rest } = props\n  const progress = getProgressProps({ value, min, max, isIndeterminate })\n\n  const styles = useStyles()\n  const trackStyles = {\n    height: \"100%\",\n    ...styles.filledTrack,\n  }\n\n  return (\n    <chakra.div\n      style={{\n        width: `${progress.percent}%`,\n        ...rest.style,\n      }}\n      {...progress.bind}\n      {...rest}\n      __css={trackStyles}\n    />\n  )\n}\n\nexport interface ProgressTrackProps extends HTMLChakraProps<\"div\"> {}\n\ninterface ProgressOptions {\n  /**\n   * The `value` of the progress indicator.\n   * If `undefined` the progress bar will be in `indeterminate` state\n   */\n  value?: number\n  /**\n   * The minimum value of the progress\n   */\n  min?: number\n  /**\n   * The maximum value of the progress\n   */\n  max?: number\n  /**\n   * If `true`, the progress bar will show stripe\n   */\n  hasStripe?: boolean\n  /**\n   * If `true`, and hasStripe is `true`, the stripes will be animated\n   */\n  isAnimated?: boolean\n  /**\n   * If `true`, the progress will be indeterminate and the `value`\n   * prop will be ignored\n   */\n  isIndeterminate?: boolean\n}\n\nexport interface ProgressProps\n  extends ProgressOptions,\n    ThemingProps<\"Progress\">,\n    HTMLChakraProps<\"div\"> {}\n\n/**\n * Progress (Linear)\n *\n * Progress is used to display the progress status for a task that takes a long\n * time or consists of several steps.\n *\n * It includes accessible attributes to help assistive technologies understand\n * and speak the progress values.\n *\n * @see Docs https://chakra-ui.com/progress\n */\nexport const Progress: React.FC<ProgressProps> = (props) => {\n  const {\n    value,\n    min = 0,\n    max = 100,\n    hasStripe,\n    isAnimated,\n    children,\n    borderRadius: propBorderRadius,\n    isIndeterminate,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    ...rest\n  } = omitThemingProps(props)\n\n  const styles = useMultiStyleConfig(\"Progress\", props)\n\n  const borderRadius =\n    propBorderRadius ??\n    (styles.track?.borderRadius as string | number | undefined)\n\n  const stripAnimation = { animation: `${stripe} 1s linear infinite` }\n\n  /**\n   * We should not use stripe if it is `indeterminate`\n   */\n  const shouldAddStripe = !isIndeterminate && hasStripe\n\n  const shouldAnimateStripe = shouldAddStripe && isAnimated\n\n  /**\n   * Generate styles for stripe and stripe animation\n   */\n  const css: Interpolation<any> = {\n    ...(shouldAnimateStripe && stripAnimation),\n    ...(isIndeterminate && {\n      position: \"absolute\",\n      willChange: \"left\",\n      minWidth: \"50%\",\n      animation: `${progress} 1s ease infinite normal none running`,\n    }),\n  }\n\n  const trackStyles: SystemStyleObject = {\n    overflow: \"hidden\",\n    position: \"relative\",\n    ...styles.track,\n  }\n\n  return (\n    <chakra.div borderRadius={borderRadius} __css={trackStyles} {...rest}>\n      <StylesProvider value={styles}>\n        <ProgressFilledTrack\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n          min={min}\n          max={max}\n          value={value}\n          isIndeterminate={isIndeterminate}\n          css={css}\n          borderRadius={borderRadius}\n        />\n        {children}\n      </StylesProvider>\n    </chakra.div>\n  )\n}\n\nif (__DEV__) {\n  Progress.displayName = \"Progress\"\n}\n"],"file":"progress.js"}