{"ast":null,"code":"import { __read, __rest } from 'tslib';\nimport * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.js';\nimport { loadFeatures } from '../../motion/features/definitions.js';\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimations } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimations}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimations')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\n\nfunction LazyMotion(_a) {\n  var children = _a.children,\n      features = _a.features,\n      _b = _a.strict,\n      strict = _b === void 0 ? false : _b;\n\n  var _c = __read(useState(!isLazyBundle(features)), 2),\n      setIsLoaded = _c[1];\n\n  var loadedRenderer = useRef(undefined);\n  /**\n   * If this is a synchronous load, load features immediately\n   */\n\n  if (!isLazyBundle(features)) {\n    var renderer = features.renderer,\n        loadedFeatures = __rest(features, [\"renderer\"]);\n\n    loadedRenderer.current = renderer;\n    loadFeatures(loadedFeatures);\n  }\n\n  useEffect(function () {\n    if (isLazyBundle(features)) {\n      features().then(function (_a) {\n        var renderer = _a.renderer,\n            loadedFeatures = __rest(_a, [\"renderer\"]);\n\n        loadFeatures(loadedFeatures);\n        loadedRenderer.current = renderer;\n        setIsLoaded(true);\n      });\n    }\n  }, []);\n  return React.createElement(LazyContext.Provider, {\n    value: {\n      renderer: loadedRenderer.current,\n      strict: strict\n    }\n  }, children);\n}\n\nfunction isLazyBundle(features) {\n  return typeof features === \"function\";\n}\n\nexport { LazyMotion };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/framer-motion/dist/es/components/LazyMotion/index.js"],"names":["__read","__rest","React","useState","useRef","useEffect","LazyContext","loadFeatures","LazyMotion","_a","children","features","_b","strict","_c","isLazyBundle","setIsLoaded","loadedRenderer","undefined","renderer","loadedFeatures","current","then","createElement","Provider","value"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,OAA/B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,YAAT,QAA6B,sCAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBC,EAApB,EAAwB;AACpB,MAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAlB;AAAA,MAA4BC,QAAQ,GAAGF,EAAE,CAACE,QAA1C;AAAA,MAAoDC,EAAE,GAAGH,EAAE,CAACI,MAA5D;AAAA,MAAoEA,MAAM,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAArG;;AACA,MAAIE,EAAE,GAAGd,MAAM,CAACG,QAAQ,CAAC,CAACY,YAAY,CAACJ,QAAD,CAAd,CAAT,EAAoC,CAApC,CAAf;AAAA,MAAuDK,WAAW,GAAGF,EAAE,CAAC,CAAD,CAAvE;;AACA,MAAIG,cAAc,GAAGb,MAAM,CAACc,SAAD,CAA3B;AACA;AACJ;AACA;;AACI,MAAI,CAACH,YAAY,CAACJ,QAAD,CAAjB,EAA6B;AACzB,QAAIQ,QAAQ,GAAGR,QAAQ,CAACQ,QAAxB;AAAA,QAAkCC,cAAc,GAAGnB,MAAM,CAACU,QAAD,EAAW,CAAC,UAAD,CAAX,CAAzD;;AACAM,IAAAA,cAAc,CAACI,OAAf,GAAyBF,QAAzB;AACAZ,IAAAA,YAAY,CAACa,cAAD,CAAZ;AACH;;AACDf,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIU,YAAY,CAACJ,QAAD,CAAhB,EAA4B;AACxBA,MAAAA,QAAQ,GAAGW,IAAX,CAAgB,UAAUb,EAAV,EAAc;AAC1B,YAAIU,QAAQ,GAAGV,EAAE,CAACU,QAAlB;AAAA,YAA4BC,cAAc,GAAGnB,MAAM,CAACQ,EAAD,EAAK,CAAC,UAAD,CAAL,CAAnD;;AACAF,QAAAA,YAAY,CAACa,cAAD,CAAZ;AACAH,QAAAA,cAAc,CAACI,OAAf,GAAyBF,QAAzB;AACAH,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH,OALD;AAMH;AACJ,GATQ,EASN,EATM,CAAT;AAUA,SAAQd,KAAK,CAACqB,aAAN,CAAoBjB,WAAW,CAACkB,QAAhC,EAA0C;AAAEC,IAAAA,KAAK,EAAE;AAAEN,MAAAA,QAAQ,EAAEF,cAAc,CAACI,OAA3B;AAAoCR,MAAAA,MAAM,EAAEA;AAA5C;AAAT,GAA1C,EAA2GH,QAA3G,CAAR;AACH;;AACD,SAASK,YAAT,CAAsBJ,QAAtB,EAAgC;AAC5B,SAAO,OAAOA,QAAP,KAAoB,UAA3B;AACH;;AAED,SAASH,UAAT","sourcesContent":["import { __read, __rest } from 'tslib';\nimport * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.js';\nimport { loadFeatures } from '../../motion/features/definitions.js';\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimations } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimations}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimations')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion(_a) {\n    var children = _a.children, features = _a.features, _b = _a.strict, strict = _b === void 0 ? false : _b;\n    var _c = __read(useState(!isLazyBundle(features)), 2), setIsLoaded = _c[1];\n    var loadedRenderer = useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        var renderer = features.renderer, loadedFeatures = __rest(features, [\"renderer\"]);\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    useEffect(function () {\n        if (isLazyBundle(features)) {\n            features().then(function (_a) {\n                var renderer = _a.renderer, loadedFeatures = __rest(_a, [\"renderer\"]);\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (React.createElement(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict: strict } }, children));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nexport { LazyMotion };\n"]},"metadata":{},"sourceType":"module"}