{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { TransitionDefaults, withDelay } from \"./transition-utils\";\nvar variants = {\n  enter: function enter(_temp) {\n    var _transition$enter;\n\n    var _ref = _temp === void 0 ? {} : _temp,\n        transition = _ref.transition,\n        transitionEnd = _ref.transitionEnd,\n        delay = _ref.delay;\n\n    return {\n      opacity: 1,\n      transition: (_transition$enter = transition == null ? void 0 : transition.enter) != null ? _transition$enter : withDelay.enter(TransitionDefaults.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  },\n  exit: function exit(_temp2) {\n    var _transition$exit;\n\n    var _ref2 = _temp2 === void 0 ? {} : _temp2,\n        transition = _ref2.transition,\n        transitionEnd = _ref2.transitionEnd,\n        delay = _ref2.delay;\n\n    return {\n      opacity: 0,\n      transition: (_transition$exit = transition == null ? void 0 : transition.exit) != null ? _transition$exit : withDelay.exit(TransitionDefaults.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    };\n  }\n};\nexport var fadeConfig = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants\n};\nexport var Fade = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var unmountOnExit = props.unmountOnExit,\n      isOpen = props.in,\n      className = props.className,\n      transition = props.transition,\n      transitionEnd = props.transitionEnd,\n      delay = props.delay,\n      rest = _objectWithoutPropertiesLoose(props, [\"unmountOnExit\", \"in\", \"className\", \"transition\", \"transitionEnd\", \"delay\"]);\n\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var custom = {\n    transition: transition,\n    transitionEnd: transitionEnd,\n    delay: delay\n  };\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    custom: custom\n  }, show && /*#__PURE__*/React.createElement(motion.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-fade\", className),\n    custom: custom\n  }, fadeConfig, {\n    animate: animate\n  }, rest)));\n});\n\nif (__DEV__) {\n  Fade.displayName = \"Fade\";\n}","map":{"version":3,"sources":["../../src/fade.tsx"],"names":["variants","enter","delay","opacity","transition","withDelay","TransitionDefaults","transitionEnd","exit","fadeConfig","initial","animate","Fade","in","isOpen","show","unmountOnExit","custom","cx"],"mappings":"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","sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  TransitionDefaults,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\nexport interface FadeProps\n  extends WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nconst variants: Variants = {\n  enter: ({ transition, transitionEnd, delay } = {}) => ({\n    opacity: 1,\n    transition:\n      transition?.enter ?? withDelay.enter(TransitionDefaults.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n  exit: ({ transition, transitionEnd, delay } = {}) => ({\n    opacity: 0,\n    transition:\n      transition?.exit ?? withDelay.exit(TransitionDefaults.exit, delay),\n    transitionEnd: transitionEnd?.exit,\n  }),\n}\n\nexport const fadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport const Fade = React.forwardRef<HTMLDivElement, FadeProps>(\n  (props, ref) => {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n\n    const custom = { transition, transitionEnd, delay }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-fade\", className)}\n            custom={custom}\n            {...fadeConfig}\n            animate={animate}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  Fade.displayName = \"Fade\"\n}\n"]},"metadata":{},"sourceType":"module"}