{"version":3,"sources":["../../src/use-force-update.ts"],"names":["React","useUnmountEffect","useForceUpdate","unloadingRef","useRef","count","setCount","useState","current","useCallback"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC/B,MAAMC,YAAY,GAAGH,KAAK,CAACI,MAAN,CAAa,KAAb,CAArB;AACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACO,QAAN,CAAe,CAAf,CAA1B;AAEAN,EAAAA,gBAAgB,CAAC,MAAM;AACrBE,IAAAA,YAAY,CAACK,OAAb,GAAuB,IAAvB;AACD,GAFe,CAAhB;AAIA,SAAOR,KAAK,CAACS,WAAN,CAAkB,MAAM;AAC7B,QAAI,CAACN,YAAY,CAACK,OAAlB,EAA2B;AACzBF,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;AACF,GAJM,EAIJ,CAACA,KAAD,CAJI,CAAP;AAKD","sourcesContent":["import * as React from \"react\"\nimport { useUnmountEffect } from \"./use-unmount-effect\"\n\nexport function useForceUpdate() {\n  const unloadingRef = React.useRef(false)\n  const [count, setCount] = React.useState(0)\n\n  useUnmountEffect(() => {\n    unloadingRef.current = true\n  })\n\n  return React.useCallback(() => {\n    if (!unloadingRef.current) {\n      setCount(count + 1)\n    }\n  }, [count])\n}\n"],"file":"use-force-update.js"}