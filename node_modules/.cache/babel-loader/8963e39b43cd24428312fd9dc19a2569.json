{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { Icon } from \"./icon\";\nexport function createIcon(options) {\n  var _options$viewBox = options.viewBox,\n      viewBox = _options$viewBox === void 0 ? \"0 0 24 24\" : _options$viewBox,\n      pathDefinition = options.d,\n      path = options.path,\n      displayName = options.displayName,\n      _options$defaultProps = options.defaultProps,\n      defaultProps = _options$defaultProps === void 0 ? {} : _options$defaultProps;\n  var Comp = /*#__PURE__*/forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(Icon, _extends({\n      ref: ref,\n      viewBox: viewBox\n    }, defaultProps, props), path != null ? path : /*#__PURE__*/React.createElement(\"path\", {\n      fill: \"currentColor\",\n      d: pathDefinition\n    }));\n  });\n\n  if (__DEV__) {\n    Comp.displayName = displayName;\n  }\n\n  return Comp;\n}","map":{"version":3,"sources":["../../src/create-icon.tsx"],"names":["viewBox","d","defaultProps","Comp","forwardRef","path","pathDefinition"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAAA,UAAA,QAAA,mBAAA;AACA,SAAA,OAAA,QAAA,kBAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,IAAA,QAAA,QAAA;AA2BA,OAAO,SAAA,UAAA,CAAA,OAAA,EAAgD;AACrD,yBAAA,OAAA,CACEA,OADF;AAAA,MACEA,OADF,iCAAM,WAAN;AAAA,MAAM,cAAN,GAAA,OAAA,CAEEC,CAFF;AAAA,MAAM,IAAN,GAAA,OAAA,CAAM,IAAN;AAAA,MAAM,WAAN,GAAA,OAAA,CAAM,WAAN;AAAA,8BAAA,OAAA,CAKEC,YALF;AAAA,MAKEA,YALF,sCAKiB,EALjB;AAQA,MAAMC,IAAI,GAAA,aAAGC,UAAU,CAAmB,UAAA,KAAA,EAAA,GAAA;AAAA,WAAA,aACxC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AAAM,MAAA,GAAG,EAAT,GAAA;AAAgB,MAAA,OAAO,EAAEJ;AAAzB,KAAA,EAAA,YAAA,EAAA,KAAA,CAAA,EACGK,IADH,IAAA,IACGA,GADH,IACGA,GADH,aACW,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,IAAI,EAAV,cAAA;AAA0B,MAAA,CAAC,EAAEC;AAA7B,KAAA,CADX,CADwC;AAAA,GAAnB,CAAvB;;AAMA,MAAA,OAAA,EAAa;AACXH,IAAAA,IAAI,CAAJA,WAAAA,GAAAA,WAAAA;AACD;;AAED,SAAA,IAAA;AACD","sourcesContent":["import { forwardRef } from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { Icon, IconProps } from \"./icon\"\n\ninterface CreateIconOptions {\n  /**\n   * The icon `svg` viewBox\n   * @default \"0 0 24 24\"\n   */\n  viewBox?: string\n  /**\n   * The `svg` path or group element\n   * @type React.ReactElement | React.ReactElement[]\n   */\n  path?: React.ReactElement | React.ReactElement[]\n  /**\n   * If the has a single path, simply copy the path's `d` attribute\n   */\n  d?: string\n  /**\n   * The display name useful in the dev tools\n   */\n  displayName?: string\n  /**\n   * Default props automatically passed to the component; overwriteable\n   */\n  defaultProps?: IconProps\n}\n\nexport function createIcon(options: CreateIconOptions) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    path,\n    displayName,\n    defaultProps = {},\n  } = options\n\n  const Comp = forwardRef<IconProps, \"svg\">((props, ref) => (\n    <Icon ref={ref} viewBox={viewBox} {...defaultProps} {...props}>\n      {path ?? <path fill=\"currentColor\" d={pathDefinition} />}\n    </Icon>\n  ))\n\n  if (__DEV__) {\n    Comp.displayName = displayName\n  }\n\n  return Comp\n}\n"]},"metadata":{},"sourceType":"module"}