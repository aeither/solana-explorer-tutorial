{"version":3,"sources":["../../src/link-box.tsx"],"names":["chakra","forwardRef","cx","React","LinkOverlay","props","ref","isExternal","target","rel","className","rest","position","content","cursor","display","top","left","zIndex","width","height","LinkBox"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAoD,mBAApD;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AASA,OAAO,IAAMC,WAAW,gBAAGH,UAAU,CAAwB,CAACI,KAAD,EAAQC,GAAR,KAAgB;AAC3E,MAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,GAAtB;AAA2BC,IAAAA;AAA3B,MAAkDL,KAAxD;AAAA,MAA+CM,IAA/C,iCAAwDN,KAAxD;;AACA,sBACE,oBAAC,MAAD,CAAQ,CAAR,eACMM,IADN;AAEE,IAAA,GAAG,EAAEL,GAFP;AAGE,IAAA,SAAS,EAAEJ,EAAE,CAAC,yBAAD,EAA4BQ,SAA5B,CAHf;AAIE,IAAA,GAAG,EAAEH,UAAU,GAAG,qBAAH,GAA2BE,GAJ5C;AAKE,IAAA,MAAM,EAAEF,UAAU,GAAG,QAAH,GAAcC,MALlC;AAME,IAAA,KAAK,EAAE;AACLI,MAAAA,QAAQ,EAAE,QADL;AAEL,mBAAa;AACXC,QAAAA,OAAO,EAAE,IADE;AAEXC,QAAAA,MAAM,EAAE,SAFG;AAGXC,QAAAA,OAAO,EAAE,OAHE;AAIXH,QAAAA,QAAQ,EAAE,UAJC;AAKXI,QAAAA,GAAG,EAAE,CALM;AAMXC,QAAAA,IAAI,EAAE,CANK;AAOXC,QAAAA,MAAM,EAAE,CAPG;AAQXC,QAAAA,KAAK,EAAE,MARI;AASXC,QAAAA,MAAM,EAAE;AATG;AAFR;AANT,KADF;AAuBD,CAzBoC,CAA9B;;AA6BP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,OAAO,gBAAGpB,UAAU,CAAsB,CAACI,KAAD,EAAQC,GAAR,KAAgB;AACrE,MAAM;AAAEI,IAAAA;AAAF,MAAyBL,KAA/B;AAAA,MAAsBM,IAAtB,iCAA+BN,KAA/B;;AAEA,sBACE,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEC,GADP;AAEE,IAAA,QAAQ,EAAC;AAFX,KAGMK,IAHN;AAIE,IAAA,SAAS,EAAET,EAAE,CAAC,gBAAD,EAAmBQ,SAAnB,CAJf;AAKE,IAAA,KAAK,EAAE;AACL;AACA,4DAAsD;AACpDE,QAAAA,QAAQ,EAAE,UAD0C;AAEpDM,QAAAA,MAAM,EAAE;AAF4C;AAFjD;AALT,KADF;AAeD,CAlBgC,CAA1B","sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface LinkOverlayProps extends HTMLChakraProps<\"a\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   */\n  isExternal?: boolean\n}\n\nexport const LinkOverlay = forwardRef<LinkOverlayProps, \"a\">((props, ref) => {\n  const { isExternal, target, rel, className, ...rest } = props\n  return (\n    <chakra.a\n      {...rest}\n      ref={ref}\n      className={cx(\"chakra-linkbox__overlay\", className)}\n      rel={isExternal ? \"noopener noreferrer\" : rel}\n      target={isExternal ? \"_blank\" : target}\n      __css={{\n        position: \"static\",\n        \"&::before\": {\n          content: \"''\",\n          cursor: \"inherit\",\n          display: \"block\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          zIndex: 0,\n          width: \"100%\",\n          height: \"100%\",\n        },\n      }}\n    />\n  )\n})\n\nexport interface LinkBoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * `LinkBox` is used to wrap content areas within a link while ensuring semantic html\n *\n * @see Docs https://chakra-ui.com/docs/navigation/link-overlay\n * @see Resources https://www.sarasoueidan.com/blog/nested-links\n */\nexport const LinkBox = forwardRef<LinkBoxProps, \"div\">((props, ref) => {\n  const { className, ...rest } = props\n\n  return (\n    <chakra.div\n      ref={ref}\n      position=\"relative\"\n      {...rest}\n      className={cx(\"chakra-linkbox\", className)}\n      __css={{\n        /* Elevate the links and abbreviations up */\n        \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n          position: \"relative\",\n          zIndex: 1,\n        },\n      }}\n    />\n  )\n})\n"],"file":"link-box.js"}