{"ast":null,"code":"import { progress } from './progress.js';\nimport { mix } from './mix.js';\nimport { mixColor } from './mix-color.js';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.js';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.js';\nimport { pipe } from './pipe.js';\nimport { invariant } from 'hey-listen';\n\nvar mixNumber = function mixNumber(from, to) {\n  return function (p) {\n    return mix(from, to, p);\n  };\n};\n\nfunction detectMixerFactory(v) {\n  if (typeof v === 'number') {\n    return mixNumber;\n  } else if (typeof v === 'string') {\n    if (color.test(v)) {\n      return mixColor;\n    } else {\n      return mixComplex;\n    }\n  } else if (Array.isArray(v)) {\n    return mixArray;\n  } else if (typeof v === 'object') {\n    return mixObject;\n  }\n}\n\nfunction createMixers(output, ease, customMixer) {\n  var mixers = [];\n  var mixerFactory = customMixer || detectMixerFactory(output[0]);\n  var numMixers = output.length - 1;\n\n  for (var i = 0; i < numMixers; i++) {\n    var mixer = mixerFactory(output[i], output[i + 1]);\n\n    if (ease) {\n      var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n      mixer = pipe(easingFunction, mixer);\n    }\n\n    mixers.push(mixer);\n  }\n\n  return mixers;\n}\n\nfunction fastInterpolate(_a, _b) {\n  var from = _a[0],\n      to = _a[1];\n  var mixer = _b[0];\n  return function (v) {\n    return mixer(progress(from, to, v));\n  };\n}\n\nfunction slowInterpolate(input, mixers) {\n  var inputLength = input.length;\n  var lastInputIndex = inputLength - 1;\n  return function (v) {\n    var mixerIndex = 0;\n    var foundMixerIndex = false;\n\n    if (v <= input[0]) {\n      foundMixerIndex = true;\n    } else if (v >= input[lastInputIndex]) {\n      mixerIndex = lastInputIndex - 1;\n      foundMixerIndex = true;\n    }\n\n    if (!foundMixerIndex) {\n      var i = 1;\n\n      for (; i < inputLength; i++) {\n        if (input[i] > v || i === lastInputIndex) {\n          break;\n        }\n      }\n\n      mixerIndex = i - 1;\n    }\n\n    var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n    return mixers[mixerIndex](progressInRange);\n  };\n}\n\nfunction interpolate(input, output, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.clamp,\n      isClamp = _c === void 0 ? true : _c,\n      ease = _b.ease,\n      mixer = _b.mixer;\n\n  var inputLength = input.length;\n  invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n  invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n\n  if (input[0] > input[inputLength - 1]) {\n    input = [].concat(input);\n    output = [].concat(output);\n    input.reverse();\n    output.reverse();\n  }\n\n  var mixers = createMixers(output, ease, mixer);\n  var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n  return isClamp ? function (v) {\n    return interpolator(clamp(input[0], input[inputLength - 1], v));\n  } : interpolator;\n}\n\nexport { interpolate };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/popmotion/dist/es/utils/interpolate.js"],"names":["progress","mix","mixColor","mixComplex","mixArray","mixObject","color","clamp","pipe","invariant","mixNumber","from","to","p","detectMixerFactory","v","test","Array","isArray","createMixers","output","ease","customMixer","mixers","mixerFactory","numMixers","length","i","mixer","easingFunction","push","fastInterpolate","_a","_b","slowInterpolate","input","inputLength","lastInputIndex","mixerIndex","foundMixerIndex","progressInRange","interpolate","_c","isClamp","concat","reverse","interpolator"],"mappings":"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","sourcesContent":["import { progress } from './progress.js';\nimport { mix } from './mix.js';\nimport { mixColor } from './mix-color.js';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.js';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.js';\nimport { pipe } from './pipe.js';\nimport { invariant } from 'hey-listen';\n\nvar mixNumber = function (from, to) { return function (p) { return mix(from, to, p); }; };\nfunction detectMixerFactory(v) {\n    if (typeof v === 'number') {\n        return mixNumber;\n    }\n    else if (typeof v === 'string') {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === 'object') {\n        return mixObject;\n    }\n}\nfunction createMixers(output, ease, customMixer) {\n    var mixers = [];\n    var mixerFactory = customMixer || detectMixerFactory(output[0]);\n    var numMixers = output.length - 1;\n    for (var i = 0; i < numMixers; i++) {\n        var mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\nfunction fastInterpolate(_a, _b) {\n    var from = _a[0], to = _a[1];\n    var mixer = _b[0];\n    return function (v) { return mixer(progress(from, to, v)); };\n}\nfunction slowInterpolate(input, mixers) {\n    var inputLength = input.length;\n    var lastInputIndex = inputLength - 1;\n    return function (v) {\n        var mixerIndex = 0;\n        var foundMixerIndex = false;\n        if (v <= input[0]) {\n            foundMixerIndex = true;\n        }\n        else if (v >= input[lastInputIndex]) {\n            mixerIndex = lastInputIndex - 1;\n            foundMixerIndex = true;\n        }\n        if (!foundMixerIndex) {\n            var i = 1;\n            for (; i < inputLength; i++) {\n                if (input[i] > v || i === lastInputIndex) {\n                    break;\n                }\n            }\n            mixerIndex = i - 1;\n        }\n        var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n        return mixers[mixerIndex](progressInRange);\n    };\n}\nfunction interpolate(input, output, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.clamp, isClamp = _c === void 0 ? true : _c, ease = _b.ease, mixer = _b.mixer;\n    var inputLength = input.length;\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n        input = [].concat(input);\n        output = [].concat(output);\n        input.reverse();\n        output.reverse();\n    }\n    var mixers = createMixers(output, ease, mixer);\n    var interpolator = inputLength === 2\n        ? fastInterpolate(input, mixers)\n        : slowInterpolate(input, mixers);\n    return isClamp\n        ? function (v) { return interpolator(clamp(input[0], input[inputLength - 1], v)); }\n        : interpolator;\n}\n\nexport { interpolate };\n"]},"metadata":{},"sourceType":"module"}