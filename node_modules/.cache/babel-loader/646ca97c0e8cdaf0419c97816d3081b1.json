{"ast":null,"code":"import { getColor, mode, transparentize } from \"@chakra-ui/theme-tools\";\nvar baseStyle = {\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\"\n};\n\nvar variantSolid = function variantSolid(props) {\n  var c = props.colorScheme,\n      theme = props.theme;\n  var dark = transparentize(c + \".500\", 0.6)(theme);\n  return {\n    bg: mode(c + \".500\", dark)(props),\n    color: mode(\"white\", \"whiteAlpha.800\")(props)\n  };\n};\n\nvar variantSubtle = function variantSubtle(props) {\n  var c = props.colorScheme,\n      theme = props.theme;\n  var darkBg = transparentize(c + \".200\", 0.16)(theme);\n  return {\n    bg: mode(c + \".100\", darkBg)(props),\n    color: mode(c + \".800\", c + \".200\")(props)\n  };\n};\n\nvar variantOutline = function variantOutline(props) {\n  var c = props.colorScheme,\n      theme = props.theme;\n  var darkColor = transparentize(c + \".200\", 0.8)(theme);\n  var lightColor = getColor(theme, c + \".500\");\n  var color = mode(lightColor, darkColor)(props);\n  return {\n    color: color,\n    boxShadow: \"inset 0 0 0px 1px \" + color\n  };\n};\n\nvar variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline\n};\nvar defaultProps = {\n  variant: \"subtle\",\n  colorScheme: \"gray\"\n};\nexport default {\n  baseStyle: baseStyle,\n  variants: variants,\n  defaultProps: defaultProps\n};","map":{"version":3,"sources":["../../../src/components/badge.ts"],"names":["baseStyle","px","textTransform","fontSize","borderRadius","fontWeight","variantSolid","props","colorScheme","theme","dark","transparentize","c","bg","mode","color","variantSubtle","darkBg","variantOutline","darkColor","lightColor","getColor","boxShadow","variants","solid","subtle","outline","defaultProps","variant"],"mappings":"AAAA,SAAA,QAAA,EAAA,IAAA,EAAA,cAAA,QAAA,wBAAA;AAMA,IAAMA,SAA4B,GAAG;AACnCC,EAAAA,EAAE,EADiC,CAAA;AAEnCC,EAAAA,aAAa,EAFsB,WAAA;AAGnCC,EAAAA,QAAQ,EAH2B,IAAA;AAInCC,EAAAA,YAAY,EAJuB,IAAA;AAKnCC,EAAAA,UAAU,EAAE;AALuB,CAArC;;AAQA,IAAMC,YAAiC,GAAIC,SAArCD,YAAqCC,CAAAA,KAAD,EAAW;AACnD,MAAM,CAAN,GAAA,KAAA,CAAQC,WAAR;AAAA,MAAwBC,KAAxB,GAAA,KAAA,CAAwBA,KAAxB;AACA,MAAMC,IAAI,GAAGC,cAAc,CAAIC,CAAJ,GAAA,MAAA,EAAdD,GAAc,CAAdA,CAAb,KAAaA,CAAb;AACA,SAAO;AACLE,IAAAA,EAAE,EAAEC,IAAI,CAAIF,CAAJ,GAAA,MAAA,EAAJE,IAAI,CAAJA,CADC,KACDA,CADC;AAELC,IAAAA,KAAK,EAAED,IAAI,CAAA,OAAA,EAAJA,gBAAI,CAAJA,CAAAA,KAAAA;AAFF,GAAP;AAHF,CAAA;;AASA,IAAME,aAAkC,GAAIT,SAAtCS,aAAsCT,CAAAA,KAAD,EAAW;AACpD,MAAM,CAAN,GAAA,KAAA,CAAQC,WAAR;AAAA,MAAwBC,KAAxB,GAAA,KAAA,CAAwBA,KAAxB;AACA,MAAMQ,MAAM,GAAGN,cAAc,CAAIC,CAAJ,GAAA,MAAA,EAAdD,IAAc,CAAdA,CAAf,KAAeA,CAAf;AACA,SAAO;AACLE,IAAAA,EAAE,EAAEC,IAAI,CAAIF,CAAJ,GAAA,MAAA,EAAJE,MAAI,CAAJA,CADC,KACDA,CADC;AAELC,IAAAA,KAAK,EAAED,IAAI,CAAIF,CAAJ,GAAA,MAAA,EAAgBA,CAAhB,GAAJE,MAAI,CAAJA,CAAAA,KAAAA;AAFF,GAAP;AAHF,CAAA;;AASA,IAAMI,cAAmC,GAAIX,SAAvCW,cAAuCX,CAAAA,KAAD,EAAW;AACrD,MAAM,CAAN,GAAA,KAAA,CAAQC,WAAR;AAAA,MAAwBC,KAAxB,GAAA,KAAA,CAAwBA,KAAxB;AACA,MAAMU,SAAS,GAAGR,cAAc,CAAIC,CAAJ,GAAA,MAAA,EAAdD,GAAc,CAAdA,CAAlB,KAAkBA,CAAlB;AACA,MAAMS,UAAU,GAAGC,QAAQ,CAAA,KAAA,EAAWT,CAAX,GAA3B,MAA2B,CAA3B;AACA,MAAMG,KAAK,GAAGD,IAAI,CAAA,UAAA,EAAJA,SAAI,CAAJA,CAAd,KAAcA,CAAd;AAEA,SAAO;AACLC,IAAAA,KADK,EACLA,KADK;AAELO,IAAAA,SAAS,EAAA,uBAAuBP;AAF3B,GAAP;AANF,CAAA;;AAYA,IAAMQ,QAAQ,GAAG;AACfC,EAAAA,KAAK,EADU,YAAA;AAEfC,EAAAA,MAAM,EAFS,aAAA;AAGfC,EAAAA,OAAO,EAAER;AAHM,CAAjB;AAMA,IAAMS,YAAY,GAAG;AACnBC,EAAAA,OAAO,EADY,QAAA;AAEnBpB,EAAAA,WAAW,EAAE;AAFM,CAArB;AAKA,eAAe;AACbR,EAAAA,SADa,EACbA,SADa;AAEbuB,EAAAA,QAFa,EAEbA,QAFa;AAGbI,EAAAA,YAAAA,EAAAA;AAHa,CAAf","sourcesContent":["import { getColor, mode, transparentize } from \"@chakra-ui/theme-tools\"\nimport type {\n  SystemStyleFunction,\n  SystemStyleObject,\n} from \"@chakra-ui/theme-tools\"\n\nconst baseStyle: SystemStyleObject = {\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\",\n}\n\nconst variantSolid: SystemStyleFunction = (props) => {\n  const { colorScheme: c, theme } = props\n  const dark = transparentize(`${c}.500`, 0.6)(theme)\n  return {\n    bg: mode(`${c}.500`, dark)(props),\n    color: mode(`white`, `whiteAlpha.800`)(props),\n  }\n}\n\nconst variantSubtle: SystemStyleFunction = (props) => {\n  const { colorScheme: c, theme } = props\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme)\n  return {\n    bg: mode(`${c}.100`, darkBg)(props),\n    color: mode(`${c}.800`, `${c}.200`)(props),\n  }\n}\n\nconst variantOutline: SystemStyleFunction = (props) => {\n  const { colorScheme: c, theme } = props\n  const darkColor = transparentize(`${c}.200`, 0.8)(theme)\n  const lightColor = getColor(theme, `${c}.500`)\n  const color = mode(lightColor, darkColor)(props)\n\n  return {\n    color,\n    boxShadow: `inset 0 0 0px 1px ${color}`,\n  }\n}\n\nconst variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline,\n}\n\nconst defaultProps = {\n  variant: \"subtle\",\n  colorScheme: \"gray\",\n}\n\nexport default {\n  baseStyle,\n  variants,\n  defaultProps,\n}\n"]},"metadata":{},"sourceType":"module"}