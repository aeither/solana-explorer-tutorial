{"ast":null,"code":"import { isObject } from \"@chakra-ui/utils\";\nexport var requiredChakraThemeKeys = [\"borders\", \"breakpoints\", \"colors\", \"components\", \"config\", \"direction\", \"fonts\", \"fontSizes\", \"fontWeights\", \"letterSpacings\", \"lineHeights\", \"radii\", \"shadows\", \"sizes\", \"space\", \"styles\", \"transition\", \"zIndices\"];\nexport function isChakraTheme(unit) {\n  if (!isObject(unit)) {\n    return false;\n  }\n\n  return requiredChakraThemeKeys.every(function (propertyName) {\n    return Object.prototype.hasOwnProperty.call(unit, propertyName);\n  });\n}","map":{"version":3,"sources":["../../src/utils.ts"],"names":["requiredChakraThemeKeys","isObject","propertyName","Object"],"mappings":"AAAA,SAAA,QAAA,QAAA,kBAAA;AAGA,OAAO,IAAMA,uBAA8C,GAAG,CAAA,SAAA,EAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,WAAA,EAAA,OAAA,EAAA,WAAA,EAAA,aAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,OAAA,EAAA,SAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,YAAA,EAAvD,UAAuD,CAAvD;AAqBP,OAAO,SAAA,aAAA,CAAA,IAAA,EAA2D;AAChE,MAAI,CAACC,QAAQ,CAAb,IAAa,CAAb,EAAqB;AACnB,WAAA,KAAA;AACD;;AAED,SAAOD,uBAAuB,CAAvBA,KAAAA,CAA+BE,UAAAA,YAAD;AAAA,WACnCC,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EADF,YACEA,CADmC;AAAA,GAA9BH,CAAP;AAGD","sourcesContent":["import { isObject } from \"@chakra-ui/utils\"\nimport type { ChakraTheme } from \"./theme.types\"\n\nexport const requiredChakraThemeKeys: (keyof ChakraTheme)[] = [\n  \"borders\",\n  \"breakpoints\",\n  \"colors\",\n  \"components\",\n  \"config\",\n  \"direction\",\n  \"fonts\",\n  \"fontSizes\",\n  \"fontWeights\",\n  \"letterSpacings\",\n  \"lineHeights\",\n  \"radii\",\n  \"shadows\",\n  \"sizes\",\n  \"space\",\n  \"styles\",\n  \"transition\",\n  \"zIndices\",\n]\n\nexport function isChakraTheme(unit: unknown): unit is ChakraTheme {\n  if (!isObject(unit)) {\n    return false\n  }\n\n  return requiredChakraThemeKeys.every((propertyName) =>\n    Object.prototype.hasOwnProperty.call(unit, propertyName),\n  )\n}\n"]},"metadata":{},"sourceType":"module"}