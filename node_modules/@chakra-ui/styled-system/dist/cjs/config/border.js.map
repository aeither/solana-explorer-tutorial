{"version":3,"sources":["../../../src/config/border.ts"],"names":["border","t","borders","borderWidth","borderWidths","borderStyle","borderStyles","borderColor","colors","borderRadius","radii","borderTop","borderBlockStart","borderTopLeftRadius","borderStartStartRadius","logical","scale","property","ltr","rtl","borderEndStartRadius","borderTopRightRadius","borderStartEndRadius","borderEndEndRadius","borderRight","borderInlineEnd","borderBottom","borderBlockEnd","borderBottomLeftRadius","borderBottomRightRadius","borderLeft","borderInlineStart","borderInlineStartRadius","borderInlineEndRadius","borderX","borderInline","borderY","borderBlock","borderTopWidth","borderBlockStartWidth","borderTopColor","borderBlockStartColor","borderTopStyle","borderBlockStartStyle","borderBottomWidth","borderBlockEndWidth","borderBottomColor","borderBlockEndColor","borderBottomStyle","borderBlockEndStyle","borderLeftWidth","borderInlineStartWidth","borderLeftColor","borderInlineStartColor","borderLeftStyle","borderInlineStartStyle","borderRightWidth","borderInlineEndWidth","borderRightColor","borderInlineEndColor","borderRightStyle","borderInlineEndStyle","borderTopRadius","borderBottomRadius","borderLeftRadius","borderRightRadius","Object","assign","rounded","roundedTop","roundedTopLeft","roundedTopRight","roundedTopStart","roundedTopEnd","roundedBottom","roundedBottomLeft","roundedBottomRight","roundedBottomStart","roundedBottomEnd","roundedLeft","roundedRight","roundedStart","roundedEnd","borderStart","borderEnd","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","borderStartRadius","borderEndRadius","borderStartWidth","borderEndWidth","borderStartColor","borderEndColor","borderStartStyle","borderEndStyle"],"mappings":"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","sourcesContent":["import * as CSS from \"csstype\"\nimport { Config } from \"../utils/prop-config\"\nimport { t, Token } from \"../utils\"\n\nexport const border: Config = {\n  border: t.borders(\"border\"),\n  borderWidth: t.borderWidths(\"borderWidth\"),\n  borderStyle: t.borderStyles(\"borderStyle\"),\n  borderColor: t.colors(\"borderColor\"),\n  borderRadius: t.radii(\"borderRadius\"),\n  borderTop: t.borders(\"borderTop\"),\n  borderBlockStart: t.borders(\"borderBlockStart\"),\n  borderTopLeftRadius: t.radii(\"borderTopLeftRadius\"),\n  borderStartStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopLeftRadius\",\n      rtl: \"borderTopRightRadius\",\n    },\n  }),\n  borderEndStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomLeftRadius\",\n      rtl: \"borderBottomRightRadius\",\n    },\n  }),\n  borderTopRightRadius: t.radii(\"borderTopRightRadius\"),\n  borderStartEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopRightRadius\",\n      rtl: \"borderTopLeftRadius\",\n    },\n  }),\n  borderEndEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomRightRadius\",\n      rtl: \"borderBottomLeftRadius\",\n    },\n  }),\n  borderRight: t.borders(\"borderRight\"),\n  borderInlineEnd: t.borders(\"borderInlineEnd\"),\n  borderBottom: t.borders(\"borderBottom\"),\n  borderBlockEnd: t.borders(\"borderBlockEnd\"),\n  borderBottomLeftRadius: t.radii(\"borderBottomLeftRadius\"),\n  borderBottomRightRadius: t.radii(\"borderBottomRightRadius\"),\n  borderLeft: t.borders(\"borderLeft\"),\n  borderInlineStart: {\n    property: \"borderInlineStart\",\n    scale: \"borders\",\n  },\n  borderInlineStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n      rtl: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n    },\n  }),\n  borderInlineEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n      rtl: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n    },\n  }),\n  borderX: t.borders([\"borderLeft\", \"borderRight\"]),\n  borderInline: t.borders(\"borderInline\"),\n  borderY: t.borders([\"borderTop\", \"borderBottom\"]),\n  borderBlock: t.borders(\"borderBlock\"),\n  borderTopWidth: t.borderWidths(\"borderTopWidth\"),\n  borderBlockStartWidth: t.borderWidths(\"borderBlockStartWidth\"),\n  borderTopColor: t.colors(\"borderTopColor\"),\n  borderBlockStartColor: t.colors(\"borderBlockStartColor\"),\n  borderTopStyle: t.borderStyles(\"borderTopStyle\"),\n  borderBlockStartStyle: t.borderStyles(\"borderBlockStartStyle\"),\n  borderBottomWidth: t.borderWidths(\"borderBottomWidth\"),\n  borderBlockEndWidth: t.borderWidths(\"borderBlockEndWidth\"),\n  borderBottomColor: t.colors(\"borderBottomColor\"),\n  borderBlockEndColor: t.colors(\"borderBlockEndColor\"),\n  borderBottomStyle: t.borderStyles(\"borderBottomStyle\"),\n  borderBlockEndStyle: t.borderStyles(\"borderBlockEndStyle\"),\n  borderLeftWidth: t.borderWidths(\"borderLeftWidth\"),\n  borderInlineStartWidth: t.borderWidths(\"borderInlineStartWidth\"),\n  borderLeftColor: t.colors(\"borderLeftColor\"),\n  borderInlineStartColor: t.colors(\"borderInlineStartColor\"),\n  borderLeftStyle: t.borderStyles(\"borderLeftStyle\"),\n  borderInlineStartStyle: t.borderStyles(\"borderInlineStartStyle\"),\n  borderRightWidth: t.borderWidths(\"borderRightWidth\"),\n  borderInlineEndWidth: t.borderWidths(\"borderInlineEndWidth\"),\n  borderRightColor: t.colors(\"borderRightColor\"),\n  borderInlineEndColor: t.colors(\"borderInlineEndColor\"),\n  borderRightStyle: t.borderStyles(\"borderRightStyle\"),\n  borderInlineEndStyle: t.borderStyles(\"borderInlineEndStyle\"),\n  borderTopRadius: t.radii([\"borderTopLeftRadius\", \"borderTopRightRadius\"]),\n  borderBottomRadius: t.radii([\n    \"borderBottomLeftRadius\",\n    \"borderBottomRightRadius\",\n  ]),\n  borderLeftRadius: t.radii([\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]),\n  borderRightRadius: t.radii([\n    \"borderTopRightRadius\",\n    \"borderBottomRightRadius\",\n  ]),\n}\n\nObject.assign(border, {\n  rounded: border.borderRadius,\n  roundedTop: border.borderTopRadius,\n  roundedTopLeft: border.borderTopLeftRadius,\n  roundedTopRight: border.borderTopRightRadius,\n  roundedTopStart: border.borderStartStartRadius,\n  roundedTopEnd: border.borderStartEndRadius,\n  roundedBottom: border.borderBottomRadius,\n  roundedBottomLeft: border.borderBottomLeftRadius,\n  roundedBottomRight: border.borderBottomRightRadius,\n  roundedBottomStart: border.borderEndStartRadius,\n  roundedBottomEnd: border.borderEndEndRadius,\n  roundedLeft: border.borderLeftRadius,\n  roundedRight: border.borderRightRadius,\n  roundedStart: border.borderInlineStartRadius,\n  roundedEnd: border.borderInlineEndRadius,\n  borderStart: border.borderInlineStart,\n  borderEnd: border.borderInlineEnd,\n  borderTopStartRadius: border.borderStartStartRadius,\n  borderTopEndRadius: border.borderStartEndRadius,\n  borderBottomStartRadius: border.borderEndStartRadius,\n  borderBottomEndRadius: border.borderEndEndRadius,\n  borderStartRadius: border.borderInlineStartRadius,\n  borderEndRadius: border.borderInlineEndRadius,\n  borderStartWidth: border.borderInlineStartWidth,\n  borderEndWidth: border.borderInlineEndWidth,\n  borderStartColor: border.borderInlineStartColor,\n  borderEndColor: border.borderInlineEndColor,\n  borderStartStyle: border.borderInlineStartStyle,\n  borderEndStyle: border.borderInlineEndStyle,\n})\n\n/**\n * The prop types for border properties listed above\n */\nexport interface BorderProps {\n  /**\n   * The CSS `border` property\n   */\n  border?: Token<CSS.Property.Border | number, \"borders\">\n  /**\n   * The CSS `border-width` property\n   */\n  borderWidth?: Token<CSS.Property.BorderWidth | number>\n  /**\n   * The CSS `border-style` property\n   */\n  borderStyle?: Token<CSS.Property.BorderStyle>\n  /**\n   * The CSS `border-color` property\n   */\n  borderColor?: Token<CSS.Property.BorderTopColor, \"colors\">\n  /**\n   * The CSS `border-radius` property\n   */\n  borderRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-radius` property\n   */\n  rounded?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top` property\n   */\n  borderTop?: Token<CSS.Property.BorderTop | number, \"borders\">\n  borderBlockStart?: Token<CSS.Property.BorderBlockStart | number>\n  /**\n   * The CSS `border-top-width` property\n   */\n  borderTopWidth?: Token<CSS.Property.BorderWidth | number>\n  borderBlockStartWidth?: Token<CSS.Property.BorderBlockStartWidth | number>\n  /**\n   * The CSS `border-bottom-width` property\n   */\n  borderBottomWidth?: Token<CSS.Property.BorderWidth | number>\n  borderBlockEndWidth?: Token<CSS.Property.BorderBlockEndWidth | number>\n  /**\n   * The CSS `border-left-width` property\n   */\n  borderLeftWidth?: Token<CSS.Property.BorderWidth | number>\n  borderStartWidth?: Token<CSS.Property.BorderWidth | number>\n  borderInlineStartWidth?: Token<CSS.Property.BorderInlineStartWidth | number>\n  /**\n   * The CSS `border-right-width` property\n   */\n  borderRightWidth?: Token<CSS.Property.BorderWidth | number>\n  borderEndWidth?: Token<CSS.Property.BorderWidth | number>\n  borderInlineEndWidth?: Token<CSS.Property.BorderInlineEndWidth | number>\n  /**\n   * The CSS `border-top-style` property\n   */\n  borderTopStyle?: Token<CSS.Property.BorderTopStyle>\n  borderBlockStartStyle?: Token<CSS.Property.BorderBlockStartStyle>\n  /**\n   * The CSS `border-bottom-style` property\n   */\n  borderBottomStyle?: Token<CSS.Property.BorderBottomStyle>\n  borderBlockEndStyle?: Token<CSS.Property.BorderBlockEndStyle>\n  /**\n   * The CSS `border-left-style` property\n   */\n  borderLeftStyle?: Token<CSS.Property.BorderLeftStyle>\n  borderStartStyle?: Token<CSS.Property.BorderInlineStartStyle>\n  borderInlineStartStyle?: Token<CSS.Property.BorderInlineStartStyle>\n  /**\n   * The CSS `border-right-styles` property\n   */\n  borderRightStyle?: Token<CSS.Property.BorderRightStyle>\n  borderEndStyle?: Token<CSS.Property.BorderInlineEndStyle>\n  borderInlineEndStyle?: Token<CSS.Property.BorderInlineEndStyle>\n  /**\n   * The CSS `border-top-color` property\n   */\n  borderTopColor?: Token<CSS.Property.BorderTopColor, \"colors\">\n  borderBlockStartColor?: Token<CSS.Property.BorderBlockStartColor, \"colors\">\n  /**\n   * The CSS `border-bottom-color` property\n   */\n  borderBottomColor?: Token<CSS.Property.BorderBottomColor, \"colors\">\n  borderBlockEndColor?: Token<CSS.Property.BorderBlockEndColor, \"colors\">\n  /**\n   * The CSS `border-left-color` property\n   */\n  borderLeftColor?: Token<CSS.Property.BorderLeftColor, \"colors\">\n  borderStartColor?: Token<CSS.Property.BorderInlineStartColor>\n  borderInlineStartColor?: Token<CSS.Property.BorderInlineStartColor, \"colors\">\n  /**\n   * The CSS `border-right-color` property\n   */\n  borderRightColor?: Token<CSS.Property.BorderRightColor, \"colors\">\n  borderEndColor?: Token<CSS.Property.BorderInlineEndColor>\n  borderInlineEndColor?: Token<CSS.Property.BorderInlineEndColor, \"colors\">\n  /**\n   * The CSS `border-right` property\n   */\n  borderRight?: Token<CSS.Property.BorderRight | number, \"borders\">\n\n  borderEnd?: Token<CSS.Property.BorderInlineStart | number>\n  borderInlineEnd?: Token<CSS.Property.BorderInlineEnd | number>\n  /**\n   * The CSS `border-bottom` property\n   */\n  borderBottom?: Token<CSS.Property.BorderBottom | number, \"borders\">\n\n  borderBlockEnd?: Token<CSS.Property.BorderBlockEnd | number>\n  /**\n   * The CSS `border-left` property\n   */\n  borderLeft?: Token<CSS.Property.BorderLeft | number, \"borders\">\n  borderStart?: Token<CSS.Property.BorderInlineStart | number>\n  borderInlineStart?: Token<CSS.Property.BorderInlineStart | number>\n  /**\n   * The CSS `border-top-radius` property\n   */\n  borderTopRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top-radius` property\n   */\n  roundedTop?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-right-radius` property\n   */\n  borderRightRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-right-radius` property\n   */\n  roundedRight?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `roundedEnd` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `roundedEnd` is equivalent to `borderLeftRadius`.\n   */\n  roundedEnd?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderInlineEndRadius` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `borderInlineEndRadius` is equivalent to `borderLeftRadius`.\n   */\n  borderInlineEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderEndRadius` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `borderEndRadius` is equivalent to `borderLeftRadius`.\n   */\n  borderEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-radius` property\n   */\n  borderBottomRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-radius` property\n   */\n  roundedBottom?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-left-radius` property\n   */\n  borderLeftRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-left-radius` property\n   */\n  roundedLeft?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `roundedEnd` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `roundedEnd` is equivalent to `borderLeftRadius`.\n   */\n  roundedStart?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderInlineStartRadius` is equivalent to `borderLeftRadius`.\n   * When direction is `rtl`, `borderInlineStartRadius` is equivalent to `borderRightRadius`.\n   */\n  borderInlineStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderStartRadius` is equivalent to `borderLeftRadius`.\n   * When direction is `rtl`, `borderStartRadius` is equivalent to `borderRightRadius`.\n   */\n  borderStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top-left-radius` property\n   */\n  borderTopLeftRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderTopStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderStartStartRadius?: Token<\n    CSS.Property.BorderStartStartRadius | number,\n    \"radii\"\n  >\n  /**\n   * The CSS `border-top-left-radius` property\n   */\n  roundedTopLeft?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedTopStart?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top-right-radius` property\n   */\n  borderTopRightRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderTopEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderStartEndRadius?: Token<\n    CSS.Property.BorderStartEndRadius | number,\n    \"radii\"\n  >\n  /**\n   * The CSS `border-top-right-radius` property\n   */\n  roundedTopRight?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedTopEnd?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-left-radius` property\n   */\n  borderBottomLeftRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderBottomStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderEndStartRadius?: Token<\n    CSS.Property.BorderEndStartRadius | number,\n    \"radii\"\n  >\n  /**\n   * The CSS `border-bottom-left-radius` property\n   */\n  roundedBottomLeft?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedBottomStart?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-right-radius` property\n   */\n  borderBottomRightRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderBottomEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderEndEndRadius?: Token<CSS.Property.BorderEndEndRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-right-radius` property\n   */\n  roundedBottomRight?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedBottomEnd?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-right` and `border-left` property\n   */\n  borderX?: Token<CSS.Property.Border | number, \"borders\">\n  borderInline?: Token<CSS.Property.BorderInline | number>\n  /**\n   * The CSS `border-top` and `border-bottom` property\n   */\n  borderY?: Token<CSS.Property.Border | number, \"borders\">\n  borderBlock?: Token<CSS.Property.BorderBlock | number>\n}\n"],"file":"border.js"}