{"ast":null,"code":"function replaceWhiteSpace(value, replaceValue) {\n  if (replaceValue === void 0) {\n    replaceValue = \"-\";\n  }\n\n  return value.replace(/\\s+/g, replaceValue);\n}\n\nfunction escape(value) {\n  var valueStr = replaceWhiteSpace(value.toString());\n  if (valueStr.includes(\"\\\\.\")) return value;\n  var isDecimal = !Number.isInteger(parseFloat(value.toString()));\n  return isDecimal ? valueStr.replace(\".\", \"\\\\.\") : value;\n}\n\nexport function addPrefix(value, prefix) {\n  if (prefix === void 0) {\n    prefix = \"\";\n  }\n\n  return [prefix, escape(value)].filter(Boolean).join(\"-\");\n}\nexport function toVarReference(name, fallback) {\n  return \"var(\" + escape(name) + (fallback ? \", \" + fallback : \"\") + \")\";\n}\nexport function toVarDefinition(value, prefix) {\n  if (prefix === void 0) {\n    prefix = \"\";\n  }\n\n  return \"--\" + addPrefix(value, prefix);\n}\nexport function cssVar(name, fallback, cssVarPrefix) {\n  var cssVariable = toVarDefinition(name, cssVarPrefix);\n  return {\n    variable: cssVariable,\n    reference: toVarReference(cssVariable, fallback)\n  };\n}","map":{"version":3,"sources":["../../../src/create-theme-vars/css-var.ts"],"names":["replaceValue","value","valueStr","replaceWhiteSpace","isDecimal","Number","parseFloat","prefix","escape","fallback","addPrefix","cssVariable","toVarDefinition","variable","reference","toVarReference"],"mappings":"AAAA,SAAA,iBAAA,CAAA,KAAA,EAAA,YAAA,EAA8D;AAAA,MAApBA,YAAoB,KAAA,KAAA,CAAA,EAAA;AAApBA,IAAAA,YAAoB,GAAL,GAAfA;AAAoB;;AAC5D,SAAOC,KAAK,CAALA,OAAAA,CAAAA,MAAAA,EAAP,YAAOA,CAAP;AACD;;AAED,SAAA,MAAA,CAAA,KAAA,EAAwC;AACtC,MAAMC,QAAQ,GAAGC,iBAAiB,CAACF,KAAK,CAAxC,QAAmCA,EAAD,CAAlC;AACA,MAAIC,QAAQ,CAARA,QAAAA,CAAJ,KAAIA,CAAJ,EAA8B,OAAA,KAAA;AAC9B,MAAME,SAAS,GAAG,CAACC,MAAM,CAANA,SAAAA,CAAiBC,UAAU,CAACL,KAAK,CAApD,QAA+CA,EAAD,CAA3BI,CAAnB;AACA,SAAOD,SAAS,GAAGF,QAAQ,CAARA,OAAAA,CAAAA,GAAAA,EAAH,KAAGA,CAAH,GAAhB,KAAA;AACD;;AAED,OAAO,SAAA,SAAA,CAAA,KAAA,EAAA,MAAA,EAA+C;AAAA,MAAbK,MAAa,KAAA,KAAA,CAAA,EAAA;AAAbA,IAAAA,MAAa,GAAJ,EAATA;AAAa;;AACpD,SAAO,CAAA,MAAA,EAASC,MAAM,CAAf,KAAe,CAAf,EAAA,MAAA,CAAA,OAAA,EAAA,IAAA,CAAP,GAAO,CAAP;AACD;AAED,OAAO,SAAA,cAAA,CAAA,IAAA,EAAA,QAAA,EAAyD;AAC9D,SAAA,SAAcA,MAAM,CAApB,IAAoB,CAApB,IAA6BC,QAAQ,GAAA,OAAA,QAAA,GAArC,EAAA,IAAA,GAAA;AACD;AAED,OAAO,SAAA,eAAA,CAAA,KAAA,EAAA,MAAA,EAAqD;AAAA,MAAbF,MAAa,KAAA,KAAA,CAAA,EAAA;AAAbA,IAAAA,MAAa,GAAJ,EAATA;AAAa;;AAC1D,SAAA,OAAYG,SAAS,CAAA,KAAA,EAArB,MAAqB,CAArB;AACD;AAED,OAAO,SAAA,MAAA,CAAA,IAAA,EAAA,QAAA,EAAA,YAAA,EAAwE;AAC7E,MAAMC,WAAW,GAAGC,eAAe,CAAA,IAAA,EAAnC,YAAmC,CAAnC;AACA,SAAO;AACLC,IAAAA,QAAQ,EADH,WAAA;AAELC,IAAAA,SAAS,EAAEC,cAAc,CAAA,WAAA,EAAA,QAAA;AAFpB,GAAP;AAID","sourcesContent":["function replaceWhiteSpace(value: string, replaceValue = \"-\") {\n  return value.replace(/\\s+/g, replaceValue)\n}\n\nfunction escape(value: string | number) {\n  const valueStr = replaceWhiteSpace(value.toString())\n  if (valueStr.includes(\"\\\\.\")) return value\n  const isDecimal = !Number.isInteger(parseFloat(value.toString()))\n  return isDecimal ? valueStr.replace(\".\", `\\\\.`) : value\n}\n\nexport function addPrefix(value: string, prefix = \"\") {\n  return [prefix, escape(value)].filter(Boolean).join(\"-\")\n}\n\nexport function toVarReference(name: string, fallback?: string) {\n  return `var(${escape(name)}${fallback ? `, ${fallback}` : \"\"})`\n}\n\nexport function toVarDefinition(value: string, prefix = \"\") {\n  return `--${addPrefix(value, prefix)}`\n}\n\nexport function cssVar(name: string, fallback?: string, cssVarPrefix?: string) {\n  const cssVariable = toVarDefinition(name, cssVarPrefix)\n  return {\n    variable: cssVariable,\n    reference: toVarReference(cssVariable, fallback),\n  }\n}\n"]},"metadata":{},"sourceType":"module"}