{"version":3,"sources":["../../../src/config/layout.ts"],"names":["layout","width","t","sizesT","inlineSize","height","sizes","blockSize","boxSize","minWidth","minInlineSize","minHeight","minBlockSize","maxWidth","maxInlineSize","maxHeight","maxBlockSize","d","prop","overflow","overflowX","overflowY","overscrollBehavior","overscrollBehaviorX","overscrollBehaviorY","display","verticalAlign","boxSizing","boxDecorationBreak","propT","transforms","objectFit","objectPosition","visibility","isolation","Object","assign","w","h","minW","maxW","minH","maxH","overscroll","overscrollX","overscrollY"],"mappings":";;;;;AAEA;;AAEO,IAAMA,MAAc,GAAG;AAC5BC,EAAAA,KAAK,EAAEC,SAAEC,MAAF,CAAS,OAAT,CADqB;AAE5BC,EAAAA,UAAU,EAAEF,SAAEC,MAAF,CAAS,YAAT,CAFgB;AAG5BE,EAAAA,MAAM,EAAEH,SAAEI,KAAF,CAAQ,QAAR,CAHoB;AAI5BC,EAAAA,SAAS,EAAEL,SAAEI,KAAF,CAAQ,WAAR,CAJiB;AAK5BE,EAAAA,OAAO,EAAEN,SAAEI,KAAF,CAAQ,CAAC,OAAD,EAAU,QAAV,CAAR,CALmB;AAM5BG,EAAAA,QAAQ,EAAEP,SAAEI,KAAF,CAAQ,UAAR,CANkB;AAO5BI,EAAAA,aAAa,EAAER,SAAEI,KAAF,CAAQ,eAAR,CAPa;AAQ5BK,EAAAA,SAAS,EAAET,SAAEI,KAAF,CAAQ,WAAR,CARiB;AAS5BM,EAAAA,YAAY,EAAEV,SAAEI,KAAF,CAAQ,cAAR,CATc;AAU5BO,EAAAA,QAAQ,EAAEX,SAAEI,KAAF,CAAQ,UAAR,CAVkB;AAW5BQ,EAAAA,aAAa,EAAEZ,SAAEI,KAAF,CAAQ,eAAR,CAXa;AAY5BS,EAAAA,SAAS,EAAEb,SAAEI,KAAF,CAAQ,WAAR,CAZiB;AAa5BU,EAAAA,YAAY,EAAEd,SAAEI,KAAF,CAAQ,cAAR,CAbc;AAc5BW,EAAAA,CAAC,EAAEf,SAAEgB,IAAF,CAAO,SAAP,CAdyB;AAe5BC,EAAAA,QAAQ,EAAE,IAfkB;AAgB5BC,EAAAA,SAAS,EAAE,IAhBiB;AAiB5BC,EAAAA,SAAS,EAAE,IAjBiB;AAkB5BC,EAAAA,kBAAkB,EAAE,IAlBQ;AAmB5BC,EAAAA,mBAAmB,EAAE,IAnBO;AAoB5BC,EAAAA,mBAAmB,EAAE,IApBO;AAqB5BC,EAAAA,OAAO,EAAE,IArBmB;AAsB5BC,EAAAA,aAAa,EAAE,IAtBa;AAuB5BC,EAAAA,SAAS,EAAE,IAvBiB;AAwB5BC,EAAAA,kBAAkB,EAAE,IAxBQ;AAyB5B,WAAO1B,SAAE2B,KAAF,CAAQ,OAAR,EAAiBC,0BAAjB,CAzBqB;AA0B5BC,EAAAA,SAAS,EAAE,IA1BiB;AA2B5BC,EAAAA,cAAc,EAAE,IA3BY;AA4B5BC,EAAAA,UAAU,EAAE,IA5BgB;AA6B5BC,EAAAA,SAAS,EAAE;AA7BiB,CAAvB;;AAgCPC,MAAM,CAACC,MAAP,CAAcpC,MAAd,EAAsB;AACpBqC,EAAAA,CAAC,EAAErC,MAAM,CAACC,KADU;AAEpBqC,EAAAA,CAAC,EAAEtC,MAAM,CAACK,MAFU;AAGpBkC,EAAAA,IAAI,EAAEvC,MAAM,CAACS,QAHO;AAIpB+B,EAAAA,IAAI,EAAExC,MAAM,CAACa,QAJO;AAKpB4B,EAAAA,IAAI,EAAEzC,MAAM,CAACW,SALO;AAMpB+B,EAAAA,IAAI,EAAE1C,MAAM,CAACe,SANO;AAOpB4B,EAAAA,UAAU,EAAE3C,MAAM,CAACsB,kBAPC;AAQpBsB,EAAAA,WAAW,EAAE5C,MAAM,CAACuB,mBARA;AASpBsB,EAAAA,WAAW,EAAE7C,MAAM,CAACwB;AATA,CAAtB;AAYA;AACA;AACA","sourcesContent":["import * as CSS from \"csstype\"\nimport { Config } from \"../utils/prop-config\"\nimport { Length, t, Token, transforms } from \"../utils\"\n\nexport const layout: Config = {\n  width: t.sizesT(\"width\"),\n  inlineSize: t.sizesT(\"inlineSize\"),\n  height: t.sizes(\"height\"),\n  blockSize: t.sizes(\"blockSize\"),\n  boxSize: t.sizes([\"width\", \"height\"]),\n  minWidth: t.sizes(\"minWidth\"),\n  minInlineSize: t.sizes(\"minInlineSize\"),\n  minHeight: t.sizes(\"minHeight\"),\n  minBlockSize: t.sizes(\"minBlockSize\"),\n  maxWidth: t.sizes(\"maxWidth\"),\n  maxInlineSize: t.sizes(\"maxInlineSize\"),\n  maxHeight: t.sizes(\"maxHeight\"),\n  maxBlockSize: t.sizes(\"maxBlockSize\"),\n  d: t.prop(\"display\"),\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  overscrollBehavior: true,\n  overscrollBehaviorX: true,\n  overscrollBehaviorY: true,\n  display: true,\n  verticalAlign: true,\n  boxSizing: true,\n  boxDecorationBreak: true,\n  float: t.propT(\"float\", transforms.float),\n  objectFit: true,\n  objectPosition: true,\n  visibility: true,\n  isolation: true,\n}\n\nObject.assign(layout, {\n  w: layout.width,\n  h: layout.height,\n  minW: layout.minWidth,\n  maxW: layout.maxWidth,\n  minH: layout.minHeight,\n  maxH: layout.maxHeight,\n  overscroll: layout.overscrollBehavior,\n  overscrollX: layout.overscrollBehaviorX,\n  overscrollY: layout.overscrollBehaviorY,\n})\n\n/**\n * Types for layout related CSS properties\n */\nexport interface LayoutProps {\n  /**\n   * The CSS `display` property\n   */\n  display?: Token<CSS.Property.Display>\n  /**\n   * The CSS `display` property\n   * @deprecated - Please use `display` instead\n   */\n  d?: Token<CSS.Property.Display>\n  /**\n   * The CSS `width` property\n   */\n  width?: Token<CSS.Property.Width | number, \"sizes\">\n  /**\n   * The CSS `width` property\n   */\n  w?: Token<CSS.Property.Width | number, \"sizes\">\n  inlineSize?: Token<CSS.Property.InlineSize | number, \"sizes\">\n  /**\n   * The CSS `width` and `height` property\n   */\n  boxSize?: Token<CSS.Property.Width | number, \"sizes\">\n  /**\n   * The CSS `max-width` property\n   */\n  maxWidth?: Token<CSS.Property.MaxWidth | number, \"sizes\">\n  /**\n   * The CSS `max-width` property\n   */\n  maxW?: Token<CSS.Property.MaxWidth | number, \"sizes\">\n  maxInlineSize?: Token<CSS.Property.MaxInlineSize | number, \"sizes\">\n  /**\n   * The CSS `min-width` property\n   */\n  minWidth?: Token<CSS.Property.MinWidth | number, \"sizes\">\n  /**\n   * The CSS `min-width` property\n   */\n  minW?: Token<CSS.Property.MinWidth | number, \"sizes\">\n  minInlineSize?: Token<CSS.Property.MinInlineSize | number, \"sizes\">\n  /**\n   * The CSS `height` property\n   */\n  height?: Token<CSS.Property.Height | number, \"sizes\">\n  /**\n   * The CSS `height` property\n   */\n  h?: Token<CSS.Property.Height | number, \"sizes\">\n  blockSize?: Token<CSS.Property.BlockSize | number, \"sizes\">\n  /**\n   * The CSS `max-height` property\n   */\n  maxHeight?: Token<CSS.Property.MaxHeight | number, \"sizes\">\n  /**\n   * The CSS `max-height` property\n   */\n  maxH?: Token<CSS.Property.MaxHeight | number, \"sizes\">\n  maxBlockSize?: Token<CSS.Property.MaxBlockSize | number, \"sizes\">\n  /**\n   * The CSS `min-height` property\n   */\n  minHeight?: Token<CSS.Property.MinHeight | number, \"sizes\">\n  /**\n   * The CSS `min-height` property\n   */\n  minH?: Token<CSS.Property.MinHeight | number, \"sizes\">\n  minBlockSize?: Token<CSS.Property.MinBlockSize | number, \"sizes\">\n  /**\n   * The CSS `vertical-align` property\n   */\n  verticalAlign?: Token<CSS.Property.VerticalAlign<Length>>\n  /**\n   * The CSS `overflow` property\n   */\n  overflow?: Token<CSS.Property.Overflow>\n  /**\n   * The CSS `overflow-x` property\n   */\n  overflowX?: Token<CSS.Property.OverflowX>\n  /**\n   * The CSS `overflow-y` property\n   */\n  overflowY?: Token<CSS.Property.OverflowY>\n  /**\n   * The CSS `box-sizing` property\n   */\n  boxSizing?: CSS.Property.BoxSizing\n  /**\n   * The CSS `box-decoration` property\n   */\n  boxDecorationBreak?: Token<CSS.Property.BoxDecorationBreak>\n  /**\n   * The CSS `float` property\n   */\n  float?: Token<CSS.Property.Float>\n  /**\n   * The CSS `object-fit` property\n   */\n  objectFit?: Token<CSS.Property.ObjectFit>\n  /**\n   * The CSS `object-position` property\n   */\n  objectPosition?: Token<CSS.Property.ObjectPosition<Length>>\n  /**\n   * The CSS `overscroll-behavior` property\n   */\n  overscrollBehavior?: Token<CSS.Property.OverscrollBehavior>\n  /**\n   * The CSS `overscroll-behavior` property\n   */\n  overscroll?: Token<CSS.Property.OverscrollBehavior>\n  /**\n   * The CSS `overscroll-behavior-x` property\n   */\n  overscrollBehaviorX?: Token<CSS.Property.OverscrollBehaviorX>\n  /**\n   * The CSS `overscroll-behavior-x` property\n   */\n  overscrollX?: Token<CSS.Property.OverscrollBehaviorX>\n  /**\n   * The CSS `overscroll-behavior-y` property\n   */\n  overscrollBehaviorY?: Token<CSS.Property.OverscrollBehaviorY>\n  /**\n   * The CSS `overscroll-behavior-y` property\n   */\n  overscrollY?: Token<CSS.Property.OverscrollBehaviorY>\n  /**\n   * The CSS `visibility` property\n   */\n  visibility?: Token<CSS.Property.Visibility>\n  /**\n   * The CSS `isolation` property\n   */\n  isolation?: Token<CSS.Property.Isolation>\n}\n"],"file":"layout.js"}