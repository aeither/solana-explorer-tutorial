{"version":3,"sources":["../../../src/create-theme-vars/create-theme-vars.ts"],"names":["createThemeVars","target","options","context","cssMap","cssVars","value","path","firstKey","handler","tokenHandlerMap","defaultHandler","Object","assign","space","keys","properties","referenceKeys","negativeLookupKey","join","negativeVarKey","undefined","cssVarPrefix","variable","reference","negativeValue","calc","negate","varRef","lookupKey","varKey"],"mappings":";;;;;AAAA;;AAEA;;AACA;;;;AAWO,SAASA,eAAT,CAAyBC,MAAzB,EAAuCC,OAAvC,EAAwE;AAC7E,MAAMC,OAAkB,GAAG;AACzBC,IAAAA,MAAM,EAAE,EADiB;AAEzBC,IAAAA,OAAO,EAAE;AAFgB,GAA3B;AAKA,yBAAWJ,MAAX,EAAmB,UAACK,KAAD,EAAQC,IAAR,EAAiB;AAAA;;AAClC;AADkC,QAE3BC,QAF2B,GAEfD,IAFe;AAIlC,QAAME,OAAO,4BAAGC,eAAe,CAACF,QAAD,CAAlB,oCAAgCE,eAAe,CAACC,cAA7D;;AAJkC,mBAMNF,OAAO,CAACF,IAAD,EAAOD,KAAP,EAAcJ,OAAd,CAND;AAAA,QAM1BG,OAN0B,YAM1BA,OAN0B;AAAA,QAMjBD,MANiB,YAMjBA,MANiB;;AAOlCQ,IAAAA,MAAM,CAACC,MAAP,CAAcV,OAAO,CAACE,OAAtB,EAA+BA,OAA/B;AACAO,IAAAA,MAAM,CAACC,MAAP,CAAcV,OAAO,CAACC,MAAtB,EAA8BA,MAA9B;AACD,GATD;AAWA,SAAOD,OAAP;AACD;;AAQD;AACA;AACA;AACA,IAAMO,eAEL,GAAG;AACFI,EAAAA,KAAK,EAAE,eAACC,IAAD,EAAOT,KAAP,EAAcJ,OAAd,EAA0B;AAAA;;AAC/B,QAAMc,UAAU,GAAGN,eAAe,CAACC,cAAhB,CAA+BI,IAA/B,EAAqCT,KAArC,EAA4CJ,OAA5C,CAAnB;AAD+B,QAExBM,QAFwB,GAEMO,IAFN;AAAA,QAEXE,aAFW,GAEMF,IAFN;AAI/B,QAAMG,iBAAiB,GAAMV,QAAN,UAAmBS,aAAa,CAACE,IAAd,CAAmB,GAAnB,CAA1C;AACA,QAAMC,cAAc,GAAGL,IAAI,CAACI,IAAL,CAAU,GAAV,CAAvB;;AAL+B,kBAMC,qBAC9BC,cAD8B,EAE9BC,SAF8B,EAG9BnB,OAAO,CAACoB,YAHsB,CAND;AAAA,QAMvBC,QANuB,WAMvBA,QANuB;AAAA,QAMbC,SANa,WAMbA,SANa;;AAY/B,QAAMC,aAAa,GAAGC,WAAKC,MAAL,CAAYrB,KAAZ,CAAtB;;AACA,QAAMsB,MAAM,GAAGF,WAAKC,MAAL,CAAYH,SAAZ,CAAf;;AAEA,WAAO;AACLnB,MAAAA,OAAO,EAAEW,UAAU,CAACX,OADf;AAELD,MAAAA,MAAM,eACDY,UAAU,CAACZ,MADV,6BAEHc,iBAFG,IAEiB;AACnBZ,QAAAA,KAAK,OAAKmB,aADS;AAEnB,oBAAQF,QAFW;AAGnBK,QAAAA,MAAM,EAANA;AAHmB,OAFjB;AAFD,KAAP;AAWD,GA3BC;AA4BFjB,EAAAA,cAAc,EAAE,wBAACI,IAAD,EAAOT,KAAP,EAAcJ,OAAd,EAA0B;AAAA;;AACxC,QAAM2B,SAAS,GAAGd,IAAI,CAACI,IAAL,CAAU,GAAV,CAAlB;AACA,QAAMW,MAAM,GAAGf,IAAI,CAACI,IAAL,CAAU,GAAV,CAAf;;AAFwC,mBAIR,qBAC9BW,MAD8B,EAE9BT,SAF8B,EAG9BnB,OAAO,CAACoB,YAHsB,CAJQ;AAAA,QAIhCC,QAJgC,YAIhCA,QAJgC;AAAA,QAItBC,SAJsB,YAItBA,SAJsB;;AAUxC,WAAO;AACLnB,MAAAA,OAAO,2BACJkB,QADI,IACOjB,KADP,WADF;AAILF,MAAAA,MAAM,yBACHyB,SADG,IACS;AACXvB,QAAAA,KAAK,EAALA,KADW;AAEX,eAAKiB,QAFM;AAGXK,QAAAA,MAAM,EAAEJ;AAHG,OADT;AAJD,KAAP;AAYD;AAlDC,CAFJ","sourcesContent":["import { Dict, walkObject } from \"@chakra-ui/utils\"\nimport { ThemeScale } from \"./theme-tokens\"\nimport { calc, Operand } from \"./calc\"\nimport { cssVar } from \"./css-var\"\n\nexport interface CreateThemeVarsOptions {\n  cssVarPrefix?: string\n}\n\nexport interface ThemeVars {\n  cssVars: Dict\n  cssMap: Dict\n}\n\nexport function createThemeVars(target: Dict, options: CreateThemeVarsOptions) {\n  const context: ThemeVars = {\n    cssMap: {},\n    cssVars: {},\n  }\n\n  walkObject(target, (value, path) => {\n    // firstKey will be e.g. \"space\"\n    const [firstKey] = path\n\n    const handler = tokenHandlerMap[firstKey] ?? tokenHandlerMap.defaultHandler\n\n    const { cssVars, cssMap } = handler(path, value, options)\n    Object.assign(context.cssVars, cssVars)\n    Object.assign(context.cssMap, cssMap)\n  })\n\n  return context\n}\n\ntype TokenHandler = (\n  keys: string[],\n  value: unknown | { reference: string },\n  options: CreateThemeVarsOptions,\n) => ThemeVars\n\n/**\n * Define transformation handlers for ThemeScale\n */\nconst tokenHandlerMap: Partial<Record<ThemeScale, TokenHandler>> & {\n  defaultHandler: TokenHandler\n} = {\n  space: (keys, value, options) => {\n    const properties = tokenHandlerMap.defaultHandler(keys, value, options)\n    const [firstKey, ...referenceKeys] = keys\n\n    const negativeLookupKey = `${firstKey}.-${referenceKeys.join(\".\")}`\n    const negativeVarKey = keys.join(\"-\")\n    const { variable, reference } = cssVar(\n      negativeVarKey,\n      undefined,\n      options.cssVarPrefix,\n    )\n\n    const negativeValue = calc.negate(value as Operand)\n    const varRef = calc.negate(reference)\n\n    return {\n      cssVars: properties.cssVars,\n      cssMap: {\n        ...properties.cssMap,\n        [negativeLookupKey]: {\n          value: `${negativeValue}`,\n          var: `${variable}`,\n          varRef,\n        },\n      },\n    }\n  },\n  defaultHandler: (keys, value, options) => {\n    const lookupKey = keys.join(\".\")\n    const varKey = keys.join(\"-\")\n\n    const { variable, reference } = cssVar(\n      varKey,\n      undefined,\n      options.cssVarPrefix,\n    )\n\n    return {\n      cssVars: {\n        [variable]: value,\n      },\n      cssMap: {\n        [lookupKey]: {\n          value,\n          var: variable,\n          varRef: reference,\n        },\n      },\n    }\n  },\n}\n"],"file":"create-theme-vars.js"}