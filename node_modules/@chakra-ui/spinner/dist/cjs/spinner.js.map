{"version":3,"sources":["../../src/spinner.tsx"],"names":["spin","transform","Spinner","props","ref","styles","label","thickness","speed","emptyColor","className","rest","_className","spinnerStyles","display","borderColor","borderStyle","borderRadius","borderWidth","borderBottomColor","borderLeftColor","animation","__DEV__","displayName"],"mappings":";;;;;AAAA;;AASA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,uBAAU;AACrB,QAAM;AACJC,IAAAA,SAAS,EAAE;AADP,GADe;AAIrB,UAAQ;AACNA,IAAAA,SAAS,EAAE;AADL;AAJa,CAAV,CAAb;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,OAAO,gBAAG,wBAAgC,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACrE,MAAMC,MAAM,GAAG,4BAAe,SAAf,EAA0BF,KAA1B,CAAf;;AADqE,0BAUjE,8BAAiBA,KAAjB,CAViE;AAAA,gDAInEG,KAJmE;AAAA,MAInEA,KAJmE,sCAI3D,YAJ2D;AAAA,gDAKnEC,SALmE;AAAA,MAKnEA,SALmE,sCAKvD,KALuD;AAAA,gDAMnEC,KANmE;AAAA,MAMnEA,KANmE,sCAM3D,OAN2D;AAAA,gDAOnEC,UAPmE;AAAA,MAOnEA,UAPmE,sCAOtD,aAPsD;AAAA,MAQnEC,SARmE,qBAQnEA,SARmE;AAAA,MAShEC,IATgE;;AAYrE,MAAMC,UAAU,GAAG,eAAG,gBAAH,EAAqBF,SAArB,CAAnB;;AAEA,MAAMG,aAAa;AACjBC,IAAAA,OAAO,EAAE,cADQ;AAEjBC,IAAAA,WAAW,EAAE,cAFI;AAGjBC,IAAAA,WAAW,EAAE,OAHI;AAIjBC,IAAAA,YAAY,EAAE,SAJG;AAKjBC,IAAAA,WAAW,EAAEX,SALI;AAMjBY,IAAAA,iBAAiB,EAAEV,UANF;AAOjBW,IAAAA,eAAe,EAAEX,UAPA;AAQjBY,IAAAA,SAAS,EAAKrB,IAAL,SAAaQ,KAAb;AARQ,KASdH,MATc,CAAnB;;AAYA,sBACE,oBAAC,cAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAED,GADP;AAEE,IAAA,KAAK,EAAES,aAFT;AAGE,IAAA,SAAS,EAAED;AAHb,KAIMD,IAJN,GAMGL,KAAK,iBAAI,oBAAC,8BAAD,QAAiBA,KAAjB,CANZ,CADF;AAUD,CApCsB,CAAhB;;;AAsCP,IAAIgB,cAAJ,EAAa;AACXpB,EAAAA,OAAO,CAACqB,WAAR,GAAsB,SAAtB;AACD","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport { VisuallyHidden } from \"@chakra-ui/visually-hidden\"\nimport * as React from \"react\"\n\nconst spin = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\",\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\",\n  },\n})\n\ninterface SpinnerOptions {\n  /**\n   * The color of the empty area in the spinner\n   */\n  emptyColor?: string\n  /**\n   * The color of the spinner\n   */\n  color?: string\n  /**\n   * The thickness of the spinner\n   * @example\n   * ```jsx\n   * <Spinner thickness=\"4px\"/>\n   * ```\n   */\n  thickness?: string\n  /**\n   * The speed of the spinner.\n   * @example\n   * ```jsx\n   * <Spinner speed=\"0.2s\"/>\n   * ```\n   */\n  speed?: string\n  /**\n   * For accessibility, it is important to add a fallback loading text.\n   * This text will be visible to screen readers.\n   */\n  label?: string\n}\n\nexport interface SpinnerProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof SpinnerOptions>,\n    SpinnerOptions,\n    ThemingProps<\"Spinner\"> {}\n\n/**\n * Spinner is used to indicate the loading state of a page or a component,\n * It renders a `div` by default.\n *\n * @see Docs https://chakra-ui.com/spinner\n */\nexport const Spinner = forwardRef<SpinnerProps, \"div\">((props, ref) => {\n  const styles = useStyleConfig(\"Spinner\", props)\n\n  const {\n    label = \"Loading...\",\n    thickness = \"2px\",\n    speed = \"0.45s\",\n    emptyColor = \"transparent\",\n    className,\n    ...rest\n  } = omitThemingProps(props)\n\n  const _className = cx(\"chakra-spinner\", className)\n\n  const spinnerStyles = {\n    display: \"inline-block\",\n    borderColor: \"currentColor\",\n    borderStyle: \"solid\",\n    borderRadius: \"99999px\",\n    borderWidth: thickness,\n    borderBottomColor: emptyColor,\n    borderLeftColor: emptyColor,\n    animation: `${spin} ${speed} linear infinite`,\n    ...styles,\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      __css={spinnerStyles}\n      className={_className}\n      {...rest}\n    >\n      {label && <VisuallyHidden>{label}</VisuallyHidden>}\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  Spinner.displayName = \"Spinner\"\n}\n"],"file":"spinner.js"}