{"ast":null,"code":"import * as React from 'react';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport { styleSingleton } from 'react-style-singleton';\nimport { handleScroll, locationCouldBeScrolled } from './handleScroll';\nimport { nonPassive } from './aggresiveCapture';\nexport var getTouchXY = function getTouchXY(event) {\n  return 'changedTouches' in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];\n};\nexport var getDeltaXY = function getDeltaXY(event) {\n  return [event.deltaX, event.deltaY];\n};\n\nvar extractRef = function extractRef(ref) {\n  return ref && 'current' in ref ? ref.current : ref;\n};\n\nvar deltaCompare = function deltaCompare(x, y) {\n  return x[0] === y[0] && x[1] === y[1];\n};\n\nvar generateStyle = function generateStyle(id) {\n  return \"\\n  .block-interactivity-\" + id + \" {pointer-events: none;}\\n  .allow-interactivity-\" + id + \" {pointer-events: all;}\\n\";\n};\n\nvar idCounter = 0;\nvar lockStack = [];\nexport function RemoveScrollSideCar(props) {\n  var shouldPreventQueue = React.useRef([]);\n  var touchStartRef = React.useRef([0, 0]);\n  var activeAxis = React.useRef();\n  var id = React.useState(idCounter++)[0];\n  var Style = React.useState(function () {\n    return styleSingleton();\n  })[0];\n  var lastProps = React.useRef(props);\n  React.useEffect(function () {\n    lastProps.current = props;\n  }, [props]);\n  React.useEffect(function () {\n    if (props.inert) {\n      document.body.classList.add(\"block-interactivity-\" + id);\n      var allow_1 = [props.lockRef.current].concat((props.shards || []).map(extractRef)).filter(Boolean);\n      allow_1.forEach(function (el) {\n        return el.classList.add(\"allow-interactivity-\" + id);\n      });\n      return function () {\n        document.body.classList.remove(\"block-interactivity-\" + id);\n        allow_1.forEach(function (el) {\n          return el.classList.remove(\"allow-interactivity-\" + id);\n        });\n      };\n    }\n\n    return;\n  }, [props.inert, props.lockRef.current, props.shards]);\n  var shouldCancelEvent = React.useCallback(function (event, parent) {\n    if ('touches' in event && event.touches.length === 2) {\n      return !lastProps.current.allowPinchZoom;\n    }\n\n    var touch = getTouchXY(event);\n    var touchStart = touchStartRef.current;\n    var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];\n    var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];\n    var currentAxis;\n    var target = event.target;\n    var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';\n    var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n\n    if (!canBeScrolledInMainDirection) {\n      return true;\n    }\n\n    if (canBeScrolledInMainDirection) {\n      currentAxis = moveDirection;\n    } else {\n      currentAxis = moveDirection === 'v' ? 'h' : 'v';\n      canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target); // other axis might be not scrollable\n    }\n\n    if (!canBeScrolledInMainDirection) {\n      return false;\n    }\n\n    if (!activeAxis.current && 'changedTouches' in event && (deltaX || deltaY)) {\n      activeAxis.current = currentAxis;\n    }\n\n    if (!currentAxis) {\n      return true;\n    }\n\n    var cancelingAxis = activeAxis.current || currentAxis;\n    return handleScroll(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);\n  }, []);\n  var shouldPrevent = React.useCallback(function (_event) {\n    var event = _event;\n\n    if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {\n      // not the last active\n      return;\n    }\n\n    var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);\n    var sourceEvent = shouldPreventQueue.current.filter(function (e) {\n      return e.name === event.type && e.target === event.target && deltaCompare(e.delta, delta);\n    })[0]; // self event, and should be canceled\n\n    if (sourceEvent && sourceEvent.should) {\n      event.preventDefault();\n      return;\n    } // outside or shard event\n\n\n    if (!sourceEvent) {\n      var shardNodes = (lastProps.current.shards || []).map(extractRef).filter(Boolean).filter(function (node) {\n        return node.contains(event.target);\n      });\n      var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;\n\n      if (shouldStop) {\n        event.preventDefault();\n      }\n    }\n  }, []);\n  var shouldCancel = React.useCallback(function (name, delta, target, should) {\n    var event = {\n      name: name,\n      delta: delta,\n      target: target,\n      should: should\n    };\n    shouldPreventQueue.current.push(event);\n    setTimeout(function () {\n      shouldPreventQueue.current = shouldPreventQueue.current.filter(function (e) {\n        return e !== event;\n      });\n    }, 1);\n  }, []);\n  var scrollTouchStart = React.useCallback(function (event) {\n    touchStartRef.current = getTouchXY(event);\n    activeAxis.current = undefined;\n  }, []);\n  var scrollWheel = React.useCallback(function (event) {\n    shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n  }, []);\n  var scrollTouchMove = React.useCallback(function (event) {\n    shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n  }, []);\n  React.useEffect(function () {\n    lockStack.push(Style);\n    props.setCallbacks({\n      onScrollCapture: scrollWheel,\n      onWheelCapture: scrollWheel,\n      onTouchMoveCapture: scrollTouchMove\n    });\n    document.addEventListener('wheel', shouldPrevent, nonPassive);\n    document.addEventListener('touchmove', shouldPrevent, nonPassive);\n    document.addEventListener('touchstart', scrollTouchStart, nonPassive);\n    return function () {\n      lockStack = lockStack.filter(function (inst) {\n        return inst !== Style;\n      });\n      document.removeEventListener('wheel', shouldPrevent, nonPassive);\n      document.removeEventListener('touchmove', shouldPrevent, nonPassive);\n      document.removeEventListener('touchstart', scrollTouchStart, nonPassive);\n    };\n  }, []);\n  var removeScrollBar = props.removeScrollBar,\n      inert = props.inert;\n  return React.createElement(React.Fragment, null, inert ? React.createElement(Style, {\n    styles: generateStyle(id)\n  }) : null, removeScrollBar ? React.createElement(RemoveScrollBar, {\n    gapMode: \"margin\"\n  }) : null);\n}","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/react-remove-scroll/dist/es2015/SideEffect.js"],"names":["React","RemoveScrollBar","styleSingleton","handleScroll","locationCouldBeScrolled","nonPassive","getTouchXY","event","changedTouches","clientX","clientY","getDeltaXY","deltaX","deltaY","extractRef","ref","current","deltaCompare","x","y","generateStyle","id","idCounter","lockStack","RemoveScrollSideCar","props","shouldPreventQueue","useRef","touchStartRef","activeAxis","useState","Style","lastProps","useEffect","inert","document","body","classList","add","allow_1","lockRef","concat","shards","map","filter","Boolean","forEach","el","remove","shouldCancelEvent","useCallback","parent","touches","length","allowPinchZoom","touch","touchStart","currentAxis","target","moveDirection","Math","abs","canBeScrolledInMainDirection","cancelingAxis","shouldPrevent","_event","delta","sourceEvent","e","name","type","should","preventDefault","shardNodes","node","contains","shouldStop","noIsolation","shouldCancel","push","setTimeout","scrollTouchStart","undefined","scrollWheel","scrollTouchMove","setCallbacks","onScrollCapture","onWheelCapture","onTouchMoveCapture","addEventListener","inst","removeEventListener","removeScrollBar","createElement","Fragment","styles","gapMode"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport { styleSingleton } from 'react-style-singleton';\nimport { handleScroll, locationCouldBeScrolled } from './handleScroll';\nimport { nonPassive } from './aggresiveCapture';\nexport var getTouchXY = function (event) {\n    return 'changedTouches' in event\n        ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY]\n        : [0, 0];\n};\nexport var getDeltaXY = function (event) { return [event.deltaX, event.deltaY]; };\nvar extractRef = function (ref) {\n    return ref && 'current' in ref ? ref.current : ref;\n};\nvar deltaCompare = function (x, y) {\n    return x[0] === y[0] && x[1] === y[1];\n};\nvar generateStyle = function (id) { return \"\\n  .block-interactivity-\" + id + \" {pointer-events: none;}\\n  .allow-interactivity-\" + id + \" {pointer-events: all;}\\n\"; };\nvar idCounter = 0;\nvar lockStack = [];\nexport function RemoveScrollSideCar(props) {\n    var shouldPreventQueue = React.useRef([]);\n    var touchStartRef = React.useRef([0, 0]);\n    var activeAxis = React.useRef();\n    var id = React.useState(idCounter++)[0];\n    var Style = React.useState(function () { return styleSingleton(); })[0];\n    var lastProps = React.useRef(props);\n    React.useEffect(function () {\n        lastProps.current = props;\n    }, [props]);\n    React.useEffect(function () {\n        if (props.inert) {\n            document.body.classList.add(\"block-interactivity-\" + id);\n            var allow_1 = [\n                props.lockRef.current\n            ].concat((props.shards || []).map(extractRef)).filter(Boolean);\n            allow_1.forEach(function (el) { return el.classList.add(\"allow-interactivity-\" + id); });\n            return function () {\n                document.body.classList.remove(\"block-interactivity-\" + id);\n                allow_1.forEach(function (el) {\n                    return el.classList.remove(\"allow-interactivity-\" + id);\n                });\n            };\n        }\n        return;\n    }, [props.inert, props.lockRef.current, props.shards]);\n    var shouldCancelEvent = React.useCallback(function (event, parent) {\n        if ('touches' in event && event.touches.length === 2) {\n            return !lastProps.current.allowPinchZoom;\n        }\n        var touch = getTouchXY(event);\n        var touchStart = touchStartRef.current;\n        var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];\n        var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];\n        var currentAxis;\n        var target = event.target;\n        var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';\n        var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n        if (!canBeScrolledInMainDirection) {\n            return true;\n        }\n        if (canBeScrolledInMainDirection) {\n            currentAxis = moveDirection;\n        }\n        else {\n            currentAxis = moveDirection === 'v' ? 'h' : 'v';\n            canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n            // other axis might be not scrollable\n        }\n        if (!canBeScrolledInMainDirection) {\n            return false;\n        }\n        if (!activeAxis.current &&\n            'changedTouches' in event &&\n            (deltaX || deltaY)) {\n            activeAxis.current = currentAxis;\n        }\n        if (!currentAxis) {\n            return true;\n        }\n        var cancelingAxis = activeAxis.current || currentAxis;\n        return handleScroll(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);\n    }, []);\n    var shouldPrevent = React.useCallback(function (_event) {\n        var event = _event;\n        if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {\n            // not the last active\n            return;\n        }\n        var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);\n        var sourceEvent = shouldPreventQueue.current.filter(function (e) {\n            return e.name === event.type &&\n                e.target === event.target &&\n                deltaCompare(e.delta, delta);\n        })[0];\n        // self event, and should be canceled\n        if (sourceEvent && sourceEvent.should) {\n            event.preventDefault();\n            return;\n        }\n        // outside or shard event\n        if (!sourceEvent) {\n            var shardNodes = (lastProps.current.shards || [])\n                .map(extractRef)\n                .filter(Boolean)\n                .filter(function (node) { return node.contains(event.target); });\n            var shouldStop = shardNodes.length > 0\n                ? shouldCancelEvent(event, shardNodes[0])\n                : !lastProps.current.noIsolation;\n            if (shouldStop) {\n                event.preventDefault();\n            }\n        }\n    }, []);\n    var shouldCancel = React.useCallback(function (name, delta, target, should) {\n        var event = { name: name, delta: delta, target: target, should: should };\n        shouldPreventQueue.current.push(event);\n        setTimeout(function () {\n            shouldPreventQueue.current = shouldPreventQueue.current.filter(function (e) { return e !== event; });\n        }, 1);\n    }, []);\n    var scrollTouchStart = React.useCallback(function (event) {\n        touchStartRef.current = getTouchXY(event);\n        activeAxis.current = undefined;\n    }, []);\n    var scrollWheel = React.useCallback(function (event) {\n        shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    var scrollTouchMove = React.useCallback(function (event) {\n        shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    React.useEffect(function () {\n        lockStack.push(Style);\n        props.setCallbacks({\n            onScrollCapture: scrollWheel,\n            onWheelCapture: scrollWheel,\n            onTouchMoveCapture: scrollTouchMove\n        });\n        document.addEventListener('wheel', shouldPrevent, nonPassive);\n        document.addEventListener('touchmove', shouldPrevent, nonPassive);\n        document.addEventListener('touchstart', scrollTouchStart, nonPassive);\n        return function () {\n            lockStack = lockStack.filter(function (inst) { return inst !== Style; });\n            document.removeEventListener('wheel', shouldPrevent, nonPassive);\n            document.removeEventListener('touchmove', shouldPrevent, nonPassive);\n            document.removeEventListener('touchstart', scrollTouchStart, nonPassive);\n        };\n    }, []);\n    var removeScrollBar = props.removeScrollBar, inert = props.inert;\n    return (React.createElement(React.Fragment, null,\n        inert ? React.createElement(Style, { styles: generateStyle(id) }) : null,\n        removeScrollBar ? React.createElement(RemoveScrollBar, { gapMode: \"margin\" }) : null));\n}\n"]},"metadata":{},"sourceType":"module"}