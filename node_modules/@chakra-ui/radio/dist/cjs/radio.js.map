{"version":3,"sources":["../../src/radio.tsx"],"names":["Radio","props","ref","group","onChangeProp","onChange","valueProp","value","styles","ownProps","spacing","children","isFullWidth","isDisabled","isFocusable","rest","isChecked","name","getInputProps","getCheckboxProps","getLabelProps","htmlProps","layoutPropNames","layoutProps","otherProps","checkboxProps","inputProps","labelProps","rootStyles","width","undefined","display","alignItems","verticalAlign","container","checkboxStyles","justifyContent","flexShrink","control","labelStyles","userSelect","marginStart","label","__DEV__","displayName"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  layoutPropNames,\n  omitThemingProps,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { callAll, split, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { useRadioGroupContext } from \"./radio-group\"\nimport { useRadio, UseRadioProps } from \"./use-radio\"\n\ntype Omitted = \"onChange\" | \"defaultChecked\" | \"checked\"\ninterface BaseControlProps extends Omit<HTMLChakraProps<\"div\">, Omitted> {}\n\nexport interface RadioProps\n  extends UseRadioProps,\n    ThemingProps<\"Radio\">,\n    BaseControlProps {\n  /**\n   * The spacing between the checkbox and its label text\n   * @default 0.5rem\n   * @type SystemProps[\"marginLeft\"]\n   */\n  spacing?: SystemProps[\"marginLeft\"]\n  /**\n   * If `true`, the radio will occupy the full width of its parent container\n   *\n   * @deprecated\n   * This component defaults to 100% width,\n   * please use the props `maxWidth` or `width` to configure\n   */\n  isFullWidth?: boolean\n}\n\n/**\n * Radio component is used in forms when a user needs to select a single value from\n * several options.\n *\n * @see Docs https://chakra-ui.com/radio\n */\nexport const Radio = forwardRef<RadioProps, \"input\">((props, ref) => {\n  const group = useRadioGroupContext()\n  const { onChange: onChangeProp, value: valueProp } = props\n\n  const styles = useMultiStyleConfig(\"Radio\", { ...group, ...props })\n\n  const ownProps = omitThemingProps(props)\n\n  const {\n    spacing = \"0.5rem\",\n    children,\n    isFullWidth,\n    isDisabled = group?.isDisabled,\n    isFocusable = group?.isFocusable,\n    ...rest\n  } = ownProps\n\n  let isChecked = props.isChecked\n  if (group?.value != null && valueProp != null) {\n    isChecked = group.value === valueProp\n  }\n\n  let onChange = onChangeProp\n  if (group?.onChange && valueProp != null) {\n    onChange = callAll(group.onChange, onChangeProp)\n  }\n\n  const name = props?.name ?? group?.name\n\n  const {\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    htmlProps,\n  } = useRadio({\n    ...rest,\n    isChecked,\n    isFocusable,\n    isDisabled,\n    onChange,\n    name,\n  })\n\n  const [layoutProps, otherProps] = split(htmlProps, layoutPropNames as any)\n\n  const checkboxProps = getCheckboxProps(otherProps)\n  const inputProps = getInputProps({}, ref)\n  const labelProps = getLabelProps()\n\n  const rootStyles = {\n    width: isFullWidth ? \"full\" : undefined,\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    ...styles.container,\n  }\n\n  const checkboxStyles = {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexShrink: 0,\n    ...styles.control,\n  }\n\n  const labelStyles: SystemStyleObject = {\n    userSelect: \"none\",\n    marginStart: spacing,\n    ...styles.label,\n  }\n\n  return (\n    <chakra.label className=\"chakra-radio\" {...layoutProps} __css={rootStyles}>\n      <input className=\"chakra-radio__input\" {...inputProps} />\n      <chakra.span\n        className=\"chakra-radio__control\"\n        {...checkboxProps}\n        __css={checkboxStyles}\n      />\n      {children && (\n        <chakra.span\n          className=\"chakra-radio__label\"\n          {...labelProps}\n          __css={labelStyles}\n        >\n          {children}\n        </chakra.span>\n      )}\n    </chakra.label>\n  )\n})\n\nif (__DEV__) {\n  Radio.displayName = \"Radio\"\n}\n"],"file":"radio.js"}