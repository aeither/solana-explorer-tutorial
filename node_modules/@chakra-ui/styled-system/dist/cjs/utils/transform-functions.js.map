{"version":3,"sources":["../../../src/utils/transform-functions.ts"],"names":["analyzeCSSValue","value","num","parseFloat","toString","unit","replace","String","unitless","wrap","str","transformFunctions","filter","filterTemplate","backdropFilter","backdropFilterTemplate","ring","px","bgClip","color","backgroundClip","transform","fraction","theme","map","left","right","direction","degree","endsWith","gradient","gradientTransform","blur","opacity","brightness","contrast","dropShadow","grayscale","hueRotate","invert","saturate","sepia","bgImage","prevent","globalSet","has","outline","isNoneOrZero","outlineOffset","flexDirection","flexDirectionTemplate","space","divide","result"],"mappings":"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","sourcesContent":["import { Dict, isCssVar, isNumber, isString } from \"@chakra-ui/utils\"\nimport {\n  backdropFilterTemplate,\n  filterTemplate,\n  getRingTemplate,\n  getTransformGpuTemplate,\n  getTransformTemplate,\n  flexDirectionTemplate,\n} from \"./templates\"\nimport { gradientTransform, globalSet, isCSSFunction } from \"./parse-gradient\"\n\nconst analyzeCSSValue = (value: number | string) => {\n  const num = parseFloat(value.toString())\n  const unit = value.toString().replace(String(num), \"\")\n  return { unitless: !unit, value: num, unit }\n}\n\nconst wrap = (str: string) => (value: any) => `${str}(${value})`\n\nexport const transformFunctions = {\n  filter(value: any) {\n    return value !== \"auto\" ? value : filterTemplate\n  },\n  backdropFilter(value: any) {\n    return value !== \"auto\" ? value : backdropFilterTemplate\n  },\n  ring(value: string) {\n    return getRingTemplate(transformFunctions.px(value))\n  },\n  bgClip(value: string) {\n    return value === \"text\"\n      ? { color: \"transparent\", backgroundClip: \"text\" }\n      : { backgroundClip: value }\n  },\n  transform(value: any) {\n    if (value === \"auto\") return getTransformTemplate()\n    if (value === \"auto-gpu\") return getTransformGpuTemplate()\n    return value\n  },\n  px(value: number | string) {\n    if (value == null) return value\n    const { unitless } = analyzeCSSValue(value)\n    return unitless || isNumber(value) ? `${value}px` : value\n  },\n  fraction(value: any) {\n    return !isNumber(value) || value > 1 ? value : `${value * 100}%`\n  },\n  float(value: any, theme: Dict) {\n    const map = { left: \"right\", right: \"left\" }\n    return theme.direction === \"rtl\" ? map[value] : value\n  },\n  degree(value: any) {\n    if (isCssVar(value) || value == null) return value\n    const unitless = isString(value) && !value.endsWith(\"deg\")\n    return isNumber(value) || unitless ? `${value}deg` : value\n  },\n  gradient: gradientTransform,\n  blur: wrap(\"blur\"),\n  opacity: wrap(\"opacity\"),\n  brightness: wrap(\"brightness\"),\n  contrast: wrap(\"contrast\"),\n  dropShadow: wrap(\"drop-shadow\"),\n  grayscale: wrap(\"grayscale\"),\n  hueRotate: wrap(\"hue-rotate\"),\n  invert: wrap(\"invert\"),\n  saturate: wrap(\"saturate\"),\n  sepia: wrap(\"sepia\"),\n  bgImage(value: any) {\n    if (value == null) return value\n    const prevent = isCSSFunction(value) || globalSet.has(value)\n    return !prevent ? `url(${value})` : value\n  },\n  outline(value: any) {\n    const isNoneOrZero = String(value) === \"0\" || String(value) === \"none\"\n    return value !== null && isNoneOrZero\n      ? { outline: \"2px solid transparent\", outlineOffset: \"2px\" }\n      : { outline: value }\n  },\n  flexDirection(value: any) {\n    const { space, divide } = flexDirectionTemplate[value] ?? {}\n    const result = { flexDirection: value }\n    if (space) result[space] = 1\n    if (divide) result[divide] = 1\n    return result\n  },\n}\n"],"file":"transform-functions.js"}