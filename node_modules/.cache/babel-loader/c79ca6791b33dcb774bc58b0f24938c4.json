{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/lin/Documents/Projects/solana-explorer-tutorial/src/SupplyCard.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { Connection, clusterApiUrl } from \"@solana/web3.js\";\nimport { useEffect, useState } from \"react\";\nimport { abbreviatedNumber, lamportsToSol } from \"./utils/index\";\nimport React from \"react\";\nimport { Heading, VStack, Text, HStack } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction displayLamports(value) {\n  return abbreviatedNumber(lamportsToSol(value));\n}\n\nexport default function SupplyCard() {\n  _s();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      supply = _useState2[0],\n      setSupply = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      voteAccounts = _useState4[0],\n      setVoteAccounts = _useState4[1];\n\n  useEffect(function () {\n    getSupply();\n  });\n\n  function getSupply() {\n    return _getSupply.apply(this, arguments);\n  }\n\n  function _getSupply() {\n    _getSupply = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, connection, supply, voteAccounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = clusterApiUrl(\"devnet\").replace(\"api\", \"explorer-api\");\n              connection = new Connection(url, \"finalized\");\n              _context.next = 4;\n              return connection.getSupply();\n\n            case 4:\n              supply = _context.sent.value;\n              _context.next = 7;\n              return connection.getVoteAccounts();\n\n            case 7:\n              voteAccounts = _context.sent;\n              setVoteAccounts(voteAccounts);\n              setSupply(supply);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getSupply.apply(this, arguments);\n  }\n\n  var delinquentStake = React.useMemo(function () {\n    if (voteAccounts) {\n      return voteAccounts.delinquent.reduce(function (prev, current) {\n        return prev + current.activatedStake;\n      }, 0);\n    }\n  }, [voteAccounts]);\n  var activeStake = React.useMemo(function () {\n    if (voteAccounts && delinquentStake) {\n      return voteAccounts.current.reduce(function (prev, current) {\n        return prev + current.activatedStake;\n      }, 0) + delinquentStake;\n    }\n  }, [voteAccounts, delinquentStake]);\n  var delinquentStakePercentage;\n\n  if (delinquentStake && activeStake) {\n    delinquentStakePercentage = (delinquentStake / activeStake * 100).toFixed(1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(HStack, {\n    w: \"100%\",\n    spacing: \"2\",\n    children: [/*#__PURE__*/_jsxDEV(VStack, {\n      w: \"100%\",\n      align: \"start\",\n      background: \"white\",\n      rounded: \"lg\",\n      p: \"4\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: \"Active Stake \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), activeStake && supply && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          fontWeight: \"bold\",\n          children: [/*#__PURE__*/_jsxDEV(\"em\", {\n            children: displayLamports(activeStake)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), \" /\", \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: displayLamports(supply.total)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), delinquentStakePercentage && /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"24h Vol: Delinquent stake: \", /*#__PURE__*/_jsxDEV(\"em\", {\n            children: [delinquentStakePercentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      w: \"100%\",\n      align: \"start\",\n      background: \"white\",\n      rounded: \"lg\",\n      p: \"4\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: \"Circulating Supply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), activeStake && supply && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          fontWeight: \"bold\",\n          children: [/*#__PURE__*/_jsxDEV(\"em\", {\n            children: displayLamports(supply.circulating)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), \" /\", \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: displayLamports(supply.total)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Non circulating \", /*#__PURE__*/_jsxDEV(\"em\", {\n            children: displayLamports(supply.nonCirculating)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SupplyCard, \"4OFhqsFs4L26E54zDvfRu2TcA9E=\");\n\n_c = SupplyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SupplyCard\");","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/src/SupplyCard.tsx"],"names":["Connection","clusterApiUrl","useEffect","useState","abbreviatedNumber","lamportsToSol","React","Heading","VStack","Text","HStack","displayLamports","value","SupplyCard","supply","setSupply","voteAccounts","setVoteAccounts","getSupply","url","replace","connection","getVoteAccounts","delinquentStake","useMemo","delinquent","reduce","prev","current","activatedStake","activeStake","delinquentStakePercentage","toFixed","total","circulating","nonCirculating"],"mappings":"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","sourcesContent":["import \"./styles.css\";\nimport {\n  Supply,\n  Connection,\n  clusterApiUrl,\n  VoteAccountStatus,\n} from \"@solana/web3.js\";\nimport { useEffect, useState } from \"react\";\nimport {\n  abbreviatedNumber,\n  lamportsToSol,\n  lamportsToSolString,\n} from \"./utils/index\";\nimport React from \"react\";\nimport { Heading, VStack, Text, Box, HStack } from \"@chakra-ui/react\";\n\nfunction displayLamports(value: number) {\n  return abbreviatedNumber(lamportsToSol(value));\n}\n\nexport default function SupplyCard() {\n  const [supply, setSupply] = useState<Supply>();\n  const [voteAccounts, setVoteAccounts] = useState<VoteAccountStatus>();\n  useEffect(() => {\n    getSupply();\n  });\n  async function getSupply() {\n    const url = clusterApiUrl(\"devnet\").replace(\"api\", \"explorer-api\");\n    const connection = new Connection(url, \"finalized\");\n    const supply: Supply = (await connection.getSupply()).value;\n    const voteAccounts = await connection.getVoteAccounts();\n    setVoteAccounts(voteAccounts);\n    setSupply(supply);\n  }\n\n  const delinquentStake = React.useMemo(() => {\n    if (voteAccounts) {\n      return voteAccounts.delinquent.reduce(\n        (prev, current) => prev + current.activatedStake,\n        0\n      );\n    }\n  }, [voteAccounts]);\n\n  const activeStake = React.useMemo(() => {\n    if (voteAccounts && delinquentStake) {\n      return (\n        voteAccounts.current.reduce(\n          (prev, current) => prev + current.activatedStake,\n          0\n        ) + delinquentStake\n      );\n    }\n  }, [voteAccounts, delinquentStake]);\n\n  let delinquentStakePercentage;\n  if (delinquentStake && activeStake) {\n    delinquentStakePercentage = ((delinquentStake / activeStake) * 100).toFixed(\n      1\n    );\n  }\n\n  return (\n    <HStack w=\"100%\" spacing=\"2\">\n      <VStack w=\"100%\" align=\"start\" background=\"white\" rounded=\"lg\" p=\"4\">\n        <Heading size=\"md\">Active Stake </Heading>\n        {activeStake && supply && (\n          <>\n            <Text fontSize=\"lg\" fontWeight=\"bold\">\n              <em>{displayLamports(activeStake)}</em> /{\" \"}\n              <small>{displayLamports(supply.total)}</small>\n            </Text>\n            {delinquentStakePercentage && (\n              <Text>\n                24h Vol: Delinquent stake: <em>{delinquentStakePercentage}%</em>\n              </Text>\n            )}\n          </>\n        )}\n      </VStack>\n      <VStack w=\"100%\" align=\"start\" background=\"white\" rounded=\"lg\" p=\"4\">\n        <Heading size=\"md\">Circulating Supply</Heading>\n        {activeStake && supply && (\n          <>\n            <Text fontSize=\"lg\" fontWeight=\"bold\">\n              <em>{displayLamports(supply.circulating)}</em> /{\" \"}\n              <small>{displayLamports(supply.total)}</small>\n            </Text>\n            <Text>\n              Non circulating <em>{displayLamports(supply.nonCirculating)}</em>\n            </Text>\n          </>\n        )}\n      </VStack>\n      {/* <h1>Supply </h1>\n      <button onClick={() => Hello()}>Supply</button>\n      {supply ? (\n        <>\n          <p>Total Supply: {lamportsToSolString(supply.total)}</p>\n          <p>Circulating Supply: {lamportsToSolString(supply.circulating)}</p>\n          <p>\n            Non Circulating Supply: {lamportsToSolString(supply.nonCirculating)}\n          </p>\n          <div className=\"card-body\">\n            <h4>Active Stake</h4>\n            {activeStake && (\n              <h1>\n                <em>{displayLamports(activeStake)}</em> /{\" \"}\n                <small>{displayLamports(supply.total)}</small>\n              </h1>\n            )}\n            {delinquentStakePercentage && (\n              <h5>\n                Delinquent stake: <em>{delinquentStakePercentage}%</em>\n              </h5>\n            )}\n          </div>\n        </>\n      ) : (\n        <p>No Data</p>\n      )} */}\n    </HStack>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}