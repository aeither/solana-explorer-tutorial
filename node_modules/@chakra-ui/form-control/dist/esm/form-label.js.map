{"version":3,"sources":["../../src/form-label.tsx"],"names":["chakra","forwardRef","omitThemingProps","useStyleConfig","useStyles","cx","__DEV__","React","useFormControlContext","FormLabel","passedProps","ref","styles","props","children","requiredIndicator","rest","field","ownProps","getLabelProps","className","display","textAlign","isRequired","displayName","RequiredIndicator","getRequiredIndicatorProps"],"mappings":";;;;AAAA,SACEA,MADF,EAEEC,UAFF,EAIEC,gBAJF,EAMEC,cANF,EAOEC,SAPF,QAQO,mBARP;AASA,SAASC,EAAT,EAAaC,OAAb,QAA4B,kBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,qBAAT,QAAsC,gBAAtC;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,SAAS,gBAAGR,UAAU,CACjC,CAACS,WAAD,EAAcC,GAAd,KAAsB;AAAA;;AACpB,MAAMC,MAAM,GAAGT,cAAc,CAAC,WAAD,EAAcO,WAAd,CAA7B;AACA,MAAMG,KAAK,GAAGX,gBAAgB,CAACQ,WAAD,CAA9B;;AAEA,MAAM;AAEJI,IAAAA,QAFI;AAGJC,IAAAA,iBAAiB,gBAAG,oBAAC,iBAAD;AAHhB,MAKFF,KALJ;AAAA,MAIKG,IAJL,iCAKIH,KALJ;;AAOA,MAAMI,KAAK,GAAGT,qBAAqB,EAAnC;AACA,MAAMU,QAAQ,2BAAGD,KAAH,oBAAGA,KAAK,CAAEE,aAAP,CAAqBH,IAArB,EAA2BL,GAA3B,CAAH;AAAwCA,IAAAA;AAAxC,KAAgDK,IAAhD,CAAd;AAEA,sBACE,oBAAC,MAAD,CAAQ,KAAR,eACME,QADN;AAEE,IAAA,SAAS,EAAEb,EAAE,CAAC,oBAAD,EAAuBQ,KAAK,CAACO,SAA7B,CAFf;AAGE,IAAA,KAAK;AACHC,MAAAA,OAAO,EAAE,OADN;AAEHC,MAAAA,SAAS,EAAE;AAFR,OAGAV,MAHA;AAHP,MASGE,QATH,EAUGG,KAAK,QAAL,IAAAA,KAAK,CAAEM,UAAP,GAAoBR,iBAApB,GAAwC,IAV3C,CADF;AAcD,CA7BgC,CAA5B;;AAgCP,IAAIT,OAAJ,EAAa;AACXG,EAAAA,SAAS,CAACe,WAAV,GAAwB,WAAxB;AACD;;AAID;AACA;AACA;AACA;AACA,OAAO,IAAMC,iBAAiB,gBAAGxB,UAAU,CACzC,CAACY,KAAD,EAAQF,GAAR,KAAgB;AACd,MAAMM,KAAK,GAAGT,qBAAqB,EAAnC;AACA,MAAMI,MAAM,GAAGR,SAAS,EAAxB;AAEA,MAAI,EAACa,KAAD,YAACA,KAAK,CAAEM,UAAR,CAAJ,EAAwB,OAAO,IAAP;AAExB,MAAMH,SAAS,GAAGf,EAAE,CAAC,iCAAD,EAAoCQ,KAAK,CAACO,SAA1C,CAApB;AAEA,sBACE,oBAAC,MAAD,CAAQ,IAAR,eACMH,KADN,oBACMA,KAAK,CAAES,yBAAP,CAAiCb,KAAjC,EAAwCF,GAAxC,CADN;AAEE,IAAA,KAAK,EAAEC,MAAM,CAACG,iBAFhB;AAGE,IAAA,SAAS,EAAEK;AAHb,KADF;AAOD,CAhBwC,CAApC;;AAmBP,IAAId,OAAJ,EAAa;AACXmB,EAAAA,iBAAiB,CAACD,WAAlB,GAAgC,mBAAhC;AACD","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  useStyles,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { useFormControlContext } from \"./form-control\"\n\nexport interface FormLabelProps\n  extends HTMLChakraProps<\"label\">,\n    ThemingProps<\"FormLabel\"> {\n  /**\n   * @type React.ReactElement\n   */\n  requiredIndicator?: React.ReactElement\n}\n\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\nexport const FormLabel = forwardRef<FormLabelProps, \"label\">(\n  (passedProps, ref) => {\n    const styles = useStyleConfig(\"FormLabel\", passedProps)\n    const props = omitThemingProps(passedProps)\n\n    const {\n      className,\n      children,\n      requiredIndicator = <RequiredIndicator />,\n      ...rest\n    } = props\n\n    const field = useFormControlContext()\n    const ownProps = field?.getLabelProps(rest, ref) ?? { ref, ...rest }\n\n    return (\n      <chakra.label\n        {...ownProps}\n        className={cx(\"chakra-form__label\", props.className)}\n        __css={{\n          display: \"block\",\n          textAlign: \"start\",\n          ...styles,\n        }}\n      >\n        {children}\n        {field?.isRequired ? requiredIndicator : null}\n      </chakra.label>\n    )\n  },\n)\n\nif (__DEV__) {\n  FormLabel.displayName = \"FormLabel\"\n}\n\nexport interface RequiredIndicatorProps extends HTMLChakraProps<\"span\"> {}\n\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\nexport const RequiredIndicator = forwardRef<RequiredIndicatorProps, \"span\">(\n  (props, ref) => {\n    const field = useFormControlContext()\n    const styles = useStyles()\n\n    if (!field?.isRequired) return null\n\n    const className = cx(\"chakra-form__required-indicator\", props.className)\n\n    return (\n      <chakra.span\n        {...field?.getRequiredIndicatorProps(props, ref)}\n        __css={styles.requiredIndicator}\n        className={className}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  RequiredIndicator.displayName = \"RequiredIndicator\"\n}\n"],"file":"form-label.js"}