{"version":3,"sources":["../../src/slide.tsx"],"names":["cx","__DEV__","AnimatePresence","motion","React","slideTransition","TransitionEasings","withDelay","defaultTransition","exit","duration","ease","easeInOut","enter","type","damping","stiffness","variants","direction","transition","transitionEnd","delay","exitStyles","enterStyles","Slide","forwardRef","props","ref","style","unmountOnExit","in","isOpen","className","rest","transitionStyles","computedStyle","Object","assign","position","show","animate","custom","displayName"],"mappings":"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","sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  MotionStyle,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  SlideDirection,\n  slideTransition,\n  TransitionEasings,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\nexport type { SlideDirection }\n\nconst defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TransitionEasings.easeInOut,\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180,\n  },\n}\n\nconst variants: Variants<SlideOptions> = {\n  exit: ({ direction, transition, transitionEnd, delay }) => {\n    const { exit: exitStyles } = slideTransition({ direction })\n    return {\n      ...exitStyles,\n      transition:\n        transition?.exit ?? withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd?.exit,\n    }\n  },\n  enter: ({ direction, transitionEnd, transition, delay }) => {\n    const { enter: enterStyles } = slideTransition({ direction })\n    return {\n      ...enterStyles,\n      transition:\n        transition?.enter ?? withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd?.enter,\n    }\n  },\n}\n\nexport interface SlideOptions {\n  /**\n   * The direction to slide from\n   * @default \"right\"\n   */\n  direction?: SlideDirection\n}\n\nexport interface SlideProps\n  extends WithTransitionConfig<HTMLMotionProps<\"div\">>,\n    SlideOptions {}\n\nexport const Slide = React.forwardRef<HTMLDivElement, SlideProps>(\n  (props, ref) => {\n    const {\n      direction = \"right\",\n      style,\n      unmountOnExit,\n      in: isOpen,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const transitionStyles = slideTransition({ direction })\n    const computedStyle: MotionStyle = Object.assign(\n      { position: \"fixed\" },\n      transitionStyles.position,\n      style,\n    )\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = { transitionEnd, transition, direction, delay }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            initial=\"exit\"\n            className={cx(\"chakra-slide\", className)}\n            animate={animate}\n            exit=\"exit\"\n            custom={custom}\n            variants={variants as _Variants}\n            style={computedStyle}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  Slide.displayName = \"Slide\"\n}\n"],"file":"slide.js"}