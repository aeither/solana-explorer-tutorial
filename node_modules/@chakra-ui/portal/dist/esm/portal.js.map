{"version":3,"sources":["../../src/portal.tsx"],"names":["useForceUpdate","useSafeLayoutEffect","isBrowser","__DEV__","createContext","React","createPortal","usePortalManager","PortalContextProvider","usePortalContext","strict","name","PORTAL_CLASSNAME","PORTAL_SELECTOR","Container","props","position","zIndex","top","left","right","children","DefaultPortal","appendToParentPortal","tempNode","useRef","portal","forceUpdate","parentPortal","manager","current","doc","ownerDocument","host","body","createElement","className","appendChild","portalNode","contains","removeChild","_children","ContainerPortal","containerRef","containerEl","document","undefined","useMemo","node","Portal","rest","defaultProps","selector","displayName"],"mappings":"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","sourcesContent":["import { useForceUpdate, useSafeLayoutEffect } from \"@chakra-ui/hooks\"\nimport { isBrowser, __DEV__ } from \"@chakra-ui/utils\"\nimport { createContext } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport { createPortal } from \"react-dom\"\nimport { usePortalManager } from \"./portal-manager\"\n\ntype PortalContext = HTMLDivElement | null\n\nconst [PortalContextProvider, usePortalContext] = createContext<PortalContext>({\n  strict: false,\n  name: \"PortalContext\",\n})\n\nconst PORTAL_CLASSNAME = \"chakra-portal\"\nconst PORTAL_SELECTOR = `.chakra-portal`\n\nconst Container: React.FC<{ zIndex: number }> = (props) => (\n  <div\n    className=\"chakra-portal-zIndex\"\n    style={{\n      position: \"absolute\",\n      zIndex: props.zIndex,\n      top: 0,\n      left: 0,\n      right: 0,\n      // NB: Don't add `bottom: 0`, it makes the entire app unusable\n      // @see https://github.com/chakra-ui/chakra-ui/issues/3201\n    }}\n  >\n    {props.children}\n  </div>\n)\n\n/**\n * Portal that uses `document.body` as container\n */\nconst DefaultPortal: React.FC<{ appendToParentPortal?: boolean }> = (props) => {\n  const { appendToParentPortal, children } = props\n\n  const tempNode = React.useRef<HTMLDivElement | null>(null)\n  const portal = React.useRef<HTMLDivElement | null>(null)\n\n  const forceUpdate = useForceUpdate()\n\n  const parentPortal = usePortalContext()\n  const manager = usePortalManager()\n\n  useSafeLayoutEffect(() => {\n    if (!tempNode.current) return\n\n    const doc = tempNode.current!.ownerDocument\n    const host = appendToParentPortal ? parentPortal ?? doc.body : doc.body\n\n    if (!host) return\n\n    portal.current = doc.createElement(\"div\")\n    portal.current.className = PORTAL_CLASSNAME\n\n    host.appendChild(portal.current)\n    forceUpdate()\n\n    const portalNode = portal.current\n    return () => {\n      if (host.contains(portalNode)) {\n        host.removeChild(portalNode)\n      }\n    }\n  }, [])\n\n  const _children = manager?.zIndex ? (\n    <Container zIndex={manager?.zIndex}>{children}</Container>\n  ) : (\n    children\n  )\n\n  return portal.current ? (\n    createPortal(\n      <PortalContextProvider value={portal.current}>\n        {_children}\n      </PortalContextProvider>,\n      portal.current,\n    )\n  ) : (\n    <span ref={tempNode} />\n  )\n}\n\ninterface ContainerPortalProps {\n  containerRef: React.RefObject<HTMLElement | null>\n  appendToParentPortal?: boolean\n}\n\n/**\n * Portal that uses a custom container\n */\nconst ContainerPortal: React.FC<ContainerPortalProps> = (props) => {\n  const { children, containerRef, appendToParentPortal } = props\n  const containerEl = containerRef.current\n  const host = containerEl ?? (isBrowser ? document.body : undefined)\n\n  const portal = React.useMemo(() => {\n    const node = containerEl?.ownerDocument.createElement(\"div\")\n    if (node) node.className = PORTAL_CLASSNAME\n    return node\n  }, [containerEl])\n\n  const forceUpdate = useForceUpdate()\n\n  useSafeLayoutEffect(() => {\n    forceUpdate()\n  }, [])\n\n  useSafeLayoutEffect(() => {\n    if (!portal || !host) return\n    host.appendChild(portal)\n    return () => {\n      host.removeChild(portal)\n    }\n  }, [portal, host])\n\n  if (host && portal) {\n    return createPortal(\n      <PortalContextProvider value={appendToParentPortal ? portal : null}>\n        {children}\n      </PortalContextProvider>,\n      portal,\n    )\n  }\n\n  return null\n}\n\nexport interface PortalProps {\n  /**\n   * The `ref` to the component where the portal will be attached to.\n   */\n  containerRef?: React.RefObject<HTMLElement | null>\n  /**\n   * The content or node you'll like to portal\n   */\n  children: React.ReactNode\n  /**\n   * If `true`, the portal will check if it is within a parent portal\n   * and append itself to the parent's portal node.\n   * This provides nesting for portals.\n   *\n   * If `false`, the portal will always append to `document.body`\n   * regardless of nesting. It is used to opt out of portal nesting.\n   */\n  appendToParentPortal?: boolean\n}\n\n/**\n * Portal\n *\n * Declarative component used to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * @see Docs https://chakra-ui.com/portal\n */\n\nexport function Portal(props: PortalProps) {\n  const { containerRef, ...rest } = props\n  return containerRef ? (\n    <ContainerPortal containerRef={containerRef} {...rest} />\n  ) : (\n    <DefaultPortal {...rest} />\n  )\n}\n\nPortal.defaultProps = {\n  appendToParentPortal: true,\n}\n\nPortal.className = PORTAL_CLASSNAME\nPortal.selector = PORTAL_SELECTOR\n\nif (__DEV__) {\n  Portal.displayName = \"Portal\"\n}\n"],"file":"portal.js"}