{"ast":null,"code":"import { __assign } from 'tslib';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.js';\nimport { isMotionValue } from '../../value/utils/is-motion-value.js';\nimport { buildHTMLStyles } from './utils/build-styles.js';\nimport { createHtmlRenderState } from './utils/create-render-state.js';\n\nfunction copyRawValuesOnly(target, source, props) {\n  for (var key in source) {\n    if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n      target[key] = source[key];\n    }\n  }\n}\n\nfunction useInitialMotionValues(_a, visualState, isStatic) {\n  var transformTemplate = _a.transformTemplate;\n  return useMemo(function () {\n    var state = createHtmlRenderState();\n    buildHTMLStyles(state, visualState, undefined, undefined, {\n      enableHardwareAcceleration: !isStatic\n    }, transformTemplate);\n    var vars = state.vars,\n        style = state.style;\n    return __assign(__assign({}, vars), style);\n  }, [visualState]);\n}\n\nfunction useStyle(props, visualState, isStatic) {\n  var styleProp = props.style || {};\n  var style = {};\n  /**\n   * Copy non-Motion Values straight into style\n   */\n\n  copyRawValuesOnly(style, styleProp, props);\n  Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n\n  if (props.transformValues) {\n    style = props.transformValues(style);\n  }\n\n  return style;\n}\n\nfunction useHTMLProps(props, visualState, isStatic) {\n  // The `any` isn't ideal but it is the type of createElement props argument\n  var htmlProps = {};\n  var style = useStyle(props, visualState, isStatic);\n\n  if (Boolean(props.drag)) {\n    // Disable the ghost element when a user drags\n    htmlProps.draggable = false; // Disable text selection\n\n    style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout = \"none\"; // Disable scrolling on the draggable direction\n\n    style.touchAction = props.drag === true ? \"none\" : \"pan-\" + (props.drag === \"x\" ? \"y\" : \"x\");\n  }\n\n  htmlProps.style = style;\n  return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps, useStyle };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/framer-motion/dist/es/render/html/use-props.js"],"names":["__assign","useMemo","isForcedMotionValue","isMotionValue","buildHTMLStyles","createHtmlRenderState","copyRawValuesOnly","target","source","props","key","useInitialMotionValues","_a","visualState","isStatic","transformTemplate","state","undefined","enableHardwareAcceleration","vars","style","useStyle","styleProp","Object","assign","transformValues","useHTMLProps","htmlProps","Boolean","drag","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction"],"mappings":"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","sourcesContent":["import { __assign } from 'tslib';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.js';\nimport { isMotionValue } from '../../value/utils/is-motion-value.js';\nimport { buildHTMLStyles } from './utils/build-styles.js';\nimport { createHtmlRenderState } from './utils/create-render-state.js';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (var key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues(_a, visualState, isStatic) {\n    var transformTemplate = _a.transformTemplate;\n    return useMemo(function () {\n        var state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, undefined, undefined, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        var vars = state.vars, style = state.style;\n        return __assign(__assign({}, vars), style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    var styleProp = props.style || {};\n    var style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    if (props.transformValues) {\n        style = props.transformValues(style);\n    }\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    var htmlProps = {};\n    var style = useStyle(props, visualState, isStatic);\n    if (Boolean(props.drag)) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout =\n            \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : \"pan-\" + (props.drag === \"x\" ? \"y\" : \"x\");\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps, useStyle };\n"]},"metadata":{},"sourceType":"module"}