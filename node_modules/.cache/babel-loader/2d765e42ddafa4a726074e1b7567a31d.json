{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { warn } from \"@chakra-ui/utils\";\nexport var createBreakpoints = function createBreakpoints(config) {\n  warn({\n    condition: true,\n    message: [\"[chakra-ui]: createBreakpoints(...) will be deprecated pretty soon\", \"simply pass the breakpoints as an object. Remove the createBreakpoint(..) call\"].join(\"\")\n  });\n  return _extends({\n    base: \"0em\"\n  }, config);\n};","map":{"version":3,"sources":["../../src/create-breakpoints.ts"],"names":["createBreakpoints","config","warn","condition","message","base"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAAA,IAAA,QAAA,kBAAA;AAaA,OAAO,IAAMA,iBAAiB,GAC5BC,SADWD,iBACXC,CAAAA,MAD+B,EAEZ;AACnBC,EAAAA,IAAI,CAAC;AACHC,IAAAA,SAAS,EADN,IAAA;AAEHC,IAAAA,OAAO,EAAE,CAAA,oEAAA,EAAA,gFAAA,EAAA,IAAA,CAAA,EAAA;AAFN,GAAD,CAAJF;AAOA,SAAA,QAAA,CAAA;AAASG,IAAAA,IAAI,EAAE;AAAf,GAAA,EAAA,MAAA,CAAA;AAVK,CAAA","sourcesContent":["import { warn } from \"@chakra-ui/utils\"\n\nexport interface BaseBreakpointConfig {\n  sm: string\n  md: string\n  lg: string\n  xl: string\n  \"2xl\"?: string\n  [key: string]: string | undefined\n}\n\nexport type Breakpoints<T> = T & { base: \"0em\" }\n\nexport const createBreakpoints = <T extends BaseBreakpointConfig>(\n  config: T,\n): Breakpoints<T> => {\n  warn({\n    condition: true,\n    message: [\n      `[chakra-ui]: createBreakpoints(...) will be deprecated pretty soon`,\n      `simply pass the breakpoints as an object. Remove the createBreakpoint(..) call`,\n    ].join(\"\"),\n  })\n  return { base: \"0em\", ...config }\n}\n"]},"metadata":{},"sourceType":"module"}