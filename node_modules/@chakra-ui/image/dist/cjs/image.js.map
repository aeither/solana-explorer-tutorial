{"version":3,"sources":["../../src/image.tsx"],"names":["NativeImage","React","forwardRef","props","ref","htmlWidth","htmlHeight","alt","rest","Image","fallbackSrc","fallback","src","align","fit","loading","ignoreFallback","crossOrigin","shouldIgnore","status","shared","objectFit","objectPosition","Img","__DEV__","displayName"],"mappings":";;;;;AAAA;;AAOA;;AACA;;AACA;;;;;;;;;;AAeA,IAAMA,WAAW,gBAAGC,KAAK,CAACC,UAAN,CAClB,UAACC,KAAD,EAA0BC,GAA1B,EAAkD;AAAA,MACxCC,SADwC,GACAF,KADA,CACxCE,SADwC;AAAA,MAC7BC,UAD6B,GACAH,KADA,CAC7BG,UAD6B;AAAA,MACjBC,GADiB,GACAJ,KADA,CACjBI,GADiB;AAAA,MACTC,IADS,iCACAL,KADA;;AAEhD,sBACE;AACE,IAAA,KAAK,EAAEE,SADT;AAEE,IAAA,MAAM,EAAEC,UAFV;AAGE,IAAA,GAAG,EAAEF,GAHP;AAIE,IAAA,GAAG,EAAEG;AAJP,KAKMC,IALN,EADF;AASD,CAZiB,CAApB;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,KAAK,gBAAG,wBAA8B,UAACN,KAAD,EAAQC,GAAR,EAAgB;AAAA,MAE/DM,WAF+D,GAW7DP,KAX6D,CAE/DO,WAF+D;AAAA,MAG/DC,QAH+D,GAW7DR,KAX6D,CAG/DQ,QAH+D;AAAA,MAI/DC,GAJ+D,GAW7DT,KAX6D,CAI/DS,GAJ+D;AAAA,MAK/DC,KAL+D,GAW7DV,KAX6D,CAK/DU,KAL+D;AAAA,MAM/DC,GAN+D,GAW7DX,KAX6D,CAM/DW,GAN+D;AAAA,MAO/DC,OAP+D,GAW7DZ,KAX6D,CAO/DY,OAP+D;AAAA,MAQ/DC,cAR+D,GAW7Db,KAX6D,CAQ/Da,cAR+D;AAAA,MAS/DC,WAT+D,GAW7Dd,KAX6D,CAS/Dc,WAT+D;AAAA,MAU5DT,IAV4D,iCAW7DL,KAX6D;AAajE;AACF;AACA;AACA;;;AACE,MAAMe,YAAY,GAAGH,OAAO,IAAI,IAAX,IAAmBC,cAAxC;AAEA,MAAMG,MAAM,GAAG,qCACVhB,KADU;AAEba,IAAAA,cAAc,EAAEE;AAFH,KAAf;;AAKA,MAAME,MAAM;AACVhB,IAAAA,GAAG,EAAHA,GADU;AAEViB,IAAAA,SAAS,EAAEP,GAFD;AAGVQ,IAAAA,cAAc,EAAET;AAHN,KAINK,YAAY,GAAGV,IAAH,GAAU,iBAAKA,IAAL,EAAW,CAAC,SAAD,EAAY,QAAZ,CAAX,CAJhB,CAAZ;;AAOA,MAAIW,MAAM,KAAK,QAAf,EAAyB;AACvB;AACJ;AACA;AACA;AACI,QAAIR,QAAJ,EAAc,OAAOA,QAAP;AAEd,wBACE,oBAAC,cAAD,CAAQ,GAAR;AACE,MAAA,EAAE,EAAEX,WADN;AAEE,MAAA,SAAS,EAAC,2BAFZ;AAGE,MAAA,GAAG,EAAEU;AAHP,OAIMU,MAJN,EADF;AAQD;;AAED,sBACE,oBAAC,cAAD,CAAQ,GAAR;AACE,IAAA,EAAE,EAAEpB,WADN;AAEE,IAAA,GAAG,EAAEY,GAFP;AAGE,IAAA,WAAW,EAAEK,WAHf;AAIE,IAAA,OAAO,EAAEF,OAJX;AAKE,IAAA,SAAS,EAAC;AALZ,KAMMK,MANN,EADF;AAUD,CA1DoB,CAAd;;;AA8DP;AACA;AACA;AACA;AACO,IAAMG,GAAG,gBAAG,wBAA4B,UAACpB,KAAD,EAAQC,GAAR;AAAA,sBAC7C,oBAAC,cAAD,CAAQ,GAAR;AAAY,IAAA,GAAG,EAAEA,GAAjB;AAAsB,IAAA,EAAE,EAAEJ,WAA1B;AAAuC,IAAA,SAAS,EAAC;AAAjD,KAAoEG,KAApE,EAD6C;AAAA,CAA5B,CAAZ;;;AAIP,IAAIqB,cAAJ,EAAa;AACXf,EAAAA,KAAK,CAACgB,WAAN,GAAoB,OAApB;AACD","sourcesContent":["import {\n  chakra,\n  PropsOf,\n  SystemProps,\n  forwardRef,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { omit, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { useImage, UseImageProps } from \"./use-image\"\n\ninterface NativeImageOptions {\n  /**\n   * The native HTML `width` attribute to the passed to the `img`\n   */\n  htmlWidth?: string | number\n  /**\n   * The native HTML `height` attribute to the passed to the `img`\n   */\n  htmlHeight?: string | number\n}\n\ninterface NativeImageProps extends PropsOf<\"img\">, NativeImageOptions {}\n\nconst NativeImage = React.forwardRef(\n  (props: NativeImageProps, ref: React.Ref<any>) => {\n    const { htmlWidth, htmlHeight, alt, ...rest } = props\n    return (\n      <img\n        width={htmlWidth}\n        height={htmlHeight}\n        ref={ref}\n        alt={alt}\n        {...rest}\n      />\n    )\n  },\n)\n\ninterface ImageOptions extends NativeImageOptions {\n  /**\n   * Fallback image `src` to show if image is loading or image fails.\n   *\n   * Note ðŸš¨: We recommend you use a local image\n   */\n  fallbackSrc?: string\n  /**\n   * Fallback element to show if image is loading or image fails.\n   * @type React.ReactElement\n   */\n  fallback?: React.ReactElement\n  /**\n   * Defines loading strategy\n   */\n  loading?: \"eager\" | \"lazy\"\n  /**\n   * How the image to fit within its bounds.\n   * It maps to css `object-fit` property.\n   * @type SystemProps[\"objectFit\"]\n   */\n  fit?: SystemProps[\"objectFit\"]\n  /**\n   * How to align the image within its bounds.\n   * It maps to css `object-position` property.\n   * @type SystemProps[\"objectPosition\"]\n   */\n  align?: SystemProps[\"objectPosition\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   */\n  ignoreFallback?: boolean\n}\n\nexport interface ImageProps\n  extends UseImageProps,\n    Omit<HTMLChakraProps<\"img\">, keyof UseImageProps>,\n    ImageOptions {}\n\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\nexport const Image = forwardRef<ImageProps, \"img\">((props, ref) => {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    ...rest\n  } = props\n\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   */\n  const shouldIgnore = loading != null || ignoreFallback\n\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnore,\n  })\n\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...(shouldIgnore ? rest : omit(rest, [\"onError\", \"onLoad\"])),\n  }\n\n  if (status !== \"loaded\") {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback\n\n    return (\n      <chakra.img\n        as={NativeImage}\n        className=\"chakra-image__placeholder\"\n        src={fallbackSrc}\n        {...shared}\n      />\n    )\n  }\n\n  return (\n    <chakra.img\n      as={NativeImage}\n      src={src}\n      crossOrigin={crossOrigin}\n      loading={loading}\n      className=\"chakra-image\"\n      {...shared}\n    />\n  )\n})\n\nexport interface ImgProps extends HTMLChakraProps<\"img\">, NativeImageOptions {}\n\n/**\n * Fallback component for most SSR users who want to use the native `img` with\n * support for chakra props\n */\nexport const Img = forwardRef<ImgProps, \"img\">((props, ref) => (\n  <chakra.img ref={ref} as={NativeImage} className=\"chakra-image\" {...props} />\n))\n\nif (__DEV__) {\n  Image.displayName = \"Image\"\n}\n"],"file":"image.js"}