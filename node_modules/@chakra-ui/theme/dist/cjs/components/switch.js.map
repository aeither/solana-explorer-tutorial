{"version":3,"sources":["../../../src/components/switch.ts"],"names":["$width","$height","$diff","diffValue","calc","subtract","$translateX","baseStyleTrack","props","c","colorScheme","borderRadius","p","width","reference","height","transitionProperty","transitionDuration","bg","_focus","boxShadow","_disabled","opacity","cursor","_checked","baseStyleThumb","transform","baseStyle","container","variable","_rtl","negate","toString","track","thumb","sizes","sm","md","lg","defaultProps","size","parts","keys"],"mappings":"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","sourcesContent":["import { switchAnatomy as parts } from \"@chakra-ui/anatomy\"\nimport type {\n  PartsStyleFunction,\n  PartsStyleObject,\n  SystemStyleFunction,\n  SystemStyleObject,\n} from \"@chakra-ui/theme-tools\"\nimport { calc, cssVar, mode } from \"@chakra-ui/theme-tools\"\n\nconst $width = cssVar(\"switch-track-width\")\nconst $height = cssVar(\"switch-track-height\")\n\nconst $diff = cssVar(\"switch-track-diff\")\nconst diffValue = calc.subtract($width, $height)\n\nconst $translateX = cssVar(\"switch-thumb-x\")\n\nconst baseStyleTrack: SystemStyleFunction = (props) => {\n  const { colorScheme: c } = props\n\n  return {\n    borderRadius: \"full\",\n    p: \"2px\",\n    width: [$width.reference],\n    height: [$height.reference],\n    transitionProperty: \"common\",\n    transitionDuration: \"fast\",\n    bg: mode(\"gray.300\", \"whiteAlpha.400\")(props),\n    _focus: {\n      boxShadow: \"outline\",\n    },\n    _disabled: {\n      opacity: 0.4,\n      cursor: \"not-allowed\",\n    },\n    _checked: {\n      bg: mode(`${c}.500`, `${c}.200`)(props),\n    },\n  }\n}\n\nconst baseStyleThumb: SystemStyleObject = {\n  bg: \"white\",\n  transitionProperty: \"transform\",\n  transitionDuration: \"normal\",\n  borderRadius: \"inherit\",\n  width: [$height.reference],\n  height: [$height.reference],\n  _checked: {\n    transform: `translateX(${$translateX.reference})`,\n  },\n}\n\nconst baseStyle: PartsStyleFunction<typeof parts> = (props) => ({\n  container: {\n    [$diff.variable]: diffValue,\n    [$translateX.variable]: $diff.reference,\n    _rtl: {\n      [$translateX.variable]: calc($diff).negate().toString(),\n    },\n  },\n  track: baseStyleTrack(props),\n  thumb: baseStyleThumb,\n})\n\nconst sizes: Record<string, PartsStyleObject<typeof parts>> = {\n  sm: {\n    container: {\n      [$width.variable]: \"1.375rem\",\n      [$height.variable]: \"0.75rem\",\n    },\n  },\n  md: {\n    container: {\n      [$width.variable]: \"1.875rem\",\n      [$height.variable]: \"1rem\",\n    },\n  },\n  lg: {\n    container: {\n      [$width.variable]: \"2.875rem\",\n      [$height.variable]: \"1.5rem\",\n    },\n  },\n}\n\nconst defaultProps = {\n  size: \"md\",\n  colorScheme: \"blue\",\n}\n\nexport default {\n  parts: parts.keys,\n  baseStyle,\n  sizes,\n  defaultProps,\n}\n"],"file":"switch.js"}