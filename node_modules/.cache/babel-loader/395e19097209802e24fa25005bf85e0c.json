{"ast":null,"code":"import _toConsumableArray from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { mergeRefs } from \"@chakra-ui/react-utils\";\nimport { createPopper } from \"@popperjs/core\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport * as customModifiers from \"./modifiers\";\nimport { cssVars, getEventListenerOptions } from \"./utils\";\nexport function usePopper(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      _props$enabled = _props.enabled,\n      enabled = _props$enabled === void 0 ? true : _props$enabled,\n      _props$modifiers = _props.modifiers,\n      modifiers = _props$modifiers === void 0 ? [] : _props$modifiers,\n      _props$placement = _props.placement,\n      placementProp = _props$placement === void 0 ? \"bottom\" : _props$placement,\n      _props$strategy = _props.strategy,\n      strategy = _props$strategy === void 0 ? \"absolute\" : _props$strategy,\n      _props$arrowPadding = _props.arrowPadding,\n      arrowPadding = _props$arrowPadding === void 0 ? 8 : _props$arrowPadding,\n      _props$eventListeners = _props.eventListeners,\n      eventListeners = _props$eventListeners === void 0 ? true : _props$eventListeners,\n      offset = _props.offset,\n      _props$gutter = _props.gutter,\n      gutter = _props$gutter === void 0 ? 8 : _props$gutter,\n      _props$flip = _props.flip,\n      flip = _props$flip === void 0 ? true : _props$flip,\n      _props$boundary = _props.boundary,\n      boundary = _props$boundary === void 0 ? \"clippingParents\" : _props$boundary,\n      _props$preventOverflo = _props.preventOverflow,\n      preventOverflow = _props$preventOverflo === void 0 ? true : _props$preventOverflo,\n      matchWidth = _props.matchWidth;\n  var reference = useRef(null);\n  var popper = useRef(null);\n  var instance = useRef(null);\n  var cleanup = useRef(function () {});\n  var setupPopper = useCallback(function () {\n    if (!enabled || !reference.current || !popper.current) return; // If popper instance exists, destroy it so we can create a new one\n\n    cleanup.current == null ? void 0 : cleanup.current();\n    instance.current = createPopper(reference.current, popper.current, {\n      placement: placementProp,\n      modifiers: [customModifiers.innerArrow, customModifiers.positionArrow, customModifiers.transformOrigin, _extends({}, customModifiers.matchWidth, {\n        enabled: !!matchWidth\n      }), _extends({\n        name: \"eventListeners\"\n      }, getEventListenerOptions(eventListeners)), {\n        name: \"arrow\",\n        options: {\n          padding: arrowPadding\n        }\n      }, {\n        name: \"offset\",\n        options: {\n          offset: offset != null ? offset : [0, gutter]\n        }\n      }, {\n        name: \"flip\",\n        enabled: !!flip,\n        options: {\n          padding: 8\n        }\n      }, {\n        name: \"preventOverflow\",\n        enabled: !!preventOverflow,\n        options: {\n          boundary: boundary\n        }\n      }].concat(_toConsumableArray(modifiers)),\n      strategy: strategy\n    }); // force update one-time to fix any positioning issues\n\n    instance.current.forceUpdate();\n    cleanup.current = instance.current.destroy;\n  }, [enabled, placementProp, modifiers, matchWidth, eventListeners, arrowPadding, offset, gutter, flip, preventOverflow, boundary, strategy]);\n  useEffect(function () {\n    return function () {\n      /**\n       * Fast refresh might call this function and tear down the popper\n       * even if the reference still exists. This checks against that\n       */\n      if (!reference.current && !popper.current) {\n        var _instance$current;\n\n        (_instance$current = instance.current) == null ? void 0 : _instance$current.destroy();\n        instance.current = null;\n      }\n    };\n  }, []);\n  var referenceRef = useCallback(function (node) {\n    reference.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  var getReferenceProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(referenceRef, ref)\n    });\n  }, [referenceRef]);\n  var popperRef = useCallback(function (node) {\n    popper.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  var getPopperProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(popperRef, ref),\n      style: _extends({}, props.style, {\n        position: strategy,\n        minWidth: \"max-content\",\n        inset: \"0 auto auto 0\"\n      })\n    });\n  }, [strategy, popperRef]);\n  var getArrowProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    var rest = _objectWithoutPropertiesLoose(props, [\"size\", \"shadowColor\", \"bg\", \"style\"]);\n\n    return _extends({}, rest, {\n      ref: ref,\n      \"data-popper-arrow\": \"\",\n      style: getArrowStyle(props)\n    });\n  }, []);\n  var getArrowInnerProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: ref,\n      \"data-popper-arrow-inner\": \"\"\n    });\n  }, []);\n  return {\n    update: function update() {\n      var _instance$current2;\n\n      (_instance$current2 = instance.current) == null ? void 0 : _instance$current2.update();\n    },\n    forceUpdate: function forceUpdate() {\n      var _instance$current3;\n\n      (_instance$current3 = instance.current) == null ? void 0 : _instance$current3.forceUpdate();\n    },\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef: referenceRef,\n    popperRef: popperRef,\n    getPopperProps: getPopperProps,\n    getArrowProps: getArrowProps,\n    getArrowInnerProps: getArrowInnerProps,\n    getReferenceProps: getReferenceProps\n  };\n}\n\nfunction getArrowStyle(props) {\n  var size = props.size,\n      shadowColor = props.shadowColor,\n      bg = props.bg,\n      style = props.style;\n\n  var computedStyle = _extends({}, style, {\n    position: \"absolute\"\n  });\n\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size;\n  }\n\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor;\n  }\n\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg;\n  }\n\n  return computedStyle;\n}","map":{"version":3,"sources":["../../src/use-popper.ts"],"names":["props","enabled","modifiers","placement","placementProp","strategy","arrowPadding","eventListeners","gutter","flip","boundary","preventOverflow","matchWidth","reference","useRef","popper","instance","cleanup","setupPopper","useCallback","createPopper","customModifiers","name","getEventListenerOptions","options","padding","offset","useEffect","referenceRef","node","getReferenceProps","ref","mergeRefs","popperRef","getPopperProps","style","position","minWidth","inset","getArrowProps","rest","getArrowStyle","getArrowInnerProps","update","forceUpdate","transformOrigin","cssVars","computedStyle"],"mappings":"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","sourcesContent":["import { mergeRefs, PropGetterV2 } from \"@chakra-ui/react-utils\"\nimport {\n  createPopper,\n  Instance,\n  Modifier,\n  Placement,\n  VirtualElement,\n} from \"@popperjs/core\"\nimport { useCallback, useEffect, useRef } from \"react\"\nimport * as customModifiers from \"./modifiers\"\nimport { cssVars, getEventListenerOptions } from \"./utils\"\n\nexport type { Placement }\n\nexport interface UsePopperProps {\n  /**\n   * Whether the popper.js should be enabled\n   */\n  enabled?: boolean\n  /**\n   * The main and cross-axis offset to displace popper element\n   * from its reference element.\n   */\n  offset?: [crossAxis: number, mainAxis: number]\n  /**\n   * The distance or margin between the reference and popper.\n   * It is used internally to create an `offset` modifier.\n   *\n   * NB: If you define `offset` prop, it'll override the gutter.\n   * @default 8\n   */\n  gutter?: number\n  /**\n   * If `true`, will prevent the popper from being cut off and ensure\n   * it's visible within the boundary area.\n   * @default true\n   */\n  preventOverflow?: boolean\n  /**\n   * If `true`, the popper will change its placement and flip when it's\n   * about to overflow its boundary area.\n   * @default true\n   */\n  flip?: boolean\n  /**\n   * If `true`, the popper will match the width of the reference at all times.\n   * It's useful for `autocomplete`, `date-picker` and `select` patterns.\n   */\n  matchWidth?: boolean\n  /**\n   * The boundary area for the popper. Used within the `preventOverflow` modifier\n   * @default \"clippingParents\"\n   */\n  boundary?: \"clippingParents\" | \"scrollParent\" | HTMLElement\n  /**\n   * If provided, determines whether the popper will reposition itself on `scroll`\n   * and `resize` of the window.\n   */\n  eventListeners?: boolean | { scroll?: boolean; resize?: boolean }\n  /**\n   * The padding required to prevent the arrow from\n   * reaching the very edge of the popper.\n   * @default 8\n   */\n  arrowPadding?: number\n  /**\n   * The CSS positioning strategy to use.\n   * @default \"absolute\"\n   */\n  strategy?: \"absolute\" | \"fixed\"\n  /**\n   * The placement of the popper relative to its reference.\n   * @default \"bottom\"\n   */\n  placement?: Placement\n  /**\n   * Array of popper.js modifiers. Check the docs to see\n   * the list of possible modifiers you can pass.\n   *\n   * @see Docs https://popper.js.org/docs/v2/modifiers/\n   */\n  modifiers?: Array<Partial<Modifier<string, any>>>\n}\n\nexport type ArrowCSSVarProps = {\n  /**\n   * The size of the popover arrow.\n   * This sets the `--popper-arrow-size` css property\n   */\n  size?: string | number\n  /**\n   * The box-shadow color of the popover arrow.\n   * This sets the `--popper-arrow-shadow-color` css property\n   */\n  shadowColor?: string\n  /**\n   * The background color of teh popper arrow.\n   * This sets the `--popper-arrow-bg` css property.\n   */\n  bg?: string\n}\n\nexport function usePopper(props: UsePopperProps = {}) {\n  const {\n    enabled = true,\n    modifiers = [],\n    placement: placementProp = \"bottom\",\n    strategy = \"absolute\",\n    arrowPadding = 8,\n    eventListeners = true,\n    offset,\n    gutter = 8,\n    flip = true,\n    boundary = \"clippingParents\",\n    preventOverflow = true,\n    matchWidth,\n  } = props\n\n  const reference = useRef<Element | VirtualElement | null>(null)\n  const popper = useRef<HTMLElement | null>(null)\n  const instance = useRef<Instance | null>(null)\n\n  const cleanup = useRef(() => {})\n\n  const setupPopper = useCallback(() => {\n    if (!enabled || !reference.current || !popper.current) return\n\n    // If popper instance exists, destroy it so we can create a new one\n    cleanup.current?.()\n\n    instance.current = createPopper(reference.current, popper.current, {\n      placement: placementProp,\n      modifiers: [\n        customModifiers.innerArrow,\n        customModifiers.positionArrow,\n        customModifiers.transformOrigin,\n        { ...customModifiers.matchWidth, enabled: !!matchWidth },\n        {\n          name: \"eventListeners\",\n          ...getEventListenerOptions(eventListeners),\n        },\n        {\n          name: \"arrow\",\n          options: { padding: arrowPadding },\n        },\n        {\n          name: \"offset\",\n          options: {\n            offset: offset ?? [0, gutter],\n          },\n        },\n        {\n          name: \"flip\",\n          enabled: !!flip,\n          options: { padding: 8 },\n        },\n        {\n          name: \"preventOverflow\",\n          enabled: !!preventOverflow,\n          options: { boundary },\n        },\n        // allow users override internal modifiers\n        ...modifiers,\n      ],\n      strategy,\n    })\n\n    // force update one-time to fix any positioning issues\n    instance.current.forceUpdate()\n\n    cleanup.current = instance.current.destroy\n  }, [\n    enabled,\n    placementProp,\n    modifiers,\n    matchWidth,\n    eventListeners,\n    arrowPadding,\n    offset,\n    gutter,\n    flip,\n    preventOverflow,\n    boundary,\n    strategy,\n  ])\n\n  useEffect(() => {\n    return () => {\n      /**\n       * Fast refresh might call this function and tear down the popper\n       * even if the reference still exists. This checks against that\n       */\n      if (!reference.current && !popper.current) {\n        instance.current?.destroy()\n        instance.current = null\n      }\n    }\n  }, [])\n\n  const referenceRef = useCallback(\n    <T extends Element | VirtualElement>(node: T | null) => {\n      reference.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getReferenceProps = useCallback<PropGetterV2<\"button\">>(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(referenceRef, ref),\n    }),\n    [referenceRef],\n  )\n\n  const popperRef = useCallback(\n    <T extends HTMLElement>(node: T | null) => {\n      popper.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getPopperProps = useCallback<PropGetterV2<\"div\">>(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(popperRef, ref),\n      style: {\n        ...props.style,\n        position: strategy,\n        minWidth: \"max-content\",\n        inset: \"0 auto auto 0\",\n      },\n    }),\n    [strategy, popperRef],\n  )\n\n  const getArrowProps = useCallback<PropGetterV2<\"div\", ArrowCSSVarProps>>(\n    (props = {}, ref = null) => {\n      const { size, shadowColor, bg, style, ...rest } = props\n      return {\n        ...rest,\n        ref,\n        \"data-popper-arrow\": \"\",\n        style: getArrowStyle(props),\n      }\n    },\n    [],\n  )\n\n  const getArrowInnerProps = useCallback<PropGetterV2<\"div\">>(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      \"data-popper-arrow-inner\": \"\",\n    }),\n    [],\n  )\n\n  return {\n    update() {\n      instance.current?.update()\n    },\n    forceUpdate() {\n      instance.current?.forceUpdate()\n    },\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getReferenceProps,\n  }\n}\n\nfunction getArrowStyle(props: any) {\n  const { size, shadowColor, bg, style } = props\n  const computedStyle = { ...style, position: \"absolute\" }\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size\n  }\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor\n  }\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg\n  }\n  return computedStyle\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n"]},"metadata":{},"sourceType":"module"}