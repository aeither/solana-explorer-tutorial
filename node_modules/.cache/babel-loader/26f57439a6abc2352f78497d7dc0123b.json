{"ast":null,"code":"import _defineProperty from \"/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra } from \"@chakra-ui/system\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nexport var ControlBox = function ControlBox(props) {\n  var _css;\n\n  var _props$type = props.type,\n      type = _props$type === void 0 ? \"checkbox\" : _props$type,\n      _hover = props._hover,\n      _invalid = props._invalid,\n      _disabled = props._disabled,\n      _focus = props._focus,\n      _checked = props._checked,\n      _props$_child = props._child,\n      _child = _props$_child === void 0 ? {\n    opacity: 0\n  } : _props$_child,\n      _props$_checkedAndChi = props._checkedAndChild,\n      _checkedAndChild = _props$_checkedAndChi === void 0 ? {\n    opacity: 1\n  } : _props$_checkedAndChi,\n      _checkedAndDisabled = props._checkedAndDisabled,\n      _checkedAndFocus = props._checkedAndFocus,\n      _checkedAndHover = props._checkedAndHover,\n      children = props.children,\n      rest = _objectWithoutPropertiesLoose(props, [\"type\", \"_hover\", \"_invalid\", \"_disabled\", \"_focus\", \"_checked\", \"_child\", \"_checkedAndChild\", \"_checkedAndDisabled\", \"_checkedAndFocus\", \"_checkedAndHover\", \"children\"]);\n\n  var checkedAndDisabled = \"input[type=\" + type + \"]:checked:disabled + &\";\n  var checkedAndHover = \"input[type=\" + type + \"]:checked:hover:not(:disabled) + &\";\n  var checkedAndFocus = \"input[type=\" + type + \"]:checked:focus + &\";\n  var disabled = \"input[type=\" + type + \"]:disabled + &\";\n  var focus = \"input[type=\" + type + \"]:focus + &\";\n  var hover = \"input[type=\" + type + \"]:hover:not(:disabled):not(:checked) + &\";\n  var checked = \"input[type=\" + type + \"]:checked + &, input[type=\" + type + \"][aria-checked=mixed] + &\";\n  var invalid = \"input[type=\" + type + \"][aria-invalid=true] + &\";\n  var child = \"& > *\";\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, rest, {\n    \"aria-hidden\": true,\n    __css: (_css = {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      transitionProperty: \"common\",\n      transitionDuration: \"fast\",\n      flexShrink: 0\n    }, _defineProperty(_css, focus, _focus), _defineProperty(_css, hover, _hover), _defineProperty(_css, disabled, _disabled), _defineProperty(_css, invalid, _invalid), _defineProperty(_css, checkedAndDisabled, _checkedAndDisabled), _defineProperty(_css, checkedAndFocus, _checkedAndFocus), _defineProperty(_css, checkedAndHover, _checkedAndHover), _defineProperty(_css, child, _child), _defineProperty(_css, checked, _extends({}, _checked, _defineProperty({}, child, _checkedAndChild))), _css)\n  }), children);\n};\n\nif (__DEV__) {\n  ControlBox.displayName = \"ControlBox\";\n}\n\nexport default ControlBox;","map":{"version":3,"sources":["../../src/control-box.tsx"],"names":["ControlBox","props","type","_child","opacity","_checkedAndChild","children","checkedAndDisabled","checkedAndHover","checkedAndFocus","disabled","focus","hover","checked","invalid","child","display","alignItems","justifyContent","transitionProperty","transitionDuration","flexShrink"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,OAAA,QAAA,kBAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AAuBA,OAAO,IAAMA,UAAqC,GAAIC,SAAzCD,UAAyCC,CAAAA,KAAD,EAAW;AAAA;;AAC9D,oBAAA,KAAA,CACEC,IADF;AAAA,MACEA,IADF,4BAAM,UAAN;AAAA,MAAM,MAAN,GAAA,KAAA,CAAM,MAAN;AAAA,MAAM,QAAN,GAAA,KAAA,CAAM,QAAN;AAAA,MAAM,SAAN,GAAA,KAAA,CAAM,SAAN;AAAA,MAAM,MAAN,GAAA,KAAA,CAAM,MAAN;AAAA,MAAM,QAAN,GAAA,KAAA,CAAM,QAAN;AAAA,sBAAA,KAAA,CAOEC,MAPF;AAAA,MAOEA,MAPF,8BAOW;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAPX;AAAA,8BAAA,KAAA,CAQEC,gBARF;AAAA,MAQEA,gBARF,sCAQqB;AAAED,IAAAA,OAAO,EAAE;AAAX,GARrB;AAAA,MAAM,mBAAN,GAAA,KAAA,CAAM,mBAAN;AAAA,MAAM,gBAAN,GAAA,KAAA,CAAM,gBAAN;AAAA,MAAM,gBAAN,GAAA,KAAA,CAAM,gBAAN;AAAA,MAYEE,QAZF,GAAA,KAAA,CAYEA,QAZF;AAAA,MAAA,IAAA,GAAA,6BAAA,CAAA,KAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,qBAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,UAAA,CAAA,CAAA;;AAgBA,MAAMC,kBAAkB,GAAA,gBAAA,IAAA,GAAxB,wBAAA;AACA,MAAMC,eAAe,GAAA,gBAAA,IAAA,GAArB,oCAAA;AACA,MAAMC,eAAe,GAAA,gBAAA,IAAA,GAArB,qBAAA;AACA,MAAMC,QAAQ,GAAA,gBAAA,IAAA,GAAd,gBAAA;AACA,MAAMC,KAAK,GAAA,gBAAA,IAAA,GAAX,aAAA;AACA,MAAMC,KAAK,GAAA,gBAAA,IAAA,GAAX,0CAAA;AACA,MAAMC,OAAO,GAAA,gBAAA,IAAA,GAAA,4BAAA,GAAA,IAAA,GAAb,2BAAA;AACA,MAAMC,OAAO,GAAA,gBAAA,IAAA,GAAb,0BAAA;AACA,MAAMC,KAAK,GAAX,OAAA;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAC,MAAD,CAAA,GAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,mBAFF,IAAA;AAGE,IAAA,KAAK;AACHC,MAAAA,OAAO,EADF,aAAF;AAEHC,MAAAA,UAAU,EAFL,QAAF;AAGHC,MAAAA,cAAc,EAHT,QAAF;AAIHC,MAAAA,kBAAkB,EAJb,QAAF;AAKHC,MAAAA,kBAAkB,EALb,MAAF;AAMHC,MAAAA,UAAU,EANL;AAAF,6BAOH,KAPG,EAAE,MAAF,yBAQH,KARG,EAAE,MAAF,yBASH,QATG,EAAE,SAAF,yBAUH,OAVG,EAAE,QAAF,yBAWH,kBAXG,EAAE,mBAAF,yBAYH,eAZG,EAAE,gBAAF,yBAaH,eAbG,EAAE,gBAAF,yBAcH,KAdG,EAAE,MAAF,yBAeH,OAfG,EAeH,QAAA,CAAA,EAAA,EAAA,QAAA,sBAEE,KAFF,EAEWhB,gBAFX,EAfG;AAHP,GAAA,CAAA,EADF,QACE,CADF;AA3BK,CAAA;;AAyDP,IAAA,OAAA,EAAa;AACXL,EAAAA,UAAU,CAAVA,WAAAA,GAAAA,YAAAA;AACD;;AAED,eAAA,UAAA","sourcesContent":["import { chakra, SystemStyleObject, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface ControlBoxOptions {\n  type?: \"checkbox\" | \"radio\"\n  _hover?: SystemStyleObject\n  _invalid?: SystemStyleObject\n  _disabled?: SystemStyleObject\n  _focus?: SystemStyleObject\n  _checked?: SystemStyleObject\n  _child?: SystemStyleObject\n  _checkedAndChild?: SystemStyleObject\n  _checkedAndDisabled?: SystemStyleObject\n  _checkedAndFocus?: SystemStyleObject\n  _checkedAndHover?: SystemStyleObject\n}\n\nexport type IControlBox = ControlBoxOptions\n\ninterface BaseControlProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof ControlBoxOptions> {}\n\nexport interface ControlBoxProps extends BaseControlProps, ControlBoxOptions {}\n\nexport const ControlBox: React.FC<ControlBoxProps> = (props) => {\n  const {\n    type = \"checkbox\",\n    _hover,\n    _invalid,\n    _disabled,\n    _focus,\n    _checked,\n    _child = { opacity: 0 },\n    _checkedAndChild = { opacity: 1 },\n    _checkedAndDisabled,\n    _checkedAndFocus,\n    _checkedAndHover,\n    children,\n    ...rest\n  } = props\n\n  const checkedAndDisabled = `input[type=${type}]:checked:disabled + &`\n  const checkedAndHover = `input[type=${type}]:checked:hover:not(:disabled) + &`\n  const checkedAndFocus = `input[type=${type}]:checked:focus + &`\n  const disabled = `input[type=${type}]:disabled + &`\n  const focus = `input[type=${type}]:focus + &`\n  const hover = `input[type=${type}]:hover:not(:disabled):not(:checked) + &`\n  const checked = `input[type=${type}]:checked + &, input[type=${type}][aria-checked=mixed] + &`\n  const invalid = `input[type=${type}][aria-invalid=true] + &`\n  const child = `& > *`\n\n  return (\n    <chakra.div\n      {...rest}\n      aria-hidden\n      __css={{\n        display: \"inline-flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        transitionProperty: \"common\",\n        transitionDuration: \"fast\",\n        flexShrink: 0,\n        [focus]: _focus,\n        [hover]: _hover,\n        [disabled]: _disabled,\n        [invalid]: _invalid,\n        [checkedAndDisabled]: _checkedAndDisabled,\n        [checkedAndFocus]: _checkedAndFocus,\n        [checkedAndHover]: _checkedAndHover,\n        [child]: _child,\n        [checked]: {\n          ..._checked,\n          [child]: _checkedAndChild,\n        },\n      }}\n    >\n      {children}\n    </chakra.div>\n  )\n}\n\nif (__DEV__) {\n  ControlBox.displayName = \"ControlBox\"\n}\n\nexport default ControlBox\n"]},"metadata":{},"sourceType":"module"}