{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { TransitionDefaults, withDelay } from \"./transition-utils\";\nvar variants = {\n  exit: function exit(_ref) {\n    var _transition$exit;\n\n    var reverse = _ref.reverse,\n        initialScale = _ref.initialScale,\n        transition = _ref.transition,\n        transitionEnd = _ref.transitionEnd,\n        delay = _ref.delay;\n    return _extends({\n      opacity: 0\n    }, reverse ? {\n      scale: initialScale,\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    } : {\n      transitionEnd: _extends({\n        scale: initialScale\n      }, transitionEnd == null ? void 0 : transitionEnd.exit)\n    }, {\n      transition: (_transition$exit = transition == null ? void 0 : transition.exit) != null ? _transition$exit : withDelay.exit(TransitionDefaults.exit, delay)\n    });\n  },\n  enter: function enter(_ref2) {\n    var _transition$enter;\n\n    var transitionEnd = _ref2.transitionEnd,\n        transition = _ref2.transition,\n        delay = _ref2.delay;\n    return {\n      opacity: 1,\n      scale: 1,\n      transition: (_transition$enter = transition == null ? void 0 : transition.enter) != null ? _transition$enter : withDelay.enter(TransitionDefaults.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  }\n};\nexport var scaleFadeConfig = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants\n};\nexport var ScaleFade = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var unmountOnExit = props.unmountOnExit,\n      isOpen = props.in,\n      _props$reverse = props.reverse,\n      reverse = _props$reverse === void 0 ? true : _props$reverse,\n      _props$initialScale = props.initialScale,\n      initialScale = _props$initialScale === void 0 ? 0.95 : _props$initialScale,\n      className = props.className,\n      transition = props.transition,\n      transitionEnd = props.transitionEnd,\n      delay = props.delay,\n      rest = _objectWithoutPropertiesLoose(props, [\"unmountOnExit\", \"in\", \"reverse\", \"initialScale\", \"className\", \"transition\", \"transitionEnd\", \"delay\"]);\n\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var custom = {\n    initialScale: initialScale,\n    reverse: reverse,\n    transition: transition,\n    transitionEnd: transitionEnd,\n    delay: delay\n  };\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    custom: custom\n  }, show && /*#__PURE__*/React.createElement(motion.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-offset-slide\", className)\n  }, scaleFadeConfig, {\n    animate: animate,\n    custom: custom\n  }, rest)));\n});\n\nif (__DEV__) {\n  ScaleFade.displayName = \"ScaleFade\";\n}","map":{"version":3,"sources":["../../src/scale-fade.tsx"],"names":["variants","exit","delay","opacity","reverse","scale","transitionEnd","initialScale","transition","withDelay","TransitionDefaults","enter","scaleFadeConfig","initial","animate","ScaleFade","in","show","unmountOnExit","isOpen","custom","cx"],"mappings":"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","sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  TransitionDefaults,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface ScaleFadeOptions {\n  /**\n   * The initial scale of the element\n   * @default 0.95\n   */\n  initialScale?: number\n  /**\n   * If `true`, the element will transition back to exit state\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<ScaleFadeOptions> = {\n  exit: ({ reverse, initialScale, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    ...(reverse\n      ? { scale: initialScale, transitionEnd: transitionEnd?.exit }\n      : { transitionEnd: { scale: initialScale, ...transitionEnd?.exit } }),\n    transition:\n      transition?.exit ?? withDelay.exit(TransitionDefaults.exit, delay),\n  }),\n  enter: ({ transitionEnd, transition, delay }) => ({\n    opacity: 1,\n    scale: 1,\n    transition:\n      transition?.enter ?? withDelay.enter(TransitionDefaults.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n}\n\nexport const scaleFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface ScaleFadeProps\n  extends ScaleFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const ScaleFade = React.forwardRef<HTMLDivElement, ScaleFadeProps>(\n  (props, ref) => {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      initialScale = 0.95,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = { initialScale, reverse, transition, transitionEnd, delay }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            {...scaleFadeConfig}\n            animate={animate}\n            custom={custom}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  ScaleFade.displayName = \"ScaleFade\"\n}\n"]},"metadata":{},"sourceType":"module"}