{"ast":null,"code":"import { __assign } from 'tslib';\nimport { number, alpha } from '../numbers/index.js';\nimport { sanitize, clamp } from '../utils.js';\nimport { isColorString, splitColor } from './utils.js';\nvar clampRgbUnit = clamp(0, 255);\n\nvar rgbUnit = __assign(__assign({}, number), {\n  transform: function transform(v) {\n    return Math.round(clampRgbUnit(v));\n  }\n});\n\nvar rgba = {\n  test: isColorString('rgb', 'red'),\n  parse: splitColor('red', 'green', 'blue'),\n  transform: function transform(_a) {\n    var red = _a.red,\n        green = _a.green,\n        blue = _a.blue,\n        _b = _a.alpha,\n        alpha$1 = _b === void 0 ? 1 : _b;\n    return 'rgba(' + rgbUnit.transform(red) + ', ' + rgbUnit.transform(green) + ', ' + rgbUnit.transform(blue) + ', ' + sanitize(alpha.transform(alpha$1)) + ')';\n  }\n};\nexport { rgbUnit, rgba };","map":{"version":3,"sources":["/Users/lin/Documents/Projects/solana-explorer-tutorial/node_modules/style-value-types/dist/es/color/rgba.js"],"names":["__assign","number","alpha","sanitize","clamp","isColorString","splitColor","clampRgbUnit","rgbUnit","transform","v","Math","round","rgba","test","parse","_a","red","green","blue","_b","alpha$1"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,qBAA9B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,aAAhC;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,YAA1C;AAEA,IAAIC,YAAY,GAAGH,KAAK,CAAC,CAAD,EAAI,GAAJ,CAAxB;;AACA,IAAII,OAAO,GAAGR,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKC,MAAL,CAAT,EAAuB;AAAEQ,EAAAA,SAAS,EAAE,mBAAUC,CAAV,EAAa;AAAE,WAAOC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACG,CAAD,CAAvB,CAAP;AAAqC;AAAjE,CAAvB,CAAtB;;AACA,IAAIG,IAAI,GAAG;AACPC,EAAAA,IAAI,EAAET,aAAa,CAAC,KAAD,EAAQ,KAAR,CADZ;AAEPU,EAAAA,KAAK,EAAET,UAAU,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,CAFV;AAGPG,EAAAA,SAAS,EAAE,mBAAUO,EAAV,EAAc;AACrB,QAAIC,GAAG,GAAGD,EAAE,CAACC,GAAb;AAAA,QAAkBC,KAAK,GAAGF,EAAE,CAACE,KAA7B;AAAA,QAAoCC,IAAI,GAAGH,EAAE,CAACG,IAA9C;AAAA,QAAoDC,EAAE,GAAGJ,EAAE,CAACd,KAA5D;AAAA,QAAmEmB,OAAO,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,EAAjG;AACA,WAAO,UACHZ,OAAO,CAACC,SAAR,CAAkBQ,GAAlB,CADG,GAEH,IAFG,GAGHT,OAAO,CAACC,SAAR,CAAkBS,KAAlB,CAHG,GAIH,IAJG,GAKHV,OAAO,CAACC,SAAR,CAAkBU,IAAlB,CALG,GAMH,IANG,GAOHhB,QAAQ,CAACD,KAAK,CAACO,SAAN,CAAgBY,OAAhB,CAAD,CAPL,GAQH,GARJ;AASH;AAdM,CAAX;AAiBA,SAASb,OAAT,EAAkBK,IAAlB","sourcesContent":["import { __assign } from 'tslib';\nimport { number, alpha } from '../numbers/index.js';\nimport { sanitize, clamp } from '../utils.js';\nimport { isColorString, splitColor } from './utils.js';\n\nvar clampRgbUnit = clamp(0, 255);\nvar rgbUnit = __assign(__assign({}, number), { transform: function (v) { return Math.round(clampRgbUnit(v)); } });\nvar rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: function (_a) {\n        var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha$1 = _b === void 0 ? 1 : _b;\n        return 'rgba(' +\n            rgbUnit.transform(red) +\n            ', ' +\n            rgbUnit.transform(green) +\n            ', ' +\n            rgbUnit.transform(blue) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')';\n    },\n};\n\nexport { rgbUnit, rgba };\n"]},"metadata":{},"sourceType":"module"}