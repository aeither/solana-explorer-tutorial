{"version":3,"sources":["../../src/text.tsx"],"names":["chakra","forwardRef","omitThemingProps","useStyleConfig","cx","__DEV__","filterUndefined","React","Text","props","ref","styles","rest","aliasedProps","textAlign","align","textDecoration","decoration","textTransform","casing","className","displayName"],"mappings":";;;;AAAA,SACEA,MADF,EAEEC,UAFF,EAGEC,gBAHF,EAMEC,cANF,QAQO,mBARP;AASA,SAASC,EAAT,EAAaC,OAAb,EAAsBC,eAAtB,QAA6C,kBAA7C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAoBA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,IAAI,gBAAGP,UAAU,CAAiB,CAACQ,KAAD,EAAQC,GAAR,KAAgB;AAC7D,MAAMC,MAAM,GAAGR,cAAc,CAAC,MAAD,EAASM,KAAT,CAA7B;;AACA,0BAA0DP,gBAAgB,CACxEO,KADwE,CAA1E;AAAA,MAAiDG,IAAjD;;AAIA,MAAMC,YAAY,GAAGP,eAAe,CAAC;AACnCQ,IAAAA,SAAS,EAAEL,KAAK,CAACM,KADkB;AAEnCC,IAAAA,cAAc,EAAEP,KAAK,CAACQ,UAFa;AAGnCC,IAAAA,aAAa,EAAET,KAAK,CAACU;AAHc,GAAD,CAApC;AAMA,sBACE,oBAAC,MAAD,CAAQ,CAAR;AACE,IAAA,GAAG,EAAET,GADP;AAEE,IAAA,SAAS,EAAEN,EAAE,CAAC,aAAD,EAAgBK,KAAK,CAACW,SAAtB;AAFf,KAGMP,YAHN,EAIMD,IAJN;AAKE,IAAA,KAAK,EAAED;AALT,KADF;AASD,CArB6B,CAAvB;;AAuBP,IAAIN,OAAJ,EAAa;AACXG,EAAAA,IAAI,CAACa,WAAL,GAAmB,MAAnB;AACD","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__, filterUndefined } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">((props, ref) => {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(\n    props,\n  )\n\n  const aliasedProps = filterUndefined({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nif (__DEV__) {\n  Text.displayName = \"Text\"\n}\n"],"file":"text.js"}