{"ast":null,"code":"import { alertAnatomy as parts } from \"@chakra-ui/anatomy\";\nimport { getColor, mode, transparentize } from \"@chakra-ui/theme-tools\";\nvar baseStyle = {\n  container: {\n    px: 4,\n    py: 3\n  },\n  title: {\n    fontWeight: \"bold\",\n    lineHeight: 6,\n    marginEnd: 2\n  },\n  description: {\n    lineHeight: 6\n  },\n  icon: {\n    flexShrink: 0,\n    marginEnd: 3,\n    w: 5,\n    h: 6\n  }\n};\n\nfunction getBg(props) {\n  var theme = props.theme,\n      c = props.colorScheme;\n  var lightBg = getColor(theme, c + \".100\", c);\n  var darkBg = transparentize(c + \".200\", 0.16)(theme);\n  return mode(lightBg, darkBg)(props);\n}\n\nvar variantSubtle = function variantSubtle(props) {\n  var c = props.colorScheme;\n  return {\n    container: {\n      bg: getBg(props)\n    },\n    icon: {\n      color: mode(c + \".500\", c + \".200\")(props)\n    }\n  };\n};\n\nvar variantLeftAccent = function variantLeftAccent(props) {\n  var c = props.colorScheme;\n  return {\n    container: {\n      paddingStart: 3,\n      borderStartWidth: \"4px\",\n      borderStartColor: mode(c + \".500\", c + \".200\")(props),\n      bg: getBg(props)\n    },\n    icon: {\n      color: mode(c + \".500\", c + \".200\")(props)\n    }\n  };\n};\n\nvar variantTopAccent = function variantTopAccent(props) {\n  var c = props.colorScheme;\n  return {\n    container: {\n      pt: 2,\n      borderTopWidth: \"4px\",\n      borderTopColor: mode(c + \".500\", c + \".200\")(props),\n      bg: getBg(props)\n    },\n    icon: {\n      color: mode(c + \".500\", c + \".200\")(props)\n    }\n  };\n};\n\nvar variantSolid = function variantSolid(props) {\n  var c = props.colorScheme;\n  return {\n    container: {\n      bg: mode(c + \".500\", c + \".200\")(props),\n      color: mode(\"white\", \"gray.900\")(props)\n    }\n  };\n};\n\nvar variants = {\n  subtle: variantSubtle,\n  \"left-accent\": variantLeftAccent,\n  \"top-accent\": variantTopAccent,\n  solid: variantSolid\n};\nvar defaultProps = {\n  variant: \"subtle\",\n  colorScheme: \"blue\"\n};\nexport default {\n  parts: parts.keys,\n  baseStyle: baseStyle,\n  variants: variants,\n  defaultProps: defaultProps\n};","map":{"version":3,"sources":["../../../src/components/alert.ts"],"names":["alertAnatomy","baseStyle","container","px","py","title","fontWeight","lineHeight","marginEnd","description","icon","flexShrink","w","h","colorScheme","c","lightBg","getColor","darkBg","transparentize","mode","variantSubtle","props","bg","getBg","color","variantLeftAccent","paddingStart","borderStartWidth","borderStartColor","variantTopAccent","pt","borderTopWidth","borderTopColor","variantSolid","variants","subtle","solid","defaultProps","variant","parts"],"mappings":"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","sourcesContent":["import { alertAnatomy as parts } from \"@chakra-ui/anatomy\"\nimport { getColor, mode, transparentize } from \"@chakra-ui/theme-tools\"\nimport type {\n  PartsStyleObject,\n  PartsStyleFunction,\n  StyleFunctionProps,\n} from \"@chakra-ui/theme-tools\"\n\nconst baseStyle: PartsStyleObject<typeof parts> = {\n  container: {\n    px: 4,\n    py: 3,\n  },\n  title: {\n    fontWeight: \"bold\",\n    lineHeight: 6,\n    marginEnd: 2,\n  },\n  description: {\n    lineHeight: 6,\n  },\n  icon: {\n    flexShrink: 0,\n    marginEnd: 3,\n    w: 5,\n    h: 6,\n  },\n}\n\nfunction getBg(props: StyleFunctionProps): string {\n  const { theme, colorScheme: c } = props\n  const lightBg = getColor(theme, `${c}.100`, c)\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme)\n  return mode(lightBg, darkBg)(props)\n}\n\nconst variantSubtle: PartsStyleFunction<typeof parts> = (props) => {\n  const { colorScheme: c } = props\n  return {\n    container: { bg: getBg(props) },\n    icon: { color: mode(`${c}.500`, `${c}.200`)(props) },\n  }\n}\n\nconst variantLeftAccent: PartsStyleFunction<typeof parts> = (props) => {\n  const { colorScheme: c } = props\n  return {\n    container: {\n      paddingStart: 3,\n      borderStartWidth: \"4px\",\n      borderStartColor: mode(`${c}.500`, `${c}.200`)(props),\n      bg: getBg(props),\n    },\n    icon: {\n      color: mode(`${c}.500`, `${c}.200`)(props),\n    },\n  }\n}\n\nconst variantTopAccent: PartsStyleFunction<typeof parts> = (props) => {\n  const { colorScheme: c } = props\n  return {\n    container: {\n      pt: 2,\n      borderTopWidth: \"4px\",\n      borderTopColor: mode(`${c}.500`, `${c}.200`)(props),\n      bg: getBg(props),\n    },\n    icon: {\n      color: mode(`${c}.500`, `${c}.200`)(props),\n    },\n  }\n}\n\nconst variantSolid: PartsStyleFunction<typeof parts> = (props) => {\n  const { colorScheme: c } = props\n  return {\n    container: {\n      bg: mode(`${c}.500`, `${c}.200`)(props),\n      color: mode(`white`, `gray.900`)(props),\n    },\n  }\n}\n\nconst variants = {\n  subtle: variantSubtle,\n  \"left-accent\": variantLeftAccent,\n  \"top-accent\": variantTopAccent,\n  solid: variantSolid,\n}\n\nconst defaultProps = {\n  variant: \"subtle\",\n  colorScheme: \"blue\",\n}\n\nexport default {\n  parts: parts.keys,\n  baseStyle,\n  variants,\n  defaultProps,\n}\n"]},"metadata":{},"sourceType":"module"}