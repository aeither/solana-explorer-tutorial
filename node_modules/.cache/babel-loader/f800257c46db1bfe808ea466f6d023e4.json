{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n */\n\nexport var Container = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      centerContent = _omitThemingProps.centerContent,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\", \"centerContent\"]);\n\n  var styles = useStyleConfig(\"Container\", props);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-container\", className)\n  }, rest, {\n    __css: _extends({}, styles, centerContent && {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    })\n  }));\n});\n\nif (__DEV__) {\n  Container.displayName = \"Container\";\n}","map":{"version":3,"sources":["../../src/container.tsx"],"names":["Container","forwardRef","centerContent","omitThemingProps","styles","useStyleConfig","cx","display","flexDirection","alignItems"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,MAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,cAAA,QAAA,mBAAA;AAQA,SAAA,EAAA,EAAA,OAAA,QAAA,kBAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMA,SAAS,GAAA,aAAGC,UAAU,CAAwB,UAAA,KAAA,EAAA,GAAA,EAAgB;AACzE,MAAA,iBAAA,GAA8CE,gBAAgB,CAA9D,KAA8D,CAA9D;AAAA,MAAM,SAAN,GAAA,iBAAA,CAAM,SAAN;AAAA,MAAmBD,aAAnB,GAAA,iBAAA,CAAmBA,aAAnB;AAAA,MAAA,IAAA,GAAA,6BAAA,CAAA,iBAAA,EAAA,CAAA,WAAA,EAAA,eAAA,CAAA,CAAA;;AAEA,MAAME,MAAM,GAAGC,cAAc,CAAA,WAAA,EAA7B,KAA6B,CAA7B;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAC,MAAD,CAAA,GAAA,EAAA,QAAA,CAAA;AACE,IAAA,GAAG,EADL,GAAA;AAEE,IAAA,SAAS,EAAEC,EAAE,CAAA,kBAAA,EAAA,SAAA;AAFf,GAAA,EAAA,IAAA,EAAA;AAIE,IAAA,KAAK,EAAA,QAAA,CAAA,EAAA,EAAA,MAAA,EAECJ,aAAa,IAAI;AACnBK,MAAAA,OAAO,EADY,MAAA;AAEnBC,MAAAA,aAAa,EAFM,QAAA;AAGnBC,MAAAA,UAAU,EAAE;AAHO,KAFlB;AAJP,GAAA,CAAA,CADF;AALK,CAA4B,CAA5B;;AAsBP,IAAA,OAAA,EAAa;AACXT,EAAAA,SAAS,CAATA,WAAAA,GAAAA,WAAAA;AACD","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n */\nexport const Container = forwardRef<ContainerProps, \"div\">((props, ref) => {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nif (__DEV__) {\n  Container.displayName = \"Container\"\n}\n"]},"metadata":{},"sourceType":"module"}