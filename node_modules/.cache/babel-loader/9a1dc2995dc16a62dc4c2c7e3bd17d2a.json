{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { progressAnatomy as parts } from \"@chakra-ui/anatomy\";\nimport { generateStripe, getColor, mode } from \"@chakra-ui/theme-tools\";\n\nfunction filledStyle(props) {\n  var c = props.colorScheme,\n      t = props.theme,\n      isIndeterminate = props.isIndeterminate,\n      hasStripe = props.hasStripe;\n  var stripeStyle = mode(generateStripe(), generateStripe(\"1rem\", \"rgba(0,0,0,0.1)\"))(props);\n  var bgColor = mode(c + \".500\", c + \".200\")(props);\n  var gradient = \"linear-gradient(\\n    to right,\\n    transparent 0%,\\n    \" + getColor(t, bgColor) + \" 50%,\\n    transparent 100%\\n  )\";\n  var addStripe = !isIndeterminate && hasStripe;\n  return _extends({}, addStripe && stripeStyle, isIndeterminate ? {\n    bgImage: gradient\n  } : {\n    bgColor: bgColor\n  });\n}\n\nvar baseStyleLabel = {\n  lineHeight: \"1\",\n  fontSize: \"0.25em\",\n  fontWeight: \"bold\",\n  color: \"white\"\n};\n\nvar baseStyleTrack = function baseStyleTrack(props) {\n  return {\n    bg: mode(\"gray.100\", \"whiteAlpha.300\")(props)\n  };\n};\n\nvar baseStyleFilledTrack = function baseStyleFilledTrack(props) {\n  return _extends({\n    transitionProperty: \"common\",\n    transitionDuration: \"slow\"\n  }, filledStyle(props));\n};\n\nvar baseStyle = function baseStyle(props) {\n  return {\n    label: baseStyleLabel,\n    filledTrack: baseStyleFilledTrack(props),\n    track: baseStyleTrack(props)\n  };\n};\n\nvar sizes = {\n  xs: {\n    track: {\n      h: \"0.25rem\"\n    }\n  },\n  sm: {\n    track: {\n      h: \"0.5rem\"\n    }\n  },\n  md: {\n    track: {\n      h: \"0.75rem\"\n    }\n  },\n  lg: {\n    track: {\n      h: \"1rem\"\n    }\n  }\n};\nvar defaultProps = {\n  size: \"md\",\n  colorScheme: \"blue\"\n};\nexport default {\n  parts: parts.keys,\n  sizes: sizes,\n  baseStyle: baseStyle,\n  defaultProps: defaultProps\n};","map":{"version":3,"sources":["../../../src/components/progress.ts"],"names":["progressAnatomy","colorScheme","theme","hasStripe","stripeStyle","mode","generateStripe","bgColor","c","gradient","getColor","addStripe","isIndeterminate","bgImage","baseStyleLabel","lineHeight","fontSize","fontWeight","color","baseStyleTrack","props","bg","baseStyleFilledTrack","transitionProperty","transitionDuration","filledStyle","baseStyle","label","filledTrack","track","sizes","xs","h","sm","md","lg","defaultProps","size","parts"],"mappings":"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","sourcesContent":["import { progressAnatomy as parts } from \"@chakra-ui/anatomy\"\nimport {\n  generateStripe,\n  getColor,\n  mode,\n  PartsStyleFunction,\n  PartsStyleObject,\n  StyleFunctionProps,\n} from \"@chakra-ui/theme-tools\"\nimport type {\n  SystemStyleObject,\n  SystemStyleFunction,\n} from \"@chakra-ui/theme-tools\"\n\nfunction filledStyle(props: StyleFunctionProps): SystemStyleObject {\n  const { colorScheme: c, theme: t, isIndeterminate, hasStripe } = props\n\n  const stripeStyle = mode(\n    generateStripe(),\n    generateStripe(\"1rem\", \"rgba(0,0,0,0.1)\"),\n  )(props)\n\n  const bgColor = mode(`${c}.500`, `${c}.200`)(props)\n\n  const gradient = `linear-gradient(\n    to right,\n    transparent 0%,\n    ${getColor(t, bgColor)} 50%,\n    transparent 100%\n  )`\n\n  const addStripe = !isIndeterminate && hasStripe\n\n  return {\n    ...(addStripe && stripeStyle),\n    ...(isIndeterminate ? { bgImage: gradient } : { bgColor }),\n  }\n}\n\nconst baseStyleLabel: SystemStyleObject = {\n  lineHeight: \"1\",\n  fontSize: \"0.25em\",\n  fontWeight: \"bold\",\n  color: \"white\",\n}\n\nconst baseStyleTrack: SystemStyleFunction = (props) => {\n  return {\n    bg: mode(\"gray.100\", \"whiteAlpha.300\")(props),\n  }\n}\n\nconst baseStyleFilledTrack: SystemStyleFunction = (props) => {\n  return {\n    transitionProperty: \"common\",\n    transitionDuration: \"slow\",\n    ...filledStyle(props),\n  }\n}\n\nconst baseStyle: PartsStyleFunction<typeof parts> = (props) => ({\n  label: baseStyleLabel,\n  filledTrack: baseStyleFilledTrack(props),\n  track: baseStyleTrack(props),\n})\n\nconst sizes: Record<string, PartsStyleObject<typeof parts>> = {\n  xs: {\n    track: { h: \"0.25rem\" },\n  },\n  sm: {\n    track: { h: \"0.5rem\" },\n  },\n  md: {\n    track: { h: \"0.75rem\" },\n  },\n  lg: {\n    track: { h: \"1rem\" },\n  },\n}\n\nconst defaultProps = {\n  size: \"md\",\n  colorScheme: \"blue\",\n}\n\nexport default {\n  parts: parts.keys,\n  sizes,\n  baseStyle,\n  defaultProps,\n}\n"]},"metadata":{},"sourceType":"module"}