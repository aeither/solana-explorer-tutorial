{"ast":null,"code":"import { isBrowser } from \"./dom\";\n\nfunction getUserAgentBrowser(navigator) {\n  var ua = navigator.userAgent,\n      vendor = navigator.vendor;\n  var android = /(android)/i.test(ua);\n\n  switch (true) {\n    case /CriOS/.test(ua):\n      return \"Chrome for iOS\";\n\n    case /Edg\\//.test(ua):\n      return \"Edge\";\n\n    case android && /Silk\\//.test(ua):\n      return \"Silk\";\n\n    case /Chrome/.test(ua) && /Google Inc/.test(vendor):\n      return \"Chrome\";\n\n    case /Firefox\\/\\d+\\.\\d+$/.test(ua):\n      return \"Firefox\";\n\n    case android:\n      return \"AOSP\";\n\n    case /MSIE|Trident/.test(ua):\n      return \"IE\";\n\n    case /Safari/.test(navigator.userAgent) && /Apple Computer/.test(ua):\n      return \"Safari\";\n\n    case /AppleWebKit/.test(ua):\n      return \"WebKit\";\n\n    default:\n      return null;\n  }\n}\n\nfunction getUserAgentOS(navigator) {\n  var ua = navigator.userAgent,\n      platform = navigator.platform;\n\n  switch (true) {\n    case /Android/.test(ua):\n      return \"Android\";\n\n    case /iPhone|iPad|iPod/.test(platform):\n      return \"iOS\";\n\n    case /Win/.test(platform):\n      return \"Windows\";\n\n    case /Mac/.test(platform):\n      return \"Mac\";\n\n    case /CrOS/.test(ua):\n      return \"Chrome OS\";\n\n    case /Firefox/.test(ua):\n      return \"Firefox OS\";\n\n    default:\n      return null;\n  }\n}\n\nexport function detectDeviceType(navigator) {\n  var ua = navigator.userAgent;\n  if (/(tablet)|(iPad)|(Nexus 9)/i.test(ua)) return \"tablet\";\n  if (/(mobi)/i.test(ua)) return \"phone\";\n  return \"desktop\";\n}\nexport function detectOS(os) {\n  if (!isBrowser) return false;\n  return getUserAgentOS(window.navigator) === os;\n}\nexport function detectBrowser(browser) {\n  if (!isBrowser) return false;\n  return getUserAgentBrowser(window.navigator) === browser;\n}\nexport function detectTouch() {\n  if (!isBrowser) return false;\n  return window.ontouchstart === null && window.ontouchmove === null && window.ontouchend === null;\n}","map":{"version":3,"sources":["../../src/user-agent.ts"],"names":["userAgent","vendor","android","navigator","platform","ua","getUserAgentOS","window","getUserAgentBrowser"],"mappings":"AAAA,SAAA,SAAA,QAAA,OAAA;;AAEA,SAAA,mBAAA,CAAA,SAAA,EAAmD;AACjD,MAAM,EAAN,GAAA,SAAA,CAAQA,SAAR;AAAA,MAAuBC,MAAvB,GAAA,SAAA,CAAuBA,MAAvB;AACA,MAAMC,OAAO,GAAG,aAAA,IAAA,CAAhB,EAAgB,CAAhB;;AAEA,UAAA,IAAA;AACE,SAAK,QAAA,IAAA,CAAL,EAAK,CAAL;AACE,aAAA,gBAAA;;AACF,SAAK,QAAA,IAAA,CAAL,EAAK,CAAL;AACE,aAAA,MAAA;;AACF,SAAKA,OAAO,IAAI,SAAA,IAAA,CAAhB,EAAgB,CAAhB;AACE,aAAA,MAAA;;AACF,SAAK,SAAA,IAAA,CAAA,EAAA,KAAqB,aAAA,IAAA,CAA1B,MAA0B,CAA1B;AACE,aAAA,QAAA;;AACF,SAAK,qBAAA,IAAA,CAAL,EAAK,CAAL;AACE,aAAA,SAAA;;AACF,SAAA,OAAA;AACE,aAAA,MAAA;;AACF,SAAK,eAAA,IAAA,CAAL,EAAK,CAAL;AACE,aAAA,IAAA;;AACF,SAAK,SAAA,IAAA,CAAcC,SAAS,CAAvB,SAAA,KAAsC,iBAAA,IAAA,CAA3C,EAA2C,CAA3C;AACE,aAAA,QAAA;;AACF,SAAK,cAAA,IAAA,CAAL,EAAK,CAAL;AACE,aAAA,QAAA;;AACF;AACE,aAAA,IAAA;AApBJ;AAsBD;;AAMD,SAAA,cAAA,CAAA,SAAA,EAA8C;AAC5C,MAAM,EAAN,GAAA,SAAA,CAAQH,SAAR;AAAA,MAAuBI,QAAvB,GAAA,SAAA,CAAuBA,QAAvB;;AACA,UAAA,IAAA;AACE,SAAK,UAAA,IAAA,CAAL,EAAK,CAAL;AACE,aAAA,SAAA;;AACF,SAAK,mBAAA,IAAA,CAAL,QAAK,CAAL;AACE,aAAA,KAAA;;AACF,SAAK,MAAA,IAAA,CAAL,QAAK,CAAL;AACE,aAAA,SAAA;;AACF,SAAK,MAAA,IAAA,CAAL,QAAK,CAAL;AACE,aAAA,KAAA;;AACF,SAAK,OAAA,IAAA,CAAL,EAAK,CAAL;AACE,aAAA,WAAA;;AACF,SAAK,UAAA,IAAA,CAAL,EAAK,CAAL;AACE,aAAA,YAAA;;AACF;AACE,aAAA,IAAA;AAdJ;AAgBD;;AAID,OAAO,SAAA,gBAAA,CAAA,SAAA,EAAgD;AACrD,MAAmBC,EAAnB,GAAA,SAAA,CAAQL,SAAR;AACA,MAAI,6BAAA,IAAA,CAAJ,EAAI,CAAJ,EAA2C,OAAA,QAAA;AAC3C,MAAI,UAAA,IAAA,CAAJ,EAAI,CAAJ,EAAwB,OAAA,OAAA;AACxB,SAAA,SAAA;AACD;AAMD,OAAO,SAAA,QAAA,CAAA,EAAA,EAAmC;AACxC,MAAI,CAAJ,SAAA,EAAgB,OAAA,KAAA;AAChB,SAAOM,cAAc,CAACC,MAAM,CAArBD,SAAc,CAAdA,KAAP,EAAA;AACD;AAED,OAAO,SAAA,aAAA,CAAA,OAAA,EAAkD;AACvD,MAAI,CAAJ,SAAA,EAAgB,OAAA,KAAA;AAChB,SAAOE,mBAAmB,CAACD,MAAM,CAA1BC,SAAmB,CAAnBA,KAAP,OAAA;AACD;AAED,OAAO,SAAA,WAAA,GAAuB;AAC5B,MAAI,CAAJ,SAAA,EAAgB,OAAA,KAAA;AAChB,SACED,MAAM,CAANA,YAAAA,KAAAA,IAAAA,IACAA,MAAM,CAANA,WAAAA,KADAA,IAAAA,IAEAA,MAAM,CAANA,UAAAA,KAHF,IAAA;AAKD","sourcesContent":["import { isBrowser } from \"./dom\"\n\nfunction getUserAgentBrowser(navigator: Navigator) {\n  const { userAgent: ua, vendor } = navigator\n  const android = /(android)/i.test(ua)\n\n  switch (true) {\n    case /CriOS/.test(ua):\n      return \"Chrome for iOS\"\n    case /Edg\\//.test(ua):\n      return \"Edge\"\n    case android && /Silk\\//.test(ua):\n      return \"Silk\"\n    case /Chrome/.test(ua) && /Google Inc/.test(vendor):\n      return \"Chrome\"\n    case /Firefox\\/\\d+\\.\\d+$/.test(ua):\n      return \"Firefox\"\n    case android:\n      return \"AOSP\"\n    case /MSIE|Trident/.test(ua):\n      return \"IE\"\n    case /Safari/.test(navigator.userAgent) && /Apple Computer/.test(ua):\n      return \"Safari\"\n    case /AppleWebKit/.test(ua):\n      return \"WebKit\"\n    default:\n      return null\n  }\n}\n\nexport type UserAgentBrowser = NonNullable<\n  ReturnType<typeof getUserAgentBrowser>\n>\n\nfunction getUserAgentOS(navigator: Navigator) {\n  const { userAgent: ua, platform } = navigator\n  switch (true) {\n    case /Android/.test(ua):\n      return \"Android\"\n    case /iPhone|iPad|iPod/.test(platform):\n      return \"iOS\"\n    case /Win/.test(platform):\n      return \"Windows\"\n    case /Mac/.test(platform):\n      return \"Mac\"\n    case /CrOS/.test(ua):\n      return \"Chrome OS\"\n    case /Firefox/.test(ua):\n      return \"Firefox OS\"\n    default:\n      return null\n  }\n}\n\nexport type UserAgentOS = NonNullable<ReturnType<typeof getUserAgentOS>>\n\nexport function detectDeviceType(navigator: Navigator) {\n  const { userAgent: ua } = navigator\n  if (/(tablet)|(iPad)|(Nexus 9)/i.test(ua)) return \"tablet\"\n  if (/(mobi)/i.test(ua)) return \"phone\"\n  return \"desktop\"\n}\n\nexport type UserAgentDeviceType = NonNullable<\n  ReturnType<typeof detectDeviceType>\n>\n\nexport function detectOS(os: UserAgentOS) {\n  if (!isBrowser) return false\n  return getUserAgentOS(window.navigator) === os\n}\n\nexport function detectBrowser(browser: UserAgentBrowser) {\n  if (!isBrowser) return false\n  return getUserAgentBrowser(window.navigator) === browser\n}\n\nexport function detectTouch() {\n  if (!isBrowser) return false\n  return (\n    window.ontouchstart === null &&\n    window.ontouchmove === null &&\n    window.ontouchend === null\n  )\n}\n"]},"metadata":{},"sourceType":"module"}